/* Minification failed. Returning unminified contents.
(6871,177-184): run-time error JS1019: Can't have 'break' outside of loop: break t
(6848,161-168): run-time error JS1019: Can't have 'break' outside of loop: break t
(6828,207-214): run-time error JS1019: Can't have 'break' outside of loop: break t
(6747,277-284): run-time error JS1019: Can't have 'break' outside of loop: break t
 */
/* NUGET: BEGIN LICENSE TEXT
 *
 * Microsoft grants you the right to use these script files for the sole
 * purpose of either: (i) interacting through your browser with the Microsoft
 * website or online service, subject to the applicable licensing or use
 * terms; or (ii) using the files as included with a Microsoft product subject
 * to that product's license terms. Microsoft reserves all other rights to the
 * files not expressly granted by Microsoft, whether by implication, estoppel
 * or otherwise. Insofar as a script file is dual licensed under GPL,
 * Microsoft neither took the code under GPL nor distributes it thereunder but
 * under the terms set out in this paragraph. All notices and licenses
 * below are for informational purposes only.
 *
 * NUGET: END LICENSE TEXT */
/*
** Unobtrusive Ajax support library for jQuery
** Copyright (C) Microsoft Corporation. All rights reserved.
*/
(function(a){var b="unobtrusiveAjaxClick",d="unobtrusiveAjaxClickTarget",h="unobtrusiveValidation";function c(d,b){var a=window,c=(d||"").split(".");while(a&&c.length)a=a[c.shift()];if(typeof a==="function")return a;b.push(d);return Function.constructor.apply(null,b)}function e(a){return a==="GET"||a==="POST"}function g(b,a){!e(a)&&b.setRequestHeader("X-HTTP-Method-Override",a)}function i(c,b,e){var d;if(e.indexOf("application/x-javascript")!==-1)return;d=(c.getAttribute("data-ajax-mode")||"").toUpperCase();a(c.getAttribute("data-ajax-update")).each(function(f,c){var e;switch(d){case"BEFORE":e=c.firstChild;a("<div />").html(b).contents().each(function(){c.insertBefore(this,e)});break;case"AFTER":a("<div />").html(b).contents().each(function(){c.appendChild(this)});break;case"REPLACE-WITH":a(c).replaceWith(b);break;default:a(c).html(b)}})}function f(b,d){var j,k,f,h;j=b.getAttribute("data-ajax-confirm");if(j&&!window.confirm(j))return;k=a(b.getAttribute("data-ajax-loading"));h=parseInt(b.getAttribute("data-ajax-loading-duration"),10)||0;a.extend(d,{type:b.getAttribute("data-ajax-method")||undefined,url:b.getAttribute("data-ajax-url")||undefined,cache:!!b.getAttribute("data-ajax-cache"),beforeSend:function(d){var a;g(d,f);a=c(b.getAttribute("data-ajax-begin"),["xhr"]).apply(b,arguments);a!==false&&k.show(h);return a},complete:function(){k.hide(h);c(b.getAttribute("data-ajax-complete"),["xhr","status"]).apply(b,arguments)},success:function(a,e,d){i(b,a,d.getResponseHeader("Content-Type")||"text/html");c(b.getAttribute("data-ajax-success"),["data","status","xhr"]).apply(b,arguments)},error:function(){c(b.getAttribute("data-ajax-failure"),["xhr","status","error"]).apply(b,arguments)}});d.data.push({name:"X-Requested-With",value:"XMLHttpRequest"});f=d.type.toUpperCase();if(!e(f)){d.type="POST";d.data.push({name:"X-HTTP-Method-Override",value:f})}a.ajax(d)}function j(c){var b=a(c).data(h);return!b||!b.validate||b.validate()}a(document).on("click","a[data-ajax=true]",function(a){a.preventDefault();f(this,{url:this.href,type:"GET",data:[]})});a(document).on("click","form[data-ajax=true] input[type=image]",function(c){var g=c.target.name,e=a(c.target),f=a(e.parents("form")[0]),d=e.offset();f.data(b,[{name:g+".x",value:Math.round(c.pageX-d.left)},{name:g+".y",value:Math.round(c.pageY-d.top)}]);setTimeout(function(){f.removeData(b)},0)});a(document).on("click","form[data-ajax=true] :submit",function(e){var g=e.currentTarget.name,f=a(e.target),c=a(f.parents("form")[0]);c.data(b,g?[{name:g,value:e.currentTarget.value}]:[]);c.data(d,f);setTimeout(function(){c.removeData(b);c.removeData(d)},0)});a(document).on("submit","form[data-ajax=true]",function(h){var e=a(this).data(b)||[],c=a(this).data(d),g=c&&c.hasClass("cancel");h.preventDefault();if(!g&&!j(this))return;f(this,{url:this.action,type:this.method||"GET",data:e.concat(a(this).serializeArray())})})})(jQuery);;
/**
 * jQuery Validation Plugin 1.9.0
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright (c) 2006 - 2011 JÃ¶rn Zaefferer
 *
 * Licensed under MIT: http://www.opensource.org/licenses/mit-license.php
 */

(function ($) {

	$.extend($.fn, {
		// http://docs.jquery.com/Plugins/Validation/validate
		validate: function (options) {

			// if nothing is selected, return nothing; can't chain anyway
			if (!this.length) {
				options && options.debug && window.console && console.warn("nothing selected, can't validate, returning nothing");
				return;
			}

			// check if a validator for this form was already created
			var validator = $.data(this[0], 'validator');
			if (validator) {
				return validator;
			}

			// Add novalidate tag if HTML5.
			this.attr('novalidate', 'novalidate');

			validator = new $.validator(options, this[0]);
			$.data(this[0], 'validator', validator);

			if (validator.settings.onsubmit) {

				var inputsAndButtons = this.find("input, button");

				// allow suppresing validation by adding a cancel class to the submit button
				inputsAndButtons.filter(".cancel").click(function () {
					validator.cancelSubmit = true;
				});

				// when a submitHandler is used, capture the submitting button
				if (validator.settings.submitHandler) {
					inputsAndButtons.filter(":submit").click(function () {
						validator.submitButton = this;
					});
				}

				// validate the form on submit
				this.submit(function (event) {
					if (validator.settings.debug)
						// prevent form submit to be able to see console output
						event.preventDefault();

					function handle() {
						if (validator.settings.submitHandler) {
							if (validator.submitButton) {
								// insert a hidden input as a replacement for the missing submit button
								var hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);
							}
							validator.settings.submitHandler.call(validator, validator.currentForm);
							if (validator.submitButton) {
								// and clean up afterwards; thanks to no-block-scope, hidden can be referenced
								hidden.remove();
							}
							return false;
						}
						return true;
					}

					// prevent submit for invalid forms or custom submit handlers
					if (validator.cancelSubmit) {
						validator.cancelSubmit = false;
						return handle();
					}
					if (validator.form()) {
						if (validator.pendingRequest) {
							validator.formSubmitted = true;
							return false;
						}
						return handle();
					} else {
						validator.focusInvalid();
						return false;
					}
				});
			}

			return validator;
		},
		// http://docs.jquery.com/Plugins/Validation/valid
		valid: function () {
			if ($(this[0]).is('form')) {
				return this.validate().form();
			} else {
				var valid = true;
				var validator = $(this[0].form).validate();
				this.each(function () {
					valid &= validator.element(this);
				});
				return valid;
			}
		},
		// attributes: space seperated list of attributes to retrieve and remove
		removeAttrs: function (attributes) {
			var result = {},
				$element = this;
			$.each(attributes.split(/\s/), function (index, value) {
				result[value] = $element.attr(value);
				$element.removeAttr(value);
			});
			return result;
		},
		// http://docs.jquery.com/Plugins/Validation/rules
		rules: function (command, argument) {
			var element = this[0];

			if (command) {
				var settings = $.data(element.form, 'validator').settings;
				var staticRules = settings.rules;
				var existingRules = $.validator.staticRules(element);
				switch (command) {
					case "add":
						$.extend(existingRules, $.validator.normalizeRule(argument));
						staticRules[element.name] = existingRules;
						if (argument.messages)
							settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);
						break;
					case "remove":
						if (!argument) {
							delete staticRules[element.name];
							return existingRules;
						}
						var filtered = {};
						$.each(argument.split(/\s/), function (index, method) {
							filtered[method] = existingRules[method];
							delete existingRules[method];
						});
						return filtered;
				}
			}

			var data = $.validator.normalizeRules(
			$.extend(
				{},
				$.validator.metadataRules(element),
				$.validator.classRules(element),
				$.validator.attributeRules(element),
				$.validator.staticRules(element)
			), element);

			// make sure required is at front
			if (data.required) {
				var param = data.required;
				delete data.required;
				data = $.extend({ required: param }, data);
			}

			return data;
		}
	});

	// Custom selectors
	$.extend($.expr[":"], {
		// http://docs.jquery.com/Plugins/Validation/blank
		blank: function (a) { return !$.trim("" + a.value); },
		// http://docs.jquery.com/Plugins/Validation/filled
		filled: function (a) { return !!$.trim("" + a.value); },
		// http://docs.jquery.com/Plugins/Validation/unchecked
		unchecked: function (a) { return !a.checked; }
	});

	// constructor for validator
	$.validator = function (options, form) {
		this.settings = $.extend(true, {}, $.validator.defaults, options);
		this.currentForm = form;
		this.init();
	};

	$.validator.format = function (source, params) {
		if (arguments.length == 1)
			return function () {
				var args = $.makeArray(arguments);
				args.unshift(source);
				return $.validator.format.apply(this, args);
			};
		if (arguments.length > 2 && params.constructor != Array) {
			params = $.makeArray(arguments).slice(1);
		}
		if (params.constructor != Array) {
			params = [params];
		}
		$.each(params, function (i, n) {
			source = source.replace(new RegExp("\\{" + i + "\\}", "g"), n);
		});
		return source;
	};

	$.extend($.validator, {

		defaults: {
			messages: {},
			groups: {},
			rules: {},
			errorClass: "error",
			validClass: "valid",
			errorElement: "label",
			focusInvalid: true,
			errorContainer: $([]),
			errorLabelContainer: $([]),
			onsubmit: true,
			ignore: ":hidden",
			ignoreTitle: false,
			onfocusin: function (element, event) {
				this.lastActive = element;

				// hide error label and remove error class on focus if enabled
				if (this.settings.focusCleanup && !this.blockFocusCleanup) {
					this.settings.unhighlight && this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
					this.addWrapper(this.errorsFor(element)).hide();
				}
			},
			onfocusout: function (element, event) {
				if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {
					this.element(element);
				}
			},
			onkeyup: function (element, event) {
				if (element.name in this.submitted || element == this.lastElement) {
					this.element(element);
				}
			},
			onclick: function (element, event) {
				// click on selects, radiobuttons and checkboxes
				if (element.name in this.submitted)
					this.element(element);
					// or option elements, check parent select in that case
				else if (element.parentNode.name in this.submitted)
					this.element(element.parentNode);
			},
			highlight: function (element, errorClass, validClass) {
				if (element.type === 'radio') {
					this.findByName(element.name).addClass(errorClass).removeClass(validClass);
				} else {
					$(element).addClass(errorClass).removeClass(validClass);
				}
			},
			unhighlight: function (element, errorClass, validClass) {
				if (element.type === 'radio') {
					this.findByName(element.name).removeClass(errorClass).addClass(validClass);
				} else {
					$(element).removeClass(errorClass).addClass(validClass);
				}
			}
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/setDefaults
		setDefaults: function (settings) {
			$.extend($.validator.defaults, settings);
		},

		messages: {
			required: "This field is required.",
			remote: "Please fix this field.",
			email: "Please enter a valid email address.",
			url: "Please enter a valid URL.",
			date: "Please enter a valid date.",
			dateISO: "Please enter a valid date (ISO).",
			number: "Please enter a valid number.",
			digits: "Please enter only digits.",
			creditcard: "Please enter a valid credit card number.",
			equalTo: "Please enter the same value again.",
			accept: "Please enter a value with a valid extension.",
			maxlength: $.validator.format("Please enter no more than {0} characters."),
			minlength: $.validator.format("Please enter at least {0} characters."),
			rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
			range: $.validator.format("Please enter a value between {0} and {1}."),
			max: $.validator.format("Please enter a value less than or equal to {0}."),
			min: $.validator.format("Please enter a value greater than or equal to {0}.")
		},

		autoCreateRanges: false,

		prototype: {

			init: function () {
				this.labelContainer = $(this.settings.errorLabelContainer);
				this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);
				this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);
				this.submitted = {};
				this.valueCache = {};
				this.pendingRequest = 0;
				this.pending = {};
				this.invalid = {};
				this.reset();

				var groups = (this.groups = {});
				$.each(this.settings.groups, function (key, value) {
					$.each(value.split(/\s/), function (index, name) {
						groups[name] = key;
					});
				});
				var rules = this.settings.rules;
				$.each(rules, function (key, value) {
					rules[key] = $.validator.normalizeRule(value);
				});

				function delegate(event) {
					var validator = $.data(this[0].form, "validator"),
						eventType = "on" + event.type.replace(/^validate/, "");
					validator.settings[eventType] && validator.settings[eventType].call(validator, this[0], event);
				}
				$(this.currentForm)
					   .validateDelegate("[type='text'], [type='password'], [type='file'], select, textarea, " +
							"[type='number'], [type='search'] ,[type='tel'], [type='url'], " +
							"[type='email'], [type='datetime'], [type='date'], [type='month'], " +
							"[type='week'], [type='time'], [type='datetime-local'], " +
							"[type='range'], [type='color'] ",
							"focusin focusout keyup", delegate)
					.validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", delegate);

				if (this.settings.invalidHandler)
					$(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
			},

			// http://docs.jquery.com/Plugins/Validation/Validator/form
			form: function () {
				this.checkForm();
				$.extend(this.submitted, this.errorMap);
				this.invalid = $.extend({}, this.errorMap);
				if (!this.valid())
					$(this.currentForm).triggerHandler("invalid-form", [this]);
				this.showErrors();
				return this.valid();
			},

			checkForm: function () {
				this.prepareForm();
				for (var i = 0, elements = (this.currentElements = this.elements()) ; elements[i]; i++) {
					this.check(elements[i]);
				}
				return this.valid();
			},

			// http://docs.jquery.com/Plugins/Validation/Validator/element
			element: function (element) {
				element = this.validationTargetFor(this.clean(element));
				this.lastElement = element;
				this.prepareElement(element);
				this.currentElements = $(element);
				var result = this.check(element);
				if (result) {
					delete this.invalid[element.name];
				} else {
					this.invalid[element.name] = true;
				}
				if (!this.numberOfInvalids()) {
					// Hide error containers on last error
					this.toHide = this.toHide.add(this.containers);
				}
				this.showErrors();
				return result;
			},

			// http://docs.jquery.com/Plugins/Validation/Validator/showErrors
			showErrors: function (errors) {
				if (errors) {
					// add items to error list and map
					$.extend(this.errorMap, errors);
					this.errorList = [];
					for (var name in errors) {
						this.errorList.push({
							message: errors[name],
							element: this.findByName(name)[0]
						});
					}
					// remove items from success list
					this.successList = $.grep(this.successList, function (element) {
						return !(element.name in errors);
					});
				}
				this.settings.showErrors
					? this.settings.showErrors.call(this, this.errorMap, this.errorList)
					: this.defaultShowErrors();
			},

			// http://docs.jquery.com/Plugins/Validation/Validator/resetForm
			resetForm: function () {
				if ($.fn.resetForm)
					$(this.currentForm).resetForm();
				this.submitted = {};
				this.lastElement = null;
				this.prepareForm();
				this.hideErrors();
				this.elements().removeClass(this.settings.errorClass);
			},

			numberOfInvalids: function () {
				return this.objectLength(this.invalid);
			},

			objectLength: function (obj) {
				var count = 0;
				for (var i in obj)
					count++;
				return count;
			},

			hideErrors: function () {
				this.addWrapper(this.toHide).hide();
			},

			valid: function () {
				return this.size() == 0;
			},

			size: function () {
				return this.errorList.length;
			},

			focusInvalid: function () {
				if (this.settings.focusInvalid) {
					try {
						$(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])
						.filter(":visible")
						.focus()
						// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
						.trigger("focusin");
					} catch (e) {
						// ignore IE throwing errors when focusing hidden elements
					}
				}
			},

			findLastActive: function () {
				var lastActive = this.lastActive;
				return lastActive && $.grep(this.errorList, function (n) {
					return n.element.name == lastActive.name;
				}).length == 1 && lastActive;
			},

			elements: function () {
				var validator = this,
					rulesCache = {};

				// select all valid inputs inside the form (no submit or reset buttons)
				return $(this.currentForm)
				.find("input, select, textarea")
				.not(":submit, :reset, :image, [disabled]")
				.not(this.settings.ignore)
				.filter(function () {
					!this.name && validator.settings.debug && window.console && console.error("%o has no name assigned", this);

					// select only the first element for each name, and only those with rules specified
					if (this.name in rulesCache || !validator.objectLength($(this).rules()))
						return false;

					rulesCache[this.name] = true;
					return true;
				});
			},

			clean: function (selector) {
				return $(selector)[0];
			},

			errors: function () {
				return $(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext);
			},

			reset: function () {
				this.successList = [];
				this.errorList = [];
				this.errorMap = {};
				this.toShow = $([]);
				this.toHide = $([]);
				this.currentElements = $([]);
			},

			prepareForm: function () {
				this.reset();
				this.toHide = this.errors().add(this.containers);
			},

			prepareElement: function (element) {
				this.reset();
				this.toHide = this.errorsFor(element);
			},

			check: function (element) {
				element = this.validationTargetFor(this.clean(element));

				var rules = $(element).rules();
				var dependencyMismatch = false;
				for (var method in rules) {
					var rule = { method: method, parameters: rules[method] };
					try {
						var result = $.validator.methods[method].call(this, element.value.replace(/\r/g, ""), element, rule.parameters);

						// if a method indicates that the field is optional and therefore valid,
						// don't mark it as valid when there are no other rules
						if (result == "dependency-mismatch") {
							dependencyMismatch = true;
							continue;
						}
						dependencyMismatch = false;

						if (result == "pending") {
							this.toHide = this.toHide.not(this.errorsFor(element));
							return;
						}

						if (!result) {
							this.formatAndAdd(element, rule);
							return false;
						}
					} catch (e) {
						this.settings.debug && window.console && console.log("exception occured when checking element " + element.id
							 + ", check the '" + rule.method + "' method", e);
						throw e;
					}
				}
				if (dependencyMismatch)
					return;
				if (this.objectLength(rules))
					this.successList.push(element);
				return true;
			},

			// return the custom message for the given element and validation method
			// specified in the element's "messages" metadata
			customMetaMessage: function (element, method) {
				if (!$.metadata)
					return;

				var meta = this.settings.meta
					? $(element).metadata()[this.settings.meta]
					: $(element).metadata();

				return meta && meta.messages && meta.messages[method];
			},

			// return the custom message for the given element name and validation method
			customMessage: function (name, method) {
				var m = this.settings.messages[name];
				return m && (m.constructor == String
					? m
					: m[method]);
			},

			// return the first defined argument, allowing empty strings
			findDefined: function () {
				for (var i = 0; i < arguments.length; i++) {
					if (arguments[i] !== undefined)
						return arguments[i];
				}
				return undefined;
			},

			defaultMessage: function (element, method) {
				return this.findDefined(
					this.customMessage(element.name, method),
					this.customMetaMessage(element, method),
					// title is never undefined, so handle empty string as undefined
					!this.settings.ignoreTitle && element.title || undefined,
					$.validator.messages[method],
					"<strong>Warning: No message defined for " + element.name + "</strong>"
				);
			},

			formatAndAdd: function (element, rule) {
				var message = this.defaultMessage(element, rule.method),
					theregex = /\$?\{(\d+)\}/g;
				if (typeof message == "function") {
					message = message.call(this, rule.parameters, element);
				} else if (theregex.test(message)) {
					message = jQuery.format(message.replace(theregex, '{$1}'), rule.parameters);
				}
				this.errorList.push({
					message: message,
					element: element
				});

				this.errorMap[element.name] = message;
				this.submitted[element.name] = message;
			},

			addWrapper: function (toToggle) {
				if (this.settings.wrapper)
					toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
				return toToggle;
			},

			defaultShowErrors: function () {
				for (var i = 0; this.errorList[i]; i++) {
					var error = this.errorList[i];
					this.settings.highlight && this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
					this.showLabel(error.element, error.message);
				}
				if (this.errorList.length) {
					this.toShow = this.toShow.add(this.containers);
				}
				if (this.settings.success) {
					for (var i = 0; this.successList[i]; i++) {
						this.showLabel(this.successList[i]);
					}
				}
				if (this.settings.unhighlight) {
					for (var i = 0, elements = this.validElements() ; elements[i]; i++) {
						this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
					}
				}
				this.toHide = this.toHide.not(this.toShow);
				this.hideErrors();
				this.addWrapper(this.toShow).show();
			},

			validElements: function () {
				return this.currentElements.not(this.invalidElements());
			},

			invalidElements: function () {
				return $(this.errorList).map(function () {
					return this.element;
				});
			},

			showLabel: function (element, message) {
				var label = this.errorsFor(element);
				if (label.length) {
					// refresh error/success class
					label.removeClass(this.settings.validClass).addClass(this.settings.errorClass);

					// check if we have a generated label, replace the message then
					label.attr("generated") && label.html(message);
				} else {
					// create label
					label = $("<" + this.settings.errorElement + "/>")
						.attr({ "for": this.idOrName(element), generated: true })
						.addClass(this.settings.errorClass)
						.html(message || "");
					if (this.settings.wrapper) {
						// make sure the element is visible, even in IE
						// actually showing the wrapped element is handled elsewhere
						label = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
					}
					if (!this.labelContainer.append(label).length)
						this.settings.errorPlacement
							? this.settings.errorPlacement(label, $(element))
							: label.insertAfter(element);
				}
				if (!message && this.settings.success) {
					label.text("");
					typeof this.settings.success == "string"
						? label.addClass(this.settings.success)
						: this.settings.success(label);
				}
				this.toShow = this.toShow.add(label);
			},

			errorsFor: function (element) {
				var name = this.idOrName(element);
				return this.errors().filter(function () {
					return $(this).attr('for') == name;
				});
			},

			idOrName: function (element) {
				return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
			},

			validationTargetFor: function (element) {
				// if radio/checkbox, validate first element in group instead
				if (this.checkable(element)) {
					element = this.findByName(element.name).not(this.settings.ignore)[0];
				}
				return element;
			},

			checkable: function (element) {
				return /radio|checkbox/i.test(element.type);
			},

			findByName: function (name) {
				// select by name and filter by form for performance over form.find("[name=...]")
				var form = this.currentForm;
				return $(document.getElementsByName(name)).map(function (index, element) {
					return element.form == form && element.name == name && element || null;
				});
			},

			getLength: function (value, element) {
				switch (element.nodeName.toLowerCase()) {
					case 'select':
						return $("option:selected", element).length;
					case 'input':
						if (this.checkable(element))
							return this.findByName(element.name).filter(':checked').length;
				}
				return value.length;
			},

			depend: function (param, element) {
				return this.dependTypes[typeof param]
					? this.dependTypes[typeof param](param, element)
					: true;
			},

			dependTypes: {
				"boolean": function (param, element) {
					return param;
				},
				"string": function (param, element) {
					return !!$(param, element.form).length;
				},
				"function": function (param, element) {
					return param(element);
				}
			},

			optional: function (element) {
				return !$.validator.methods.required.call(this, $.trim(element.value), element) && "dependency-mismatch";
			},

			startRequest: function (element) {
				if (!this.pending[element.name]) {
					this.pendingRequest++;
					this.pending[element.name] = true;
				}
			},

			stopRequest: function (element, valid) {
				this.pendingRequest--;
				// sometimes synchronization fails, make sure pendingRequest is never < 0
				if (this.pendingRequest < 0)
					this.pendingRequest = 0;
				delete this.pending[element.name];
				if (valid && this.pendingRequest == 0 && this.formSubmitted && this.form()) {
					$(this.currentForm).submit();
					this.formSubmitted = false;
				} else if (!valid && this.pendingRequest == 0 && this.formSubmitted) {
					$(this.currentForm).triggerHandler("invalid-form", [this]);
					this.formSubmitted = false;
				}
			},

			previousValue: function (element) {
				return $.data(element, "previousValue") || $.data(element, "previousValue", {
					old: null,
					valid: true,
					message: this.defaultMessage(element, "remote")
				});
			}

		},

		classRuleSettings: {
			required: { required: true },
			email: { email: true },
			url: { url: true },
			date: { date: true },
			dateISO: { dateISO: true },
			dateDE: { dateDE: true },
			number: { number: true },
			numberDE: { numberDE: true },
			digits: { digits: true },
			creditcard: { creditcard: true }
		},

		addClassRules: function (className, rules) {
			className.constructor == String ?
				this.classRuleSettings[className] = rules :
				$.extend(this.classRuleSettings, className);
		},

		classRules: function (element) {
			var rules = {};
			var classes = $(element).attr('class');
			classes && $.each(classes.split(' '), function () {
				if (this in $.validator.classRuleSettings) {
					$.extend(rules, $.validator.classRuleSettings[this]);
				}
			});
			return rules;
		},

		attributeRules: function (element) {
			var rules = {};
			var $element = $(element);

			for (var method in $.validator.methods) {
				var value;
				// If .prop exists (jQuery >= 1.6), use it to get true/false for required
				if (method === 'required' && typeof $.fn.prop === 'function') {
					value = $element.prop(method);
				} else {
					value = $element.attr(method);
				}
				if (value) {
					rules[method] = value;
				} else if ($element[0].getAttribute("type") === method) {
					rules[method] = true;
				}
			}

			// maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text inputs
			if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
				delete rules.maxlength;
			}

			return rules;
		},

		metadataRules: function (element) {
			if (!$.metadata) return {};

			var meta = $.data(element.form, 'validator').settings.meta;
			return meta ?
				$(element).metadata()[meta] :
				$(element).metadata();
		},

		staticRules: function (element) {
			var rules = {};
			var validator = $.data(element.form, 'validator');
			if (validator.settings.rules) {
				rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
			}
			return rules;
		},

		normalizeRules: function (rules, element) {
			// handle dependency check
			$.each(rules, function (prop, val) {
				// ignore rule when param is explicitly false, eg. required:false
				if (val === false) {
					delete rules[prop];
					return;
				}
				if (val.param || val.depends) {
					var keepRule = true;
					switch (typeof val.depends) {
						case "string":
							keepRule = !!$(val.depends, element.form).length;
							break;
						case "function":
							keepRule = val.depends.call(element, element);
							break;
					}
					if (keepRule) {
						rules[prop] = val.param !== undefined ? val.param : true;
					} else {
						delete rules[prop];
					}
				}
			});

			// evaluate parameters
			$.each(rules, function (rule, parameter) {
				rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
			});

			// clean number parameters
			$.each(['minlength', 'maxlength', 'min', 'max'], function () {
				if (rules[this]) {
					rules[this] = Number(rules[this]);
				}
			});
			$.each(['rangelength', 'range'], function () {
				if (rules[this]) {
					rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
				}
			});

			if ($.validator.autoCreateRanges) {
				// auto-create ranges
				if (rules.min && rules.max) {
					rules.range = [rules.min, rules.max];
					delete rules.min;
					delete rules.max;
				}
				if (rules.minlength && rules.maxlength) {
					rules.rangelength = [rules.minlength, rules.maxlength];
					delete rules.minlength;
					delete rules.maxlength;
				}
			}

			// To support custom messages in metadata ignore rule methods titled "messages"
			if (rules.messages) {
				delete rules.messages;
			}

			return rules;
		},

		// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
		normalizeRule: function (data) {
			if (typeof data == "string") {
				var transformed = {};
				$.each(data.split(/\s/), function () {
					transformed[this] = true;
				});
				data = transformed;
			}
			return data;
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/addMethod
		addMethod: function (name, method, message) {
			$.validator.methods[name] = method;
			$.validator.messages[name] = message != undefined ? message : $.validator.messages[name];
			if (method.length < 3) {
				$.validator.addClassRules(name, $.validator.normalizeRule(name));
			}
		},

		methods: {

			// http://docs.jquery.com/Plugins/Validation/Methods/required
			required: function (value, element, param) {
				// check if dependency is met
				if (!this.depend(param, element))
					return "dependency-mismatch";
				switch (element.nodeName.toLowerCase()) {
					case 'select':
						// could be an array for select-multiple or a string, both are fine this way
						var val = $(element).val();
						return val && val.length > 0;
					case 'input':
						if (this.checkable(element))
							return this.getLength(value, element) > 0;
					default:
						return $.trim(value).length > 0;
				}
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/remote
			remote: function (value, element, param) {
				if (this.optional(element))
					return "dependency-mismatch";

				var previous = this.previousValue(element);
				if (!this.settings.messages[element.name])
					this.settings.messages[element.name] = {};
				previous.originalMessage = this.settings.messages[element.name].remote;
				this.settings.messages[element.name].remote = previous.message;

				param = typeof param == "string" && { url: param } || param;

				if (this.pending[element.name]) {
					return "pending";
				}
				if (previous.old === value) {
					return previous.valid;
				}

				previous.old = value;
				var validator = this;
				this.startRequest(element);
				var data = {};
				data[element.name] = value;
				$.ajax($.extend(true, {
					url: param,
					mode: "abort",
					port: "validate" + element.name,
					dataType: "json",
					data: data,
					success: function (response) {
						validator.settings.messages[element.name].remote = previous.originalMessage;
						var valid = response === true;
						if (valid) {
							var submitted = validator.formSubmitted;
							validator.prepareElement(element);
							validator.formSubmitted = submitted;
							validator.successList.push(element);
							validator.showErrors();
						} else {
							var errors = {};
							var message = response || validator.defaultMessage(element, "remote");
							errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;
							validator.showErrors(errors);
						}
						previous.valid = valid;
						validator.stopRequest(element, valid);
					}
				}, param));
				return "pending";
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/minlength
			minlength: function (value, element, param) {
				return this.optional(element) || this.getLength($.trim(value), element) >= param;
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/maxlength
			maxlength: function (value, element, param) {
				return this.optional(element) || this.getLength($.trim(value), element) <= param;
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/rangelength
			rangelength: function (value, element, param) {
				var length = this.getLength($.trim(value), element);
				return this.optional(element) || (length >= param[0] && length <= param[1]);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/min
			min: function (value, element, param) {
				return this.optional(element) || value >= param;
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/max
			max: function (value, element, param) {
				return this.optional(element) || value <= param;
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/range
			range: function (value, element, param) {
				return this.optional(element) || (value >= param[0] && value <= param[1]);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/email
			email: function (value, element) {
				// contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
				return this.optional(element) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(value);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/url
			url: function (value, element) {
				// contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
				return this.optional(element) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/date
			date: function (value, element) {
				return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/dateISO
			dateISO: function (value, element) {
				return this.optional(element) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(value);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/number
			number: function (value, element) {
				return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(value);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/digits
			digits: function (value, element) {
				return this.optional(element) || /^\d+$/.test(value);
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/creditcard
			// based on http://en.wikipedia.org/wiki/Luhn
			creditcard: function (value, element) {
				if (this.optional(element))
					return "dependency-mismatch";
				// accept only spaces, digits and dashes
				if (/[^0-9 -]+/.test(value))
					return false;
				var nCheck = 0,
					nDigit = 0,
					bEven = false;

				value = value.replace(/\D/g, "");

				for (var n = value.length - 1; n >= 0; n--) {
					var cDigit = value.charAt(n);
					var nDigit = parseInt(cDigit, 10);
					if (bEven) {
						if ((nDigit *= 2) > 9)
							nDigit -= 9;
					}
					nCheck += nDigit;
					bEven = !bEven;
				}

				return (nCheck % 10) == 0;
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/accept
			accept: function (value, element, param) {
				param = typeof param == "string" ? param.replace(/,/g, '|') : "png|jpe?g|gif";
				return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i"));
			},

			// http://docs.jquery.com/Plugins/Validation/Methods/equalTo
			equalTo: function (value, element, param) {
				// bind to the blur event of the target in order to revalidate whenever the target field is updated
				// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
				var target = $(param).unbind(".validate-equalTo").bind("blur.validate-equalTo", function () {
					$(element).valid();
				});
				return value == target.val();
			}

		}

	});

	// deprecated, use $.validator.format instead
	$.format = $.validator.format;

})(jQuery);

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()
; (function ($) {
	var pendingRequests = {};
	// Use a prefilter if available (1.5+)
	if ($.ajaxPrefilter) {
		$.ajaxPrefilter(function (settings, _, xhr) {
			var port = settings.port;
			if (settings.mode == "abort") {
				if (pendingRequests[port]) {
					pendingRequests[port].abort();
				}
				pendingRequests[port] = xhr;
			}
		});
	} else {
		// Proxy ajax
		var ajax = $.ajax;
		$.ajax = function (settings) {
			var mode = ("mode" in settings ? settings : $.ajaxSettings).mode,
				port = ("port" in settings ? settings : $.ajaxSettings).port;
			if (mode == "abort") {
				if (pendingRequests[port]) {
					pendingRequests[port].abort();
				}
				return (pendingRequests[port] = ajax.apply(this, arguments));
			}
			return ajax.apply(this, arguments);
		};
	}
})(jQuery);

// provides cross-browser focusin and focusout events
// IE has native support, in other browsers, use event caputuring (neither bubbles)

// provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
// handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target
; (function ($) {
	// only implement if not provided by jQuery core (since 1.4)
	// TODO verify if jQuery 1.4's implementation is compatible with older jQuery special-event APIs
	if (!jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener) {
		$.each({
			focus: 'focusin',
			blur: 'focusout'
		}, function (original, fix) {
			$.event.special[fix] = {
				setup: function () {
					this.addEventListener(original, handler, true);
				},
				teardown: function () {
					this.removeEventListener(original, handler, true);
				},
				handler: function (e) {
					arguments[0] = $.event.fix(e);
					arguments[0].type = fix;
					return $.event.handle.apply(this, arguments);
				}
			};
			function handler(e) {
				e = $.event.fix(e);
				e.type = fix;
				return $.event.handle.call(this, e);
			}
		});
	};
	$.extend($.fn, {
		validateDelegate: function (delegate, type, handler) {
			return this.bind(type, function (event) {
				var target = $(event.target);
				if (target.is(delegate)) {
					return handler.apply(target, arguments);
				}
			});
		}
	});
})(jQuery);
;
/*!
** Unobtrusive validation support library for jQuery and jQuery Validate
** Copyright (C) Microsoft Corporation. All rights reserved.
*/

/*jslint white: true, browser: true, onevar: true, undef: true, nomen: true, eqeqeq: true, plusplus: true, bitwise: true, regexp: true, newcap: true, immed: true, strict: false */
/*global document: false, jQuery: false */

(function ($) {
    var $jQval = $.validator,
        adapters,
        data_validation = "unobtrusiveValidation";

    function setValidationValues(options, ruleName, value) {
        options.rules[ruleName] = value;
        if (options.message) {
            options.messages[ruleName] = options.message;
        }
    }

    function splitAndTrim(value) {
        return value.replace(/^\s+|\s+$/g, "").split(/\s*,\s*/g);
    }

    function escapeAttributeValue(value) {
        // As mentioned on http://api.jquery.com/category/selectors/
        return value.replace(/([!"#$%&'()*+,./:;<=>?@\[\\\]^`{|}~])/g, "\\$1");
    }

    function getModelPrefix(fieldName) {
        return fieldName.substr(0, fieldName.lastIndexOf(".") + 1);
    }

    function appendModelPrefix(value, prefix) {
        if (value.indexOf("*.") === 0) {
            value = value.replace("*.", prefix);
        }
        return value;
    }

    function onError(error, inputElement) {  // 'this' is the form element
        var container = $(this).find("[data-valmsg-for='" + escapeAttributeValue(inputElement[0].name) + "']"),
            replace = $.parseJSON(container.attr("data-valmsg-replace")) !== false;

        container.removeClass("field-validation-valid").addClass("field-validation-error");
        error.data("unobtrusiveContainer", container);

        if (replace) {
            container.empty();
            error.removeClass("input-validation-error").appendTo(container);
        }
        else {
            error.hide();
        }
    }

    function onErrors(event, validator) {  // 'this' is the form element
        var container = $(this).find("[data-valmsg-summary=true]"),
            list = container.find("ul");

        if (list && list.length && validator.errorList.length) {
            list.empty();
            container.addClass("validation-summary-errors").removeClass("validation-summary-valid");

            $.each(validator.errorList, function () {
                $("<li />").html(this.message).appendTo(list);
            });
        }
    }

    function onSuccess(error) {  // 'this' is the form element
        var container = error.data("unobtrusiveContainer"),
            replace = $.parseJSON(container.attr("data-valmsg-replace"));

        if (container) {
            container.addClass("field-validation-valid").removeClass("field-validation-error");
            error.removeData("unobtrusiveContainer");

            if (replace) {
                container.empty();
            }
        }
    }

    function onReset(event) {  // 'this' is the form element
        var $form = $(this);
        $form.data("validator").resetForm();
        $form.find(".validation-summary-errors")
            .addClass("validation-summary-valid")
            .removeClass("validation-summary-errors");
        $form.find(".field-validation-error")
            .addClass("field-validation-valid")
            .removeClass("field-validation-error")
            .removeData("unobtrusiveContainer")
            .find(">*")  // If we were using valmsg-replace, get the underlying error
                .removeData("unobtrusiveContainer");
    }

    function validationInfo(form) {
        var $form = $(form),
            result = $form.data(data_validation),
            onResetProxy = $.proxy(onReset, form);

        if (!result) {
            result = {
                options: {  // options structure passed to jQuery Validate's validate() method
                    errorClass: "input-validation-error",
                    errorElement: "span",
                    errorPlacement: $.proxy(onError, form),
                    invalidHandler: $.proxy(onErrors, form),
                    messages: {},
                    rules: {},
                    success: $.proxy(onSuccess, form)
                },
                attachValidation: function () {
                    $form
                        .unbind("reset." + data_validation, onResetProxy)
                        .bind("reset." + data_validation, onResetProxy)
                        .validate(this.options);
                },
                validate: function () {  // a validation function that is called by unobtrusive Ajax
                    $form.validate();
                    return $form.valid();
                }
            };
            $form.data(data_validation, result);
        }

        return result;
    }

    $jQval.unobtrusive = {
        adapters: [],

        parseElement: function (element, skipAttach) {
            /// <summary>
            /// Parses a single HTML element for unobtrusive validation attributes.
            /// </summary>
            /// <param name="element" domElement="true">The HTML element to be parsed.</param>
            /// <param name="skipAttach" type="Boolean">[Optional] true to skip attaching the
            /// validation to the form. If parsing just this single element, you should specify true.
            /// If parsing several elements, you should specify false, and manually attach the validation
            /// to the form when you are finished. The default is false.</param>
            var $element = $(element),
                form = $element.parents("form")[0],
                valInfo, rules, messages;

            if (!form) {  // Cannot do client-side validation without a form
                return;
            }

            valInfo = validationInfo(form);
            valInfo.options.rules[element.name] = rules = {};
            valInfo.options.messages[element.name] = messages = {};

            $.each(this.adapters, function () {
                var prefix = "data-val-" + this.name,
                    message = $element.attr(prefix),
                    paramValues = {};

                if (message !== undefined) {  // Compare against undefined, because an empty message is legal (and falsy)
                    prefix += "-";

                    $.each(this.params, function () {
                        paramValues[this] = $element.attr(prefix + this);
                    });

                    this.adapt({
                        element: element,
                        form: form,
                        message: message,
                        params: paramValues,
                        rules: rules,
                        messages: messages
                    });
                }
            });

            $.extend(rules, { "__dummy__": true });

            if (!skipAttach) {
                valInfo.attachValidation();
            }
        },

        parse: function (selector) {
            /// <summary>
            /// Parses all the HTML elements in the specified selector. It looks for input elements decorated
            /// with the [data-val=true] attribute value and enables validation according to the data-val-*
            /// attribute values.
            /// </summary>
            /// <param name="selector" type="String">Any valid jQuery selector.</param>
            var $forms = $(selector)
                .parents("form")
                .andSelf()
                .add($(selector).find("form"))
                .filter("form");

            $(selector).find(":input[data-val=true]").each(function () {
                $jQval.unobtrusive.parseElement(this, true);
            });

            $forms.each(function () {
                var info = validationInfo(this);
                if (info) {
                    info.attachValidation();
                }
            });
        }
    };

    adapters = $jQval.unobtrusive.adapters;

    adapters.add = function (adapterName, params, fn) {
        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation.</summary>
        /// <param name="adapterName" type="String">The name of the adapter to be added. This matches the name used
        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>
        /// <param name="params" type="Array" optional="true">[Optional] An array of parameter names (strings) that will
        /// be extracted from the data-val-nnnn-mmmm HTML attributes (where nnnn is the adapter name, and
        /// mmmm is the parameter name).</param>
        /// <param name="fn" type="Function">The function to call, which adapts the values from the HTML
        /// attributes into jQuery Validate rules and/or messages.</param>
        /// <returns type="jQuery.validator.unobtrusive.adapters" />
        if (!fn) {  // Called with no params, just a function
            fn = params;
            params = [];
        }
        this.push({ name: adapterName, params: params, adapt: fn });
        return this;
    };

    adapters.addBool = function (adapterName, ruleName) {
        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where
        /// the jQuery Validate validation rule has no parameter values.</summary>
        /// <param name="adapterName" type="String">The name of the adapter to be added. This matches the name used
        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>
        /// <param name="ruleName" type="String" optional="true">[Optional] The name of the jQuery Validate rule. If not provided, the value
        /// of adapterName will be used instead.</param>
        /// <returns type="jQuery.validator.unobtrusive.adapters" />
        return this.add(adapterName, function (options) {
            setValidationValues(options, ruleName || adapterName, true);
        });
    };

    adapters.addMinMax = function (adapterName, minRuleName, maxRuleName, minMaxRuleName, minAttribute, maxAttribute) {
        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where
        /// the jQuery Validate validation has three potential rules (one for min-only, one for max-only, and
        /// one for min-and-max). The HTML parameters are expected to be named -min and -max.</summary>
        /// <param name="adapterName" type="String">The name of the adapter to be added. This matches the name used
        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>
        /// <param name="minRuleName" type="String">The name of the jQuery Validate rule to be used when you only
        /// have a minimum value.</param>
        /// <param name="maxRuleName" type="String">The name of the jQuery Validate rule to be used when you only
        /// have a maximum value.</param>
        /// <param name="minMaxRuleName" type="String">The name of the jQuery Validate rule to be used when you
        /// have both a minimum and maximum value.</param>
        /// <param name="minAttribute" type="String" optional="true">[Optional] The name of the HTML attribute that
        /// contains the minimum value. The default is "min".</param>
        /// <param name="maxAttribute" type="String" optional="true">[Optional] The name of the HTML attribute that
        /// contains the maximum value. The default is "max".</param>
        /// <returns type="jQuery.validator.unobtrusive.adapters" />
        return this.add(adapterName, [minAttribute || "min", maxAttribute || "max"], function (options) {
            var min = options.params.min,
                max = options.params.max;

            if (min && max) {
                setValidationValues(options, minMaxRuleName, [min, max]);
            }
            else if (min) {
                setValidationValues(options, minRuleName, min);
            }
            else if (max) {
                setValidationValues(options, maxRuleName, max);
            }
        });
    };

    adapters.addSingleVal = function (adapterName, attribute, ruleName) {
        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where
        /// the jQuery Validate validation rule has a single value.</summary>
        /// <param name="adapterName" type="String">The name of the adapter to be added. This matches the name used
        /// in the data-val-nnnn HTML attribute(where nnnn is the adapter name).</param>
        /// <param name="attribute" type="String">[Optional] The name of the HTML attribute that contains the value.
        /// The default is "val".</param>
        /// <param name="ruleName" type="String" optional="true">[Optional] The name of the jQuery Validate rule. If not provided, the value
        /// of adapterName will be used instead.</param>
        /// <returns type="jQuery.validator.unobtrusive.adapters" />
        return this.add(adapterName, [attribute || "val"], function (options) {
            setValidationValues(options, ruleName || adapterName, options.params[attribute]);
        });
    };

    $jQval.addMethod("__dummy__", function (value, element, params) {
        return true;
    });

    $jQval.addMethod("regex", function (value, element, params) {
        var match;
        if (this.optional(element)) {
            return true;
        }

        match = new RegExp(params).exec(value);
        return (match && (match.index === 0) && (match[0].length === value.length));
    });

    $jQval.addMethod("nonalphamin", function (value, element, nonalphamin) {
        var match;
        if (nonalphamin) {
            match = value.match(/\W/g);
            match = match && match.length >= nonalphamin;
        }
        return match;
    });

    adapters.addSingleVal("accept", "exts").addSingleVal("regex", "pattern");
    adapters.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addBool("number").addBool("url");
    adapters.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range", "min", "max", "range");
    adapters.add("equalto", ["other"], function (options) {
        var prefix = getModelPrefix(options.element.name),
            other = options.params.other,
            fullOtherName = appendModelPrefix(other, prefix),
            element = $(options.form).find(":input[name='" + escapeAttributeValue(fullOtherName) + "']")[0];

        setValidationValues(options, "equalTo", element);
    });
    adapters.add("required", function (options) {
        // jQuery Validate equates "required" with "mandatory" for checkbox elements
        if (options.element.tagName.toUpperCase() !== "INPUT" || options.element.type.toUpperCase() !== "CHECKBOX") {
            setValidationValues(options, "required", true);
        }
    });
    adapters.add("remote", ["url", "type", "additionalfields"], function (options) {
        var value = {
            url: options.params.url,
            type: options.params.type || "GET",
            data: {}
        },
            prefix = getModelPrefix(options.element.name);

        $.each(splitAndTrim(options.params.additionalfields || options.element.name), function (i, fieldName) {
            var paramName = appendModelPrefix(fieldName, prefix);
            value.data[paramName] = function () {
                return $(options.form).find(":input[name='" + escapeAttributeValue(paramName) + "']").val();
            };
        });

        setValidationValues(options, "remote", value);
    });
    adapters.add("password", ["min", "nonalphamin", "regex"], function (options) {
        if (options.params.min) {
            setValidationValues(options, "minlength", options.params.min);
        }
        if (options.params.nonalphamin) {
            setValidationValues(options, "nonalphamin", options.params.nonalphamin);
        }
        if (options.params.regex) {
            setValidationValues(options, "regex", options.params.regex);
        }
    });

    $(function () {
        $jQval.unobtrusive.parse(document);
    });
}(jQuery));;
/*
 * responsive tooltip plugin
 * needs to run before hiding elements that have tooltip
 * 
 * to improve: attach tooltip to body only when mouseover
 * 
 * - align: on mobile, where to fix the tooltip
 * - width: at witch width the tooltip goes mobile (goes to the bottom of the content instead of right)
 * - class: give your tooltip a class
 * 
 */

(function( $ ){

	"use strict";

	function getTooltipNumber(toggleElm) {
		return toggleElm.attr('rel').split('-')[1];
	}

	function resizeEventNamespace(number) {
		return 'resize.' + number + 'tooltip';
	}

	$.fn.responsiveTooltip = function( options ) {
		var settings = {
			align:'left',
			width: 800,
			extraclass: '',
			scrollElement:'',
			iteration: 0,
			autoshow: true,
			tipToggle: null,
			closeClass: 'tooltip-close'
		};

		if ( options ) {
			$.extend( settings, options );
		}

		$('.responsive-tooltip-tip').each(function(){settings.iteration++;});
		
		return $(this).each(function(){
			var obj = $(this);
			$(this).data('tooltip', obj);
			obj.init = function(obj){
				var tipToggle = obj.children('.tooltip-toggle');
				if (tipToggle==undefined || settings.tipToggle!=null || tipToggle.length==0){
					var tipToggle = eval(settings.tipToggle);
				}
				
				if (tipToggle==undefined || tipToggle==null || tipToggle.length==0) { return; };

				tipToggle.attr('rel','toggle-'+settings.iteration);
				
				$('body').append('<div class="responsive-tooltip-tip align-'+settings.align+' '+settings.extraclass+'" id="tip-'+settings.iteration+'">'+obj.children('.tooltip').html()+'</div>');
				var tip = $("#tip-"+settings.iteration);
				var hover = false;
				
				
				//resize events
				/*
				$(window).resize(function(){
					if( this.resizeTO ) clearTimeout(this.resizeTO);
					this.resizeTO = setTimeout(function(){
						$(this).trigger('resizeEnd');
					}, 100);
				});

				if (settings.scrollElement!=''){
					$(settings.scrollElement).on('touchend',updateLocation);
				}
				
				$(window).on('resizeEnd', updateLocation);
				*/
				$(window).on(resizeEventNamespace(getTooltipNumber(tipToggle)), updateLocation);

				$(document).off('keydown', 'body').on('keydown', 'body',function(e) {
				    if(e.which == 27){
						$('.responsive-tooltip-tip.is-active').removeClass('is-active');
				    }
			    });				
				
				
				function updateLocation(){
					var largeScreen = window.matchMedia('only screen and (min-width: '+settings.width+'px)').matches;
					var left = 0;
					if ( $.browser.msie && $.browser.version <=9 && $(window).width() >= settings.width) {
						largeScreen = true; 
					}
					if (largeScreen)
						tip.css({'left':tipToggle.offset().left+tipToggle.outerWidth()+14+'px','top':(tipToggle.offset().top-24)+'px'});
					else{
						switch(settings.align){
						case 'left':
								left = (tipToggle.offset().left-20);
								if (left<0) left = 2;
								tip.css({'left':left+'px','top':(tipToggle.offset().top+tipToggle.outerHeight()+14)+'px'});
							break;
						case 'right':
								left = (tipToggle.offset().left-tip.outerWidth()+42);
								if (left<0) left = 2;
								tip.css({'left':left+'px','top':(tipToggle.offset().top+tipToggle.outerHeight()+14)+'px'});
							break;
						case 'center':
								left = ( (tipToggle.offset().left +tipToggle.outerWidth()/2) - (tip.outerWidth()/2));
								if (left<0) left = 2;
								tip.css({'left':left+'px','top':(tipToggle.offset().top+tipToggle.outerHeight()+14)+'px'});
							break;
						}
					}
				}
				
				tip.keypress(function(event){
					var el = $(this);
				});			
				
				tipToggle.click(function (event){
					event.preventDefault();
					updateLocation();
					if (settings.autoshow){
						if (!window.matchMedia('only screen and (min-width: '+settings.width+'px)').matches){
							var el = $("#tip-"+$(this).attr('rel').split('-')[1]);
							el.toggleClass('is-active');
						}
					}else{
						if ($('.responsive-tooltip-tip.is-active').length){
							$('.responsive-tooltip-tip.is-active').find('.' + settings.closeClass).trigger('click');
						}
						var el = $("#tip-"+$(this).attr('rel').split('-')[1]);
						el.addClass('is-active');
						var tipClose = el.find('.' + settings.closeClass);
						tipClose.click(function (event){
							event.preventDefault();
							tipClose.unbind('click');
							el.removeClass('is-active');
						});
					}
				
				});
				
				tipToggle.mouseenter(function (event){
					if (settings.autoshow){
						updateLocation();
						var el = $("#tip-"+$(this).attr('rel').split('-')[1]);
						el.addClass('is-active');
						el.mouseenter(function(){
							hover = true;
						});
						el.mouseleave(function(){
							hover = false;
							$(this).removeClass('is-active');
							$(this).off('mouseleave');
							$(this).off('mouseenter');
						});
					}
				});
				

				tipToggle.mouseleave(function (event){
					if (settings.autoshow){
						var el = $("#tip-"+$(this).attr('rel').split('-')[1]);
						setTimeout(function(){
							if (!hover){
								el.removeClass('is-active');
							}
						}, 100);
					}
				});
				
				$(window).trigger('resize');
				settings.iteration++;
			}

			obj.enter = function(event) {
				if (settings.autoshow){
					event.preventDefault();
					var el = $(this).prop("tagName")=='DIV' ? $(this) : $("#tip-"+$(this).attr('rel').split('-')[1]);	
					
					el.addClass('is-active');
				}
			};
			
			obj.leave = function(event) {
				if (settings.autoshow){
					event.preventDefault();
					var el = $(this).prop("tagName")=='DIV' ? $(this) : $("#tip-"+$(this).attr('rel').split('-')[1]);
					
					if (el.prop("tagName")=='DIV'){
						el.removeClass('is-active');
					}
				}
			};
			
			obj.destroy = function(event) {
				$(this).each(function(){
					var obj = $(this);
					var tipToggle = obj.children('.tooltip-toggle');
					if (tipToggle==undefined || settings.tipToggle!=null)
						var tipToggle = eval(settings.tipToggle);

					tipToggle.unbind('click');
					tipToggle.unbind('mouseenter');
					tipToggle.unbind('mouseleave');

					obj.unbind('leave');
					obj.unbind('enter');
				    obj.removeData('tooltip');

					var tipNumber = getTooltipNumber(tipToggle);
					tipToggle.removeAttr('rel');
					$('#tip-' + tipNumber).remove();
				    $(window).off(resizeEventNamespace(tipNumber));
				});
		    };

			obj.init(obj);
			
		});
	};

	
})( jQuery );
;
/* ========================================================================
 * Bootstrap: affix.js v3.1.1
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)
    this.$window = $(window)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))
      .on('resize.bs.affix.data-api', $.proxy(this.checkTop, this))

    this.$element     = $(element)
    this.affixed      =
    this.unpin        =
    this.pinnedOffset = null

    this.checkTop()
    this.checkPosition()
  }

  Affix.RESET = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$window.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }
  
  Affix.prototype.checkTop = function () {
	this.options.offset.top = this.options.updateTop(this.$element);
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return
    
    if (this.options.widthOffset!=null && $(window).width() < this.options.widthOffset) {
        this.$element
        	.removeClass(Affix.RESET)
        	.css({'top':'','position':''})
        return
    }

    var scrollHeight = $(document).height()
    var scrollTop    = this.$window.scrollTop()
    var position     = this.$element.offset()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom

    //if (this.affixed == 'top') position.top += scrollTop

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :
                offsetBottom != null && ( (position.top + this.$element.height()) >= scrollHeight - offsetBottom) ? 'bottom' :
                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false
    
    if (this.affixed === affix) return
    if (this.unpin || affix == false) this.$element.css({'top':'','position':''})

    var affixType = 'affix' + (affix ? '-' + affix : '')
    var e         = $.Event(affixType + '.bs.affix')

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    this.affixed = affix
    this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

    this.$element
      .removeClass(Affix.RESET)
      .addClass(affixType)
      .trigger($.Event(affixType.replace('affix', 'affixed')))

    if (affix == 'bottom') {
      this.$element.offset({ top: scrollHeight - offsetBottom - this.$element.height() });
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }




}(jQuery);;
(function( $ ){

	"use strict";

	$.fn.visibility = function(options) {
		
		var settings = {

		};

		if ( options ) {
			$.extend( settings, options );
		}
		
		return $(this).each(function(){

			var obj = $(this);
			obj.first = true;
			
			obj.update = function(e){
				var data = obj.data();
				$("." + data.wrapper).hide();
				var dataselected = $(this).find('option:selected').data();
				$("." + dataselected.show + "." + data.wrapper).show();
				if ($("." + data.show + "." + data.wrapper).offset()!= undefined && data.scroll==true){
					if (obj.closest('modal-window').length==0){
						$('.mfp-wrap').animate({scrollTop: $("." + data.show + "." + data.wrapper).offset().top-64},500);
					}else{
						$('html, body').animate({scrollTop: $("." + dataselected.show + "." + data.wrapper).offset().top-64},500);
					}
				}
				
				$(document).trigger('visibility.change');
			}
			
			obj.updateonclick = function(e){
				e.preventDefault();
				var data = obj.data();
				$("." + data.wrapper).hide();
				$("." + data.show + "." + data.wrapper).show();
				
				console.log(obj.closest('modal-window').length);
				
				if ($("." + data.show + "." + data.wrapper).offset()!= undefined && data.scroll==true){
					if (obj.closest('modal-window').length==0){
						$('.mfp-wrap').animate({scrollTop: $("." + data.show + "." + data.wrapper).offset().top-64},500);
					}else{
						$('html, body').animate({scrollTop: $("." + data.show + "." + data.wrapper).offset().top-64},500);
					}
				}
				
				$(document).trigger('visibility.change');
			}
		
			obj.init = function(obj){
				if ((obj).is('select')){
					obj.on('change',obj.update);
					obj.on('visibility.change',obj.update);
					obj.trigger('change');
				}
				if ((obj).is('input[type="radio"]')){
					obj.change(function(e){
						if (obj.is(':checked')){
							var data = obj.data();
							$("." + data.wrapper).hide();
							$("." + data.show + "." + data.wrapper).show();
						}
					});
					obj.trigger('change');
				}
				
				if ((obj).is('input[type="checkbox"]')){
					obj.change(function(e){
						var data = obj.data();
						if (obj.is(':checked')){
							$("." + data.wrapper).hide();
							$(".on." + data.wrapper).show();
						}else{
							$("." + data.wrapper).hide();
							$(".off." + data.wrapper).show();
						}
					});
					obj.trigger('change');
				}
				
				if ((obj).is('a')){
					obj.on('click',obj.updateonclick);

					obj.not('[data-defaultstate="visible"]').each(function(e){
						var data = $(this).data();
						if (!$('[data-nccontrol="visibility"][data-wrapper="'+data.wrapper+'"]').is('select')){
							$("."+data.show).hide();
						}
					});
					
				}
				$(document).trigger('visibility.change');
			}

			obj.init(obj);
			
		});
	};

})( jQuery );

$(document).ready(function () {
	
    $('[data-nccontrol="visibility"]').each(function () {
    	$(this).visibility();
    })
});


;
//! moment.js
//! version : 2.8.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

(function (undefined) {
    /************************************
        Constants
    ************************************/

    var moment,
        VERSION = '2.8.1',
        // the global-scope this is NOT the global object in Node.js
        globalScope = typeof global !== 'undefined' ? global : this,
        oldGlobalMoment,
        round = Math.round,
        i,

        YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,

        // internal storage for locale config files
        locales = {},

        // extra moment internal properties (plugins register props here)
        momentProperties = [],

        // check for nodeJS
        hasModule = (typeof module !== 'undefined' && module.exports),

        // ASP.NET json date format regex
        aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
        aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,

        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,

        // format tokens
        formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,

        // parsing token regexes
        parseTokenOneOrTwoDigits = /\d\d?/, // 0 - 99
        parseTokenOneToThreeDigits = /\d{1,3}/, // 0 - 999
        parseTokenOneToFourDigits = /\d{1,4}/, // 0 - 9999
        parseTokenOneToSixDigits = /[+\-]?\d{1,6}/, // -999,999 - 999,999
        parseTokenDigits = /\d+/, // nonzero number of digits
        parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.
        parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        parseTokenT = /T/i, // T (ISO separator)
        parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        parseTokenOrdinal = /\d{1,2}/,

        //strict parsing regexes
        parseTokenOneDigit = /\d/, // 0 - 9
        parseTokenTwoDigits = /\d\d/, // 00 - 99
        parseTokenThreeDigits = /\d{3}/, // 000 - 999
        parseTokenFourDigits = /\d{4}/, // 0000 - 9999
        parseTokenSixDigits = /[+-]?\d{6}/, // -999,999 - 999,999
        parseTokenSignedNumber = /[+-]?\d+/, // -inf - inf

        // iso 8601 regex
        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
        isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,

        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',

        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
            ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
            ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d{2}/],
            ['YYYY-DDD', /\d{4}-\d{3}/]
        ],

        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
            ['HH:mm', /(T| )\d\d:\d\d/],
            ['HH', /(T| )\d\d/]
        ],

        // timezone chunker "+10:00" > ["10", "00"] or "-1530" > ["-15", "30"]
        parseTimezoneChunker = /([\+\-]|\d\d)/gi,

        // getter and setter names
        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
        unitMillisecondFactors = {
            'Milliseconds' : 1,
            'Seconds' : 1e3,
            'Minutes' : 6e4,
            'Hours' : 36e5,
            'Days' : 864e5,
            'Months' : 2592e6,
            'Years' : 31536e6
        },

        unitAliases = {
            ms : 'millisecond',
            s : 'second',
            m : 'minute',
            h : 'hour',
            d : 'day',
            D : 'date',
            w : 'week',
            W : 'isoWeek',
            M : 'month',
            Q : 'quarter',
            y : 'year',
            DDD : 'dayOfYear',
            e : 'weekday',
            E : 'isoWeekday',
            gg: 'weekYear',
            GG: 'isoWeekYear'
        },

        camelFunctions = {
            dayofyear : 'dayOfYear',
            isoweekday : 'isoWeekday',
            isoweek : 'isoWeek',
            weekyear : 'weekYear',
            isoweekyear : 'isoWeekYear'
        },

        // format function strings
        formatFunctions = {},

        // default relative time thresholds
        relativeTimeThresholds = {
            s: 45,  // seconds to minute
            m: 45,  // minutes to hour
            h: 22,  // hours to day
            d: 26,  // days to month
            M: 11   // months to year
        },

        // tokens to ordinalize and pad
        ordinalizeTokens = 'DDD w W M D d'.split(' '),
        paddedTokens = 'M D H h m s w W'.split(' '),

        formatTokenFunctions = {
            M    : function () {
                return this.month() + 1;
            },
            MMM  : function (format) {
                return this.localeData().monthsShort(this, format);
            },
            MMMM : function (format) {
                return this.localeData().months(this, format);
            },
            D    : function () {
                return this.date();
            },
            DDD  : function () {
                return this.dayOfYear();
            },
            d    : function () {
                return this.day();
            },
            dd   : function (format) {
                return this.localeData().weekdaysMin(this, format);
            },
            ddd  : function (format) {
                return this.localeData().weekdaysShort(this, format);
            },
            dddd : function (format) {
                return this.localeData().weekdays(this, format);
            },
            w    : function () {
                return this.week();
            },
            W    : function () {
                return this.isoWeek();
            },
            YY   : function () {
                return leftZeroFill(this.year() % 100, 2);
            },
            YYYY : function () {
                return leftZeroFill(this.year(), 4);
            },
            YYYYY : function () {
                return leftZeroFill(this.year(), 5);
            },
            YYYYYY : function () {
                var y = this.year(), sign = y >= 0 ? '+' : '-';
                return sign + leftZeroFill(Math.abs(y), 6);
            },
            gg   : function () {
                return leftZeroFill(this.weekYear() % 100, 2);
            },
            gggg : function () {
                return leftZeroFill(this.weekYear(), 4);
            },
            ggggg : function () {
                return leftZeroFill(this.weekYear(), 5);
            },
            GG   : function () {
                return leftZeroFill(this.isoWeekYear() % 100, 2);
            },
            GGGG : function () {
                return leftZeroFill(this.isoWeekYear(), 4);
            },
            GGGGG : function () {
                return leftZeroFill(this.isoWeekYear(), 5);
            },
            e : function () {
                return this.weekday();
            },
            E : function () {
                return this.isoWeekday();
            },
            a    : function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), true);
            },
            A    : function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), false);
            },
            H    : function () {
                return this.hours();
            },
            h    : function () {
                return this.hours() % 12 || 12;
            },
            m    : function () {
                return this.minutes();
            },
            s    : function () {
                return this.seconds();
            },
            S    : function () {
                return toInt(this.milliseconds() / 100);
            },
            SS   : function () {
                return leftZeroFill(toInt(this.milliseconds() / 10), 2);
            },
            SSS  : function () {
                return leftZeroFill(this.milliseconds(), 3);
            },
            SSSS : function () {
                return leftZeroFill(this.milliseconds(), 3);
            },
            Z    : function () {
                var a = -this.zone(),
                    b = '+';
                if (a < 0) {
                    a = -a;
                    b = '-';
                }
                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);
            },
            ZZ   : function () {
                var a = -this.zone(),
                    b = '+';
                if (a < 0) {
                    a = -a;
                    b = '-';
                }
                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
            },
            z : function () {
                return this.zoneAbbr();
            },
            zz : function () {
                return this.zoneName();
            },
            X    : function () {
                return this.unix();
            },
            Q : function () {
                return this.quarter();
            }
        },

        deprecations = {},

        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];

    // Pick the first defined of two or three arguments. dfl comes from
    // default.
    function dfl(a, b, c) {
        switch (arguments.length) {
            case 2: return a != null ? a : b;
            case 3: return a != null ? a : b != null ? b : c;
            default: throw new Error('Implement me');
        }
    }

    function defaultParsingFlags() {
        // We need to deep clone this object, and es5 standard is not very
        // helpful.
        return {
            empty : false,
            unusedTokens : [],
            unusedInput : [],
            overflow : -2,
            charsLeftOver : 0,
            nullInput : false,
            invalidMonth : null,
            invalidFormat : false,
            userInvalidated : false,
            iso: false
        };
    }

    function printMsg(msg) {
        if (moment.suppressDeprecationWarnings === false &&
                typeof console !== 'undefined' && console.warn) {
            console.warn("Deprecation warning: " + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function () {
            if (firstTime) {
                printMsg(msg);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    function deprecateSimple(name, msg) {
        if (!deprecations[name]) {
            printMsg(msg);
            deprecations[name] = true;
        }
    }

    function padToken(func, count) {
        return function (a) {
            return leftZeroFill(func.call(this, a), count);
        };
    }
    function ordinalizeToken(func, period) {
        return function (a) {
            return this.localeData().ordinal(func.call(this, a), period);
        };
    }

    while (ordinalizeTokens.length) {
        i = ordinalizeTokens.pop();
        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
    }
    while (paddedTokens.length) {
        i = paddedTokens.pop();
        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
    }
    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);


    /************************************
        Constructors
    ************************************/

    function Locale() {
    }

    // Moment prototype object
    function Moment(config, skipOverflow) {
        if (skipOverflow !== false) {
            checkOverflow(config);
        }
        copyConfig(this, config);
        this._d = new Date(+config._d);
    }

    // Duration Constructor
    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 36e5; // 1000 * 60 * 60
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = moment.localeData();

        this._bubble();
    }

    /************************************
        Helpers
    ************************************/


    function extend(a, b) {
        for (var i in b) {
            if (b.hasOwnProperty(i)) {
                a[i] = b[i];
            }
        }

        if (b.hasOwnProperty('toString')) {
            a.toString = b.toString;
        }

        if (b.hasOwnProperty('valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function copyConfig(to, from) {
        var i, prop, val;

        if (typeof from._isAMomentObject !== 'undefined') {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (typeof from._i !== 'undefined') {
            to._i = from._i;
        }
        if (typeof from._f !== 'undefined') {
            to._f = from._f;
        }
        if (typeof from._l !== 'undefined') {
            to._l = from._l;
        }
        if (typeof from._strict !== 'undefined') {
            to._strict = from._strict;
        }
        if (typeof from._tzm !== 'undefined') {
            to._tzm = from._tzm;
        }
        if (typeof from._isUTC !== 'undefined') {
            to._isUTC = from._isUTC;
        }
        if (typeof from._offset !== 'undefined') {
            to._offset = from._offset;
        }
        if (typeof from._pf !== 'undefined') {
            to._pf = from._pf;
        }
        if (typeof from._locale !== 'undefined') {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (typeof val !== 'undefined') {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.ceil(number);
        } else {
            return Math.floor(number);
        }
    }

    // left zero fill a number
    // see http://jsperf.com/left-zero-filling for performance comparison
    function leftZeroFill(number, targetLength, forceSign) {
        var output = '' + Math.abs(number),
            sign = number >= 0;

        while (output.length < targetLength) {
            output = '0' + output;
        }
        return (sign ? (forceSign ? '+' : '') : '-') + output;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        other = makeAs(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, "moment()." + name  + "(period, number) is deprecated. Please use moment()." + name + "(number, period).");
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = moment.duration(val, period);
            addOrSubtractDurationFromMoment(this, dur, direction);
            return this;
        };
    }

    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = duration._days,
            months = duration._months;
        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(+mom._d + milliseconds * isAdding);
        }
        if (days) {
            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
        }
        if (months) {
            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            moment.updateOffset(mom, days || months);
        }
    }

    // check if is an array
    function isArray(input) {
        return Object.prototype.toString.call(input) === '[object Array]';
    }

    function isDate(input) {
        return Object.prototype.toString.call(input) === '[object Date]' ||
            input instanceof Date;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function normalizeUnits(units) {
        if (units) {
            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
            units = unitAliases[units] || camelFunctions[lowered] || lowered;
        }
        return units;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (inputObject.hasOwnProperty(prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    function makeList(field) {
        var count, setter;

        if (field.indexOf('week') === 0) {
            count = 7;
            setter = 'day';
        }
        else if (field.indexOf('month') === 0) {
            count = 12;
            setter = 'month';
        }
        else {
            return;
        }

        moment[field] = function (format, index) {
            var i, getter,
                method = moment._locale[field],
                results = [];

            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            getter = function (i) {
                var m = moment().utc().set(setter, i);
                return method.call(moment._locale, m, format || '');
            };

            if (index != null) {
                return getter(index);
            }
            else {
                for (i = 0; i < count; i++) {
                    results.push(getter(i));
                }
                return results;
            }
        };
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            if (coercedNumber >= 0) {
                value = Math.floor(coercedNumber);
            } else {
                value = Math.ceil(coercedNumber);
            }
        }

        return value;
    }

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    function weeksInYear(year, dow, doy) {
        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
    }

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function checkOverflow(m) {
        var overflow;
        if (m._a && m._pf.overflow === -2) {
            overflow =
                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :
                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :
                m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :
                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :
                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :
                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }

            m._pf.overflow = overflow;
        }
    }

    function isValid(m) {
        if (m._isValid == null) {
            m._isValid = !isNaN(m._d.getTime()) &&
                m._pf.overflow < 0 &&
                !m._pf.empty &&
                !m._pf.invalidMonth &&
                !m._pf.nullInput &&
                !m._pf.invalidFormat &&
                !m._pf.userInvalidated;

            if (m._strict) {
                m._isValid = m._isValid &&
                    m._pf.charsLeftOver === 0 &&
                    m._pf.unusedTokens.length === 0;
            }
        }
        return m._isValid;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        if (!locales[name] && hasModule) {
            try {
                oldLocale = moment.locale();
                require('./locale/' + name);
                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales
                moment.locale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function makeAs(input, model) {
        return model._isUTC ? moment(input).zone(model._offset || 0) :
            moment(input).local();
    }

    /************************************
        Locale
    ************************************/


    extend(Locale.prototype, {

        set : function (config) {
            var prop, i;
            for (i in config) {
                prop = config[i];
                if (typeof prop === 'function') {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        },

        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        months : function (m) {
            return this._months[m.month()];
        },

        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        monthsShort : function (m) {
            return this._monthsShort[m.month()];
        },

        monthsParse : function (monthName) {
            var i, mom, regex;

            if (!this._monthsParse) {
                this._monthsParse = [];
            }

            for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                if (!this._monthsParse[i]) {
                    mom = moment.utc([2000, i]);
                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (this._monthsParse[i].test(monthName)) {
                    return i;
                }
            }
        },

        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdays : function (m) {
            return this._weekdays[m.day()];
        },

        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysShort : function (m) {
            return this._weekdaysShort[m.day()];
        },

        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        weekdaysMin : function (m) {
            return this._weekdaysMin[m.day()];
        },

        weekdaysParse : function (weekdayName) {
            var i, mom, regex;

            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
            }

            for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already
                if (!this._weekdaysParse[i]) {
                    mom = moment([2000, 1]).day(i);
                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (this._weekdaysParse[i].test(weekdayName)) {
                    return i;
                }
            }
        },

        _longDateFormat : {
            LT : 'h:mm A',
            L : 'MM/DD/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY LT',
            LLLL : 'dddd, MMMM D, YYYY LT'
        },
        longDateFormat : function (key) {
            var output = this._longDateFormat[key];
            if (!output && this._longDateFormat[key.toUpperCase()]) {
                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
                    return val.slice(1);
                });
                this._longDateFormat[key] = output;
            }
            return output;
        },

        isPM : function (input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return ((input + '').toLowerCase().charAt(0) === 'p');
        },

        _meridiemParse : /[ap]\.?m?\.?/i,
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'pm' : 'PM';
            } else {
                return isLower ? 'am' : 'AM';
            }
        },

        _calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendar[key];
            return typeof output === 'function' ? output.apply(mom) : output;
        },

        _relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },

        relativeTime : function (number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return (typeof output === 'function') ?
                output(number, withoutSuffix, string, isFuture) :
                output.replace(/%d/i, number);
        },

        pastFuture : function (diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
        },

        ordinal : function (number) {
            return this._ordinal.replace('%d', number);
        },
        _ordinal : '%d',

        preparse : function (string) {
            return string;
        },

        postformat : function (string) {
            return string;
        },

        week : function (mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
        },

        _week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        },

        _invalidDate: 'Invalid date',
        invalidDate: function () {
            return this._invalidDate;
        }
    });

    /************************************
        Formatting
    ************************************/


    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '';
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());

        if (!formatFunctions[format]) {
            formatFunctions[format] = makeFormatFunction(format);
        }

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }


    /************************************
        Parsing
    ************************************/


    // get the regex to find the next token
    function getParseRegexForToken(token, config) {
        var a, strict = config._strict;
        switch (token) {
        case 'Q':
            return parseTokenOneDigit;
        case 'DDDD':
            return parseTokenThreeDigits;
        case 'YYYY':
        case 'GGGG':
        case 'gggg':
            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
        case 'Y':
        case 'G':
        case 'g':
            return parseTokenSignedNumber;
        case 'YYYYYY':
        case 'YYYYY':
        case 'GGGGG':
        case 'ggggg':
            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
        case 'S':
            if (strict) {
                return parseTokenOneDigit;
            }
            /* falls through */
        case 'SS':
            if (strict) {
                return parseTokenTwoDigits;
            }
            /* falls through */
        case 'SSS':
            if (strict) {
                return parseTokenThreeDigits;
            }
            /* falls through */
        case 'DDD':
            return parseTokenOneToThreeDigits;
        case 'MMM':
        case 'MMMM':
        case 'dd':
        case 'ddd':
        case 'dddd':
            return parseTokenWord;
        case 'a':
        case 'A':
            return config._locale._meridiemParse;
        case 'X':
            return parseTokenTimestampMs;
        case 'Z':
        case 'ZZ':
            return parseTokenTimezone;
        case 'T':
            return parseTokenT;
        case 'SSSS':
            return parseTokenDigits;
        case 'MM':
        case 'DD':
        case 'YY':
        case 'GG':
        case 'gg':
        case 'HH':
        case 'hh':
        case 'mm':
        case 'ss':
        case 'ww':
        case 'WW':
            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
        case 'M':
        case 'D':
        case 'd':
        case 'H':
        case 'h':
        case 'm':
        case 's':
        case 'w':
        case 'W':
        case 'e':
        case 'E':
            return parseTokenOneOrTwoDigits;
        case 'Do':
            return parseTokenOrdinal;
        default :
            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), 'i'));
            return a;
        }
    }

    function timezoneMinutesFromString(string) {
        string = string || '';
        var possibleTzMatches = (string.match(parseTokenTimezone) || []),
            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
            minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? -minutes : minutes;
    }

    // function to convert string input to date
    function addTimeToArrayFromToken(token, input, config) {
        var a, datePartArray = config._a;

        switch (token) {
        // QUARTER
        case 'Q':
            if (input != null) {
                datePartArray[MONTH] = (toInt(input) - 1) * 3;
            }
            break;
        // MONTH
        case 'M' : // fall through to MM
        case 'MM' :
            if (input != null) {
                datePartArray[MONTH] = toInt(input) - 1;
            }
            break;
        case 'MMM' : // fall through to MMMM
        case 'MMMM' :
            a = config._locale.monthsParse(input);
            // if we didn't find a month name, mark the date as invalid.
            if (a != null) {
                datePartArray[MONTH] = a;
            } else {
                config._pf.invalidMonth = input;
            }
            break;
        // DAY OF MONTH
        case 'D' : // fall through to DD
        case 'DD' :
            if (input != null) {
                datePartArray[DATE] = toInt(input);
            }
            break;
        case 'Do' :
            if (input != null) {
                datePartArray[DATE] = toInt(parseInt(input, 10));
            }
            break;
        // DAY OF YEAR
        case 'DDD' : // fall through to DDDD
        case 'DDDD' :
            if (input != null) {
                config._dayOfYear = toInt(input);
            }

            break;
        // YEAR
        case 'YY' :
            datePartArray[YEAR] = moment.parseTwoDigitYear(input);
            break;
        case 'YYYY' :
        case 'YYYYY' :
        case 'YYYYYY' :
            datePartArray[YEAR] = toInt(input);
            break;
        // AM / PM
        case 'a' : // fall through to A
        case 'A' :
            config._isPm = config._locale.isPM(input);
            break;
        // 24 HOUR
        case 'H' : // fall through to hh
        case 'HH' : // fall through to hh
        case 'h' : // fall through to hh
        case 'hh' :
            datePartArray[HOUR] = toInt(input);
            break;
        // MINUTE
        case 'm' : // fall through to mm
        case 'mm' :
            datePartArray[MINUTE] = toInt(input);
            break;
        // SECOND
        case 's' : // fall through to ss
        case 'ss' :
            datePartArray[SECOND] = toInt(input);
            break;
        // MILLISECOND
        case 'S' :
        case 'SS' :
        case 'SSS' :
        case 'SSSS' :
            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
            break;
        // UNIX TIMESTAMP WITH MS
        case 'X':
            config._d = new Date(parseFloat(input) * 1000);
            break;
        // TIMEZONE
        case 'Z' : // fall through to ZZ
        case 'ZZ' :
            config._useUTC = true;
            config._tzm = timezoneMinutesFromString(input);
            break;
        // WEEKDAY - human
        case 'dd':
        case 'ddd':
        case 'dddd':
            a = config._locale.weekdaysParse(input);
            // if we didn't get a weekday name, mark the date as invalid
            if (a != null) {
                config._w = config._w || {};
                config._w['d'] = a;
            } else {
                config._pf.invalidWeekday = input;
            }
            break;
        // WEEK, WEEK DAY - numeric
        case 'w':
        case 'ww':
        case 'W':
        case 'WW':
        case 'd':
        case 'e':
        case 'E':
            token = token.substr(0, 1);
            /* falls through */
        case 'gggg':
        case 'GGGG':
        case 'GGGGG':
            token = token.substr(0, 2);
            if (input) {
                config._w = config._w || {};
                config._w[token] = toInt(input);
            }
            break;
        case 'gg':
        case 'GG':
            config._w = config._w || {};
            config._w[token] = moment.parseTwoDigitYear(input);
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);
            week = dfl(w.W, 1);
            weekday = dfl(w.E, 1);
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);
            week = dfl(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < dow) {
                    ++week;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function dateFromConfig(config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                config._pf._overflowDayOfYear = true;
            }

            date = makeUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
        // Apply timezone offset from input. The actual zone can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);
        }
    }

    function dateFromObject(config) {
        var normalizedInput;

        if (config._d) {
            return;
        }

        normalizedInput = normalizeObjectUnits(config._i);
        config._a = [
            normalizedInput.year,
            normalizedInput.month,
            normalizedInput.day,
            normalizedInput.hour,
            normalizedInput.minute,
            normalizedInput.second,
            normalizedInput.millisecond
        ];

        dateFromConfig(config);
    }

    function currentDateArray(config) {
        var now = new Date();
        if (config._useUTC) {
            return [
                now.getUTCFullYear(),
                now.getUTCMonth(),
                now.getUTCDate()
            ];
        } else {
            return [now.getFullYear(), now.getMonth(), now.getDate()];
        }
    }

    // date from string and format string
    function makeDateFromStringAndFormat(config) {
        if (config._f === moment.ISO_8601) {
            parseISO(config);
            return;
        }

        config._a = [];
        config._pf.empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    config._pf.unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    config._pf.empty = false;
                }
                else {
                    config._pf.unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                config._pf.unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        config._pf.charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            config._pf.unusedInput.push(string);
        }

        // handle am pm
        if (config._isPm && config._a[HOUR] < 12) {
            config._a[HOUR] += 12;
        }
        // if is 12 am, change hours to 0
        if (config._isPm === false && config._a[HOUR] === 12) {
            config._a[HOUR] = 0;
        }

        dateFromConfig(config);
        checkOverflow(config);
    }

    function unescapeFormat(s) {
        return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        });
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function regexpEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    // date from string and array of format strings
    function makeDateFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            config._pf.invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            tempConfig._pf = defaultParsingFlags();
            tempConfig._f = config._f[i];
            makeDateFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += tempConfig._pf.charsLeftOver;

            //or tokens
            currentScore += tempConfig._pf.unusedTokens.length * 10;

            tempConfig._pf.score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    // date from iso format
    function parseISO(config) {
        var i, l,
            string = config._i,
            match = isoRegex.exec(string);

        if (match) {
            config._pf.iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(string)) {
                    // match[5] should be "T" or undefined
                    config._f = isoDates[i][0] + (match[6] || ' ');
                    break;
                }
            }
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(string)) {
                    config._f += isoTimes[i][0];
                    break;
                }
            }
            if (string.match(parseTokenTimezone)) {
                config._f += 'Z';
            }
            makeDateFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function makeDateFromString(config) {
        parseISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            moment.createFromInputFallback(config);
        }
    }

    function makeDateFromInput(config) {
        var input = config._i, matched;
        if (input === undefined) {
            config._d = new Date();
        } else if (isDate(input)) {
            config._d = new Date(+input);
        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {
            config._d = new Date(+matched[1]);
        } else if (typeof input === 'string') {
            makeDateFromString(config);
        } else if (isArray(input)) {
            config._a = input.slice(0);
            dateFromConfig(config);
        } else if (typeof(input) === 'object') {
            dateFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            moment.createFromInputFallback(config);
        }
    }

    function makeDate(y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor doesn't accept years < 1970
        if (y < 1970) {
            date.setFullYear(y);
        }
        return date;
    }

    function makeUTCDate(y) {
        var date = new Date(Date.UTC.apply(null, arguments));
        if (y < 1970) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    function parseWeekday(input, locale) {
        if (typeof input === 'string') {
            if (!isNaN(input)) {
                input = parseInt(input, 10);
            }
            else {
                input = locale.weekdaysParse(input);
                if (typeof input !== 'number') {
                    return null;
                }
            }
        }
        return input;
    }

    /************************************
        Relative Time
    ************************************/


    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime(posNegDuration, withoutSuffix, locale) {
        var duration = moment.duration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            years = round(duration.as('y')),

            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||
                minutes === 1 && ['m'] ||
                minutes < relativeTimeThresholds.m && ['mm', minutes] ||
                hours === 1 && ['h'] ||
                hours < relativeTimeThresholds.h && ['hh', hours] ||
                days === 1 && ['d'] ||
                days < relativeTimeThresholds.d && ['dd', days] ||
                months === 1 && ['M'] ||
                months < relativeTimeThresholds.M && ['MM', months] ||
                years === 1 && ['y'] || ['yy', years];

        args[2] = withoutSuffix;
        args[3] = +posNegDuration > 0;
        args[4] = locale;
        return substituteTimeAgo.apply({}, args);
    }


    /************************************
        Week of Year
    ************************************/


    // firstDayOfWeek       0 = sun, 6 = sat
    //                      the day of the week that starts the week
    //                      (usually sunday or monday)
    // firstDayOfWeekOfYear 0 = sun, 6 = sat
    //                      the first week is the week that contains the first
    //                      of this day of the week
    //                      (eg. ISO weeks use thursday (4))
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
        var end = firstDayOfWeekOfYear - firstDayOfWeek,
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
            adjustedMoment;


        if (daysToDayOfWeek > end) {
            daysToDayOfWeek -= 7;
        }

        if (daysToDayOfWeek < end - 7) {
            daysToDayOfWeek += 7;
        }

        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');
        return {
            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
            year: adjustedMoment.year()
        };
    }

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;

        d = d === 0 ? 7 : d;
        weekday = weekday != null ? weekday : firstDayOfWeek;
        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

        return {
            year: dayOfYear > 0 ? year : year - 1,
            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
        };
    }

    /************************************
        Top Level Functions
    ************************************/

    function makeMoment(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || moment.localeData(config._l);

        if (input === null || (format === undefined && input === '')) {
            return moment.invalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (moment.isMoment(input)) {
            return new Moment(input, true);
        } else if (format) {
            if (isArray(format)) {
                makeDateFromStringAndArray(config);
            } else {
                makeDateFromStringAndFormat(config);
            }
        } else {
            makeDateFromInput(config);
        }

        return new Moment(config);
    }

    moment = function (input, format, locale, strict) {
        var c;

        if (typeof(locale) === "boolean") {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c = {};
        c._isAMomentObject = true;
        c._i = input;
        c._f = format;
        c._l = locale;
        c._strict = strict;
        c._isUTC = false;
        c._pf = defaultParsingFlags();

        return makeMoment(c);
    };

    moment.suppressDeprecationWarnings = false;

    moment.createFromInputFallback = deprecate(
        'moment construction falls back to js Date. This is ' +
        'discouraged and will be removed in upcoming major ' +
        'release. Please refer to ' +
        'https://github.com/moment/moment/issues/1407 for more info.',
        function (config) {
            config._d = new Date(config._i);
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return moment();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    moment.min = function () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    };

    moment.max = function () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    };

    // creating with utc
    moment.utc = function (input, format, locale, strict) {
        var c;

        if (typeof(locale) === "boolean") {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c = {};
        c._isAMomentObject = true;
        c._useUTC = true;
        c._isUTC = true;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        c._pf = defaultParsingFlags();

        return makeMoment(c).utc();
    };

    // creating with unix timestamp (in seconds)
    moment.unix = function (input) {
        return moment(input * 1000);
    };

    // duration
    moment.duration = function (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            parseIso,
            diffRes;

        if (moment.isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(match[MILLISECOND]) * sign
            };
        } else if (!!(match = isoDurationRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            parseIso = function (inp) {
                // We'd normally use ~~inp for this, but unfortunately it also
                // converts floats to ints.
                // inp may be undefined, so careful calling replace on it.
                var res = inp && parseFloat(inp.replace(',', '.'));
                // apply sign while we're at it
                return (isNaN(res) ? 0 : res) * sign;
            };
            duration = {
                y: parseIso(match[2]),
                M: parseIso(match[3]),
                d: parseIso(match[4]),
                h: parseIso(match[5]),
                m: parseIso(match[6]),
                s: parseIso(match[7]),
                w: parseIso(match[8])
            };
        } else if (typeof duration === 'object' &&
                ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(moment(duration.from), moment(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (moment.isDuration(input) && input.hasOwnProperty('_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    };

    // version number
    moment.version = VERSION;

    // default format
    moment.defaultFormat = isoFormat;

    // constant that refers to the ISO standard
    moment.ISO_8601 = function () {};

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    moment.momentProperties = momentProperties;

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    moment.updateOffset = function () {};

    // This function allows you to set a threshold for relative time strings
    moment.relativeTimeThreshold = function (threshold, limit) {
        if (relativeTimeThresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return relativeTimeThresholds[threshold];
        }
        relativeTimeThresholds[threshold] = limit;
        return true;
    };

    moment.lang = deprecate(
        "moment.lang is deprecated. Use moment.locale instead.",
        function (key, value) {
            return moment.locale(key, value);
        }
    );

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    moment.locale = function (key, values) {
        var data;
        if (key) {
            if (typeof(values) !== "undefined") {
                data = moment.defineLocale(key, values);
            }
            else {
                data = moment.localeData(key);
            }

            if (data) {
                moment.duration._locale = moment._locale = data;
            }
        }

        return moment._locale._abbr;
    };

    moment.defineLocale = function (name, values) {
        if (values !== null) {
            values.abbr = name;
            if (!locales[name]) {
                locales[name] = new Locale();
            }
            locales[name].set(values);

            // backwards compat for now: also set the locale
            moment.locale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    };

    moment.langData = deprecate(
        "moment.langData is deprecated. Use moment.localeData instead.",
        function (key) {
            return moment.localeData(key);
        }
    );

    // returns locale data
    moment.localeData = function (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return moment._locale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    };

    // compare moment object
    moment.isMoment = function (obj) {
        return obj instanceof Moment ||
            (obj != null &&  obj.hasOwnProperty('_isAMomentObject'));
    };

    // for typechecking Duration objects
    moment.isDuration = function (obj) {
        return obj instanceof Duration;
    };

    for (i = lists.length - 1; i >= 0; --i) {
        makeList(lists[i]);
    }

    moment.normalizeUnits = function (units) {
        return normalizeUnits(units);
    };

    moment.invalid = function (flags) {
        var m = moment.utc(NaN);
        if (flags != null) {
            extend(m._pf, flags);
        }
        else {
            m._pf.userInvalidated = true;
        }

        return m;
    };

    moment.parseZone = function () {
        return moment.apply(null, arguments).parseZone();
    };

    moment.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    /************************************
        Moment Prototype
    ************************************/


    extend(moment.fn = Moment.prototype, {

        clone : function () {
            return moment(this);
        },

        valueOf : function () {
            return +this._d + ((this._offset || 0) * 60000);
        },

        unix : function () {
            return Math.floor(+this / 1000);
        },

        toString : function () {
            return this.clone().locale('en').format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        },

        toDate : function () {
            return this._offset ? new Date(+this) : this._d;
        },

        toISOString : function () {
            var m = moment(this).utc();
            if (0 < m.year() && m.year() <= 9999) {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            } else {
                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        },

        toArray : function () {
            var m = this;
            return [
                m.year(),
                m.month(),
                m.date(),
                m.hours(),
                m.minutes(),
                m.seconds(),
                m.milliseconds()
            ];
        },

        isValid : function () {
            return isValid(this);
        },

        isDSTShifted : function () {
            if (this._a) {
                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
            }

            return false;
        },

        parsingFlags : function () {
            return extend({}, this._pf);
        },

        invalidAt: function () {
            return this._pf.overflow;
        },

        utc : function (keepLocalTime) {
            return this.zone(0, keepLocalTime);
        },

        local : function (keepLocalTime) {
            if (this._isUTC) {
                this.zone(0, keepLocalTime);
                this._isUTC = false;

                if (keepLocalTime) {
                    this.add(this._d.getTimezoneOffset(), 'm');
                }
            }
            return this;
        },

        format : function (inputString) {
            var output = formatMoment(this, inputString || moment.defaultFormat);
            return this.localeData().postformat(output);
        },

        add : createAdder(1, 'add'),

        subtract : createAdder(-1, 'subtract'),

        diff : function (input, units, asFloat) {
            var that = makeAs(input, this),
                zoneDiff = (this.zone() - that.zone()) * 6e4,
                diff, output;

            units = normalizeUnits(units);

            if (units === 'year' || units === 'month') {
                // average number of days in the months in the given dates
                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2
                // difference in months
                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());
                // adjust by taking difference in days, average number of days
                // and dst in the given months.
                output += ((this - moment(this).startOf('month')) -
                        (that - moment(that).startOf('month'))) / diff;
                // same as above but with zones, to negate all dst
                output -= ((this.zone() - moment(this).startOf('month').zone()) -
                        (that.zone() - moment(that).startOf('month').zone())) * 6e4 / diff;
                if (units === 'year') {
                    output = output / 12;
                }
            } else {
                diff = (this - that);
                output = units === 'second' ? diff / 1e3 : // 1000
                    units === 'minute' ? diff / 6e4 : // 1000 * 60
                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60
                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                    diff;
            }
            return asFloat ? output : absRound(output);
        },

        from : function (time, withoutSuffix) {
            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        },

        fromNow : function (withoutSuffix) {
            return this.from(moment(), withoutSuffix);
        },

        calendar : function (time) {
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're zone'd or not.
            var now = time || moment(),
                sod = makeAs(now, this).startOf('day'),
                diff = this.diff(sod, 'days', true),
                format = diff < -6 ? 'sameElse' :
                    diff < -1 ? 'lastWeek' :
                    diff < 0 ? 'lastDay' :
                    diff < 1 ? 'sameDay' :
                    diff < 2 ? 'nextDay' :
                    diff < 7 ? 'nextWeek' : 'sameElse';
            return this.format(this.localeData().calendar(format, this));
        },

        isLeapYear : function () {
            return isLeapYear(this.year());
        },

        isDST : function () {
            return (this.zone() < this.clone().month(0).zone() ||
                this.zone() < this.clone().month(5).zone());
        },

        day : function (input) {
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            if (input != null) {
                input = parseWeekday(input, this.localeData());
                return this.add(input - day, 'd');
            } else {
                return day;
            }
        },

        month : makeAccessor('Month', true),

        startOf : function (units) {
            units = normalizeUnits(units);
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'quarter':
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'isoWeek':
            case 'day':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
                /* falls through */
            }

            // weeks are a special case
            if (units === 'week') {
                this.weekday(0);
            } else if (units === 'isoWeek') {
                this.isoWeekday(1);
            }

            // quarters are also special
            if (units === 'quarter') {
                this.month(Math.floor(this.month() / 3) * 3);
            }

            return this;
        },

        endOf: function (units) {
            units = normalizeUnits(units);
            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
        },

        isAfter: function (input, units) {
            units = typeof units !== 'undefined' ? units : 'millisecond';
            return +this.clone().startOf(units) > +moment(input).startOf(units);
        },

        isBefore: function (input, units) {
            units = typeof units !== 'undefined' ? units : 'millisecond';
            return +this.clone().startOf(units) < +moment(input).startOf(units);
        },

        isSame: function (input, units) {
            units = units || 'ms';
            return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);
        },

        min: deprecate(
                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
                 function (other) {
                     other = moment.apply(null, arguments);
                     return other < this ? this : other;
                 }
         ),

        max: deprecate(
                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
                function (other) {
                    other = moment.apply(null, arguments);
                    return other > this ? this : other;
                }
        ),

        // keepLocalTime = true means only change the timezone, without
        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->
        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone
        // +0200, so we adjust the time as needed, to be valid.
        //
        // Keeping the time actually adds/subtracts (one hour)
        // from the actual represented time. That is why we call updateOffset
        // a second time. In case it wants us to change the offset again
        // _changeInProgress == true case, then we have to adjust, because
        // there is no such time in the given timezone.
        zone : function (input, keepLocalTime) {
            var offset = this._offset || 0,
                localAdjust;
            if (input != null) {
                if (typeof input === 'string') {
                    input = timezoneMinutesFromString(input);
                }
                if (Math.abs(input) < 16) {
                    input = input * 60;
                }
                if (!this._isUTC && keepLocalTime) {
                    localAdjust = this._d.getTimezoneOffset();
                }
                this._offset = input;
                this._isUTC = true;
                if (localAdjust != null) {
                    this.subtract(localAdjust, 'm');
                }
                if (offset !== input) {
                    if (!keepLocalTime || this._changeInProgress) {
                        addOrSubtractDurationFromMoment(this,
                                moment.duration(offset - input, 'm'), 1, false);
                    } else if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        moment.updateOffset(this, true);
                        this._changeInProgress = null;
                    }
                }
            } else {
                return this._isUTC ? offset : this._d.getTimezoneOffset();
            }
            return this;
        },

        zoneAbbr : function () {
            return this._isUTC ? 'UTC' : '';
        },

        zoneName : function () {
            return this._isUTC ? 'Coordinated Universal Time' : '';
        },

        parseZone : function () {
            if (this._tzm) {
                this.zone(this._tzm);
            } else if (typeof this._i === 'string') {
                this.zone(this._i);
            }
            return this;
        },

        hasAlignedHourOffset : function (input) {
            if (!input) {
                input = 0;
            }
            else {
                input = moment(input).zone();
            }

            return (this.zone() - input) % 60 === 0;
        },

        daysInMonth : function () {
            return daysInMonth(this.year(), this.month());
        },

        dayOfYear : function (input) {
            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
        },

        quarter : function (input) {
            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
        },

        weekYear : function (input) {
            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
            return input == null ? year : this.add((input - year), 'y');
        },

        isoWeekYear : function (input) {
            var year = weekOfYear(this, 1, 4).year;
            return input == null ? year : this.add((input - year), 'y');
        },

        week : function (input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
        },

        isoWeek : function (input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
        },

        weekday : function (input) {
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
        },

        isoWeekday : function (input) {
            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.
            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
        },

        isoWeeksInYear : function () {
            return weeksInYear(this.year(), 1, 4);
        },

        weeksInYear : function () {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
        },

        get : function (units) {
            units = normalizeUnits(units);
            return this[units]();
        },

        set : function (units, value) {
            units = normalizeUnits(units);
            if (typeof this[units] === 'function') {
                this[units](value);
            }
            return this;
        },

        // If passed a locale key, it will set the locale for this
        // instance.  Otherwise, it will return the locale configuration
        // variables for this instance.
        locale : function (key) {
            if (key === undefined) {
                return this._locale._abbr;
            } else {
                this._locale = moment.localeData(key);
                return this;
            }
        },

        lang : deprecate(
            "moment().lang() is deprecated. Use moment().localeData() instead.",
            function (key) {
                if (key === undefined) {
                    return this.localeData();
                } else {
                    this._locale = moment.localeData(key);
                    return this;
                }
            }
        ),

        localeData : function () {
            return this._locale;
        }
    });

    function rawMonthSetter(mom, value) {
        var dayOfMonth;

        // TODO: Move this out of here!
        if (typeof value === 'string') {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (typeof value !== 'number') {
                return mom;
            }
        }

        dayOfMonth = Math.min(mom.date(),
                daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function rawGetter(mom, unit) {
        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
    }

    function rawSetter(mom, unit, value) {
        if (unit === 'Month') {
            return rawMonthSetter(mom, value);
        } else {
            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }

    function makeAccessor(unit, keepTime) {
        return function (value) {
            if (value != null) {
                rawSetter(this, unit, value);
                moment.updateOffset(this, keepTime);
                return this;
            } else {
                return rawGetter(this, unit);
            }
        };
    }

    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
    // moment.fn.month is defined separately
    moment.fn.date = makeAccessor('Date', true);
    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));
    moment.fn.year = makeAccessor('FullYear', true);
    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));

    // add plural methods
    moment.fn.days = moment.fn.day;
    moment.fn.months = moment.fn.month;
    moment.fn.weeks = moment.fn.week;
    moment.fn.isoWeeks = moment.fn.isoWeek;
    moment.fn.quarters = moment.fn.quarter;

    // add aliased format methods
    moment.fn.toJSON = moment.fn.toISOString;

    /************************************
        Duration Prototype
    ************************************/


    function daysToYears (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        return days * 400 / 146097;
    }

    function yearsToDays (years) {
        // years * 365 + absRound(years / 4) -
        //     absRound(years / 100) + absRound(years / 400);
        return years * 146097 / 400;
    }

    extend(moment.duration.fn = Duration.prototype, {

        _bubble : function () {
            var milliseconds = this._milliseconds,
                days = this._days,
                months = this._months,
                data = this._data,
                seconds, minutes, hours, years = 0;

            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000;

            seconds = absRound(milliseconds / 1000);
            data.seconds = seconds % 60;

            minutes = absRound(seconds / 60);
            data.minutes = minutes % 60;

            hours = absRound(minutes / 60);
            data.hours = hours % 24;

            days += absRound(hours / 24);

            // Accurately convert days to years, assume start from year 0.
            years = absRound(daysToYears(days));
            days -= absRound(yearsToDays(years));

            // 30 days to a month
            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
            months += absRound(days / 30);
            days %= 30;

            // 12 months -> 1 year
            years += absRound(months / 12);
            months %= 12;

            data.days = days;
            data.months = months;
            data.years = years;
        },

        abs : function () {
            this._milliseconds = Math.abs(this._milliseconds);
            this._days = Math.abs(this._days);
            this._months = Math.abs(this._months);

            this._data.milliseconds = Math.abs(this._data.milliseconds);
            this._data.seconds = Math.abs(this._data.seconds);
            this._data.minutes = Math.abs(this._data.minutes);
            this._data.hours = Math.abs(this._data.hours);
            this._data.months = Math.abs(this._data.months);
            this._data.years = Math.abs(this._data.years);

            return this;
        },

        weeks : function () {
            return absRound(this.days() / 7);
        },

        valueOf : function () {
            return this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6;
        },

        humanize : function (withSuffix) {
            var output = relativeTime(this, !withSuffix, this.localeData());

            if (withSuffix) {
                output = this.localeData().pastFuture(+this, output);
            }

            return this.localeData().postformat(output);
        },

        add : function (input, val) {
            // supports only 2.0-style add(1, 's') or add(moment)
            var dur = moment.duration(input, val);

            this._milliseconds += dur._milliseconds;
            this._days += dur._days;
            this._months += dur._months;

            this._bubble();

            return this;
        },

        subtract : function (input, val) {
            var dur = moment.duration(input, val);

            this._milliseconds -= dur._milliseconds;
            this._days -= dur._days;
            this._months -= dur._months;

            this._bubble();

            return this;
        },

        get : function (units) {
            units = normalizeUnits(units);
            return this[units.toLowerCase() + 's']();
        },

        as : function (units) {
            var days, months;
            units = normalizeUnits(units);

            days = this._days + this._milliseconds / 864e5;
            if (units === 'month' || units === 'year') {
                months = this._months + daysToYears(days) * 12;
                return units === 'month' ? months : months / 12;
            } else {
                days += yearsToDays(this._months / 12);
                switch (units) {
                    case 'week': return days / 7;
                    case 'day': return days;
                    case 'hour': return days * 24;
                    case 'minute': return days * 24 * 60;
                    case 'second': return days * 24 * 60 * 60;
                    case 'millisecond': return days * 24 * 60 * 60 * 1000;
                    default: throw new Error('Unknown unit ' + units);
                }
            }
        },

        lang : moment.fn.lang,
        locale : moment.fn.locale,

        toIsoString : deprecate(
            "toIsoString() is deprecated. Please use toISOString() instead " +
            "(notice the capitals)",
            function () {
                return this.toISOString();
            }
        ),

        toISOString : function () {
            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            var years = Math.abs(this.years()),
                months = Math.abs(this.months()),
                days = Math.abs(this.days()),
                hours = Math.abs(this.hours()),
                minutes = Math.abs(this.minutes()),
                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);

            if (!this.asSeconds()) {
                // this is the same as C#'s (Noda) and python (isodate)...
                // but not other JS (goog.date)
                return 'P0D';
            }

            return (this.asSeconds() < 0 ? '-' : '') +
                'P' +
                (years ? years + 'Y' : '') +
                (months ? months + 'M' : '') +
                (days ? days + 'D' : '') +
                ((hours || minutes || seconds) ? 'T' : '') +
                (hours ? hours + 'H' : '') +
                (minutes ? minutes + 'M' : '') +
                (seconds ? seconds + 'S' : '');
        },

        localeData : function () {
            return this._locale;
        }
    });

    function makeDurationGetter(name) {
        moment.duration.fn[name] = function () {
            return this._data[name];
        };
    }

    for (i in unitMillisecondFactors) {
        if (unitMillisecondFactors.hasOwnProperty(i)) {
            makeDurationGetter(i.toLowerCase());
        }
    }

    moment.duration.fn.asMilliseconds = function () {
        return this.as('ms');
    };
    moment.duration.fn.asSeconds = function () {
        return this.as('s');
    };
    moment.duration.fn.asMinutes = function () {
        return this.as('m');
    };
    moment.duration.fn.asHours = function () {
        return this.as('h');
    };
    moment.duration.fn.asDays = function () {
        return this.as('d');
    };
    moment.duration.fn.asWeeks = function () {
        return this.as('weeks');
    };
    moment.duration.fn.asMonths = function () {
        return this.as('M');
    };
    moment.duration.fn.asYears = function () {
        return this.as('y');
    };

    /************************************
        Default Locale
    ************************************/


    // Set default locale, other locale will inherit from English.
    moment.locale('en', {
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    /* EMBED_LOCALES */

    /************************************
        Exposing Moment
    ************************************/

    function makeGlobal(shouldDeprecate) {
        /*global ender:false */
        if (typeof ender !== 'undefined') {
            return;
        }
        oldGlobalMoment = globalScope.moment;
        if (shouldDeprecate) {
            globalScope.moment = deprecate(
                    'Accessing Moment through the global scope is ' +
                    'deprecated, and will be removed in an upcoming ' +
                    'release.',
                    moment);
        } else {
            globalScope.moment = moment;
        }
    }

    // CommonJS module is defined
    if (hasModule) {
        module.exports = moment;
    } else if (typeof define === 'function' && define.amd) {
        define('moment', function (require, exports, module) {
            if (module.config && module.config() && module.config().noGlobal === true) {
                // release the global variable
                globalScope.moment = oldGlobalMoment;
            }

            return moment;
        });
        makeGlobal(true);
    } else {
        makeGlobal();
    }
}).call(this);;
/**
* @version: 1.3.13
* @author: Dan Grossman http://www.dangrossman.info/
* @date: 2014-09-04
* @copyright: Copyright (c) 2012-2014 Dan Grossman. All rights reserved.
* @license: Licensed under Apache License v2.0. See http://www.apache.org/licenses/LICENSE-2.0
* @website: http://www.improvely.com/
*/

(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(['moment', 'jquery', 'exports'], function(momentjs, $, exports) {
      root.daterangepicker = factory(root, exports, momentjs, $);
    });

  } else if (typeof exports !== 'undefined') {
    var momentjs = require('moment');
    var jQuery;
    try {
      jQuery = require('jquery');
    } catch (err) {
      jQuery = window.jQuery;
      if (!jQuery) throw new Error('jQuery dependency not found');
    }

    factory(root, exports, momentjs, jQuery);

  // Finally, as a browser global.
  } else {
    root.daterangepicker = factory(root, {}, root.moment, (root.jQuery || root.Zepto || root.ender || root.$));
  }

}(this, function(root, daterangepicker, moment, $) {

    var DateRangePicker = function (element, options, cb) {

        // by default, the daterangepicker element is placed at the bottom of HTML body
        this.parentEl = 'body';

        //element that triggered the date range picker
        this.element = $(element);

        //tracks visible state
        this.isShowing = false;

        //create the picker HTML object
        /*
        var DRPTemplate = '<div class="daterangepicker dropdown-menu">' +
			        '<div class="ranges group">' +
				        '<div class="range_inputs">' +
				          '<div class="daterangepicker_start_input">' +
				            '<label for="daterangepicker_start"></label>' +
				            '<input class="input-mini" type="text" name="daterangepicker_start" placeholder="MM/DD/YYYY" value="" />' +
				          '</div>' +
				          '<div class="daterangepicker_end_input">' +
				            '<label for="daterangepicker_end"></label>' +
				            '<input class="input-mini" type="text" name="daterangepicker_end" placeholder="MM/DD/YYYY" value="" />' +
				          '</div>' +
				          '<button class="applyBtn btn-small-uppercase" disabled="disabled"></button>&nbsp;' +
				          '<button class="cancelBtn"></button>' +
				        '</div>' +
				    '</div>' +
	                '<div class="calendar left"></div>' +
	                '<div class="calendar right"></div>' +
	              '</div>';
	    */
        var DRPTemplate = '<div class="daterangepicker dropdown-menu">' +
        '<div class="ranges group">' +
	        '<div class="range_inputs">' +
	          '<div class="daterangepicker_start_input">' +
	            '<label for="daterangepicker_start"></label>' +
	            '<input class="input-mini" type="text" name="daterangepicker_start" placeholder="MM/DD/YYYY" value="" />' +
	          '</div>' +
	          '<div class="daterangepicker_end_input">' +
	            '<label for="daterangepicker_end"></label>' +
	            '<input class="input-mini" type="text" name="daterangepicker_end" placeholder="MM/DD/YYYY" value="" />' +
	          '</div>' +
	          '<button class="applyBtn btn-small-uppercase" disabled="disabled"></button>&nbsp;' +
	          '<button class="resetBtn btn-default">Reset</button>' +
	        '</div>' +
	    '</div>' +
        '<div class="calendar left"></div>' +
        '<div class="calendar right"></div>' +
      '</div>';

        //custom options
        if (typeof options !== 'object' || options === null)
            options = {};

        this.parentEl = (typeof options === 'object' && options.parentEl && $(options.parentEl).length) ? $(options.parentEl) : $(this.parentEl);
        this.container = $(DRPTemplate).appendTo(this.parentEl);

        this.setOptions(options, cb);

        //apply CSS classes and labels to buttons
        var c = this.container;
        $.each(this.buttonClasses, function (idx, val) {
            c.find('button').addClass(val);
        });
        this.container.find('.daterangepicker_start_input label').html(this.locale.fromLabel);
        this.container.find('.daterangepicker_end_input label').html(this.locale.toLabel);
        if (this.applyClass.length)
            this.container.find('.applyBtn').addClass(this.applyClass);
        if (this.cancelClass.length)
            this.container.find('.cancelBtn').addClass(this.cancelClass);
        this.container.find('.applyBtn').html(this.locale.applyLabel);
        this.container.find('.cancelBtn').html(this.locale.cancelLabel);

        //event listeners

        this.container.find('.calendar')
            .on('click.daterangepicker', '.prev', $.proxy(this.clickPrev, this))
            .on('click.daterangepicker', '.next', $.proxy(this.clickNext, this))
            .on('click.daterangepicker', 'td.available', $.proxy(this.clickDate, this))
            .on('mouseenter.daterangepicker', 'td.available', $.proxy(this.hoverDate, this))
            .on('mouseleave.daterangepicker', 'td.available', $.proxy(this.updateFormInputs, this))
            .on('change.daterangepicker', 'select.yearselect', $.proxy(this.updateMonthYear, this))
            .on('change.daterangepicker', 'select.monthselect', $.proxy(this.updateMonthYear, this))
            .on('change.daterangepicker', 'select.hourselect,select.minuteselect,select.ampmselect', $.proxy(this.updateTime, this));

        this.container.find('.ranges')
            .on('click.daterangepicker', 'button.applyBtn', $.proxy(this.clickApply, this))
            .on('click.daterangepicker', 'button.cancelBtn', $.proxy(this.clickCancel, this))
            .on('click.daterangepicker', '.daterangepicker_start_input,.daterangepicker_end_input', $.proxy(this.showCalendars, this))
            .on('change.daterangepicker', '.daterangepicker_start_input,.daterangepicker_end_input', $.proxy(this.inputsChanged, this))
            .on('keydown.daterangepicker', '.daterangepicker_start_input,.daterangepicker_end_input', $.proxy(this.inputsKeydown, this))
            .on('click.daterangepicker', 'li', $.proxy(this.clickRange, this))
            .on('mouseenter.daterangepicker', 'li', $.proxy(this.enterRange, this))
            .on('mouseleave.daterangepicker', 'li', $.proxy(this.updateFormInputs, this));

        if (this.element.is('input')) {
            this.element.on({
                'click.daterangepicker': $.proxy(this.show, this),
                'focus.daterangepicker': $.proxy(this.show, this),
                'keyup.daterangepicker': $.proxy(this.updateFromControl, this)
            });
        } else {
            this.element.on('click.daterangepicker', $.proxy(this.toggle, this));
        }

    };

    DateRangePicker.prototype = {

        constructor: DateRangePicker,

        setOptions: function(options, callback) {

            this.startDate = moment().startOf('day');
            this.endDate = moment().endOf('day');
            this.minDate = false;
            this.maxDate = false;
            this.dateLimit = false;

            this.showDropdowns = false;
            this.showWeekNumbers = false;
            this.timePicker = false;
            this.timePickerIncrement = 30;
            this.timePicker12Hour = true;
            this.singleDatePicker = false;
            this.ranges = {};

            this.opens = 'right';
            if (this.element.hasClass('pull-right'))
                this.opens = 'left';

            this.buttonClasses = ['btn', 'btn-small btn-sm'];
            this.applyClass = 'btn-success';
            this.cancelClass = 'btn-default';

            this.format = 'MM/DD/YYYY';
            this.separator = ' - ';

            this.locale = {
                applyLabel: 'Apply',
                cancelLabel: 'Cancel',
                fromLabel: 'From',
                toLabel: 'To',
                weekLabel: 'W',
                customRangeLabel: 'Custom Range',
                daysOfWeek: moment.weekdaysMin(),
                monthNames: moment.monthsShort(),
                firstDay: moment.localeData()._week.dow
            };

            this.cb = function () { };

            if (typeof options.format === 'string')
                this.format = options.format;

            if (typeof options.separator === 'string')
                this.separator = options.separator;

            if (typeof options.startDate === 'string')
                this.startDate = moment(options.startDate, this.format);

            if (typeof options.endDate === 'string')
                this.endDate = moment(options.endDate, this.format);

            if (typeof options.minDate === 'string')
                this.minDate = moment(options.minDate, this.format);

            if (typeof options.maxDate === 'string')
                this.maxDate = moment(options.maxDate, this.format);

            if (typeof options.startDate === 'object')
                this.startDate = moment(options.startDate);

            if (typeof options.endDate === 'object')
                this.endDate = moment(options.endDate);

            if (typeof options.minDate === 'object')
                this.minDate = moment(options.minDate);

            if (typeof options.maxDate === 'object')
                this.maxDate = moment(options.maxDate);

            if (typeof options.applyClass === 'string')
                this.applyClass = options.applyClass;

            if (typeof options.cancelClass === 'string')
                this.cancelClass = options.cancelClass;

            if (typeof options.dateLimit === 'object')
                this.dateLimit = options.dateLimit;

            if (typeof options.locale === 'object') {

                if (typeof options.locale.daysOfWeek === 'object') {
                    // Create a copy of daysOfWeek to avoid modification of original
                    // options object for reusability in multiple daterangepicker instances
                    this.locale.daysOfWeek = options.locale.daysOfWeek.slice();
                }

                if (typeof options.locale.monthNames === 'object') {
                  this.locale.monthNames = options.locale.monthNames.slice();
                }

                if (typeof options.locale.firstDay === 'number') {
                  this.locale.firstDay = options.locale.firstDay;
                }

                if (typeof options.locale.applyLabel === 'string') {
                  this.locale.applyLabel = options.locale.applyLabel;
                }

                if (typeof options.locale.cancelLabel === 'string') {
                  this.locale.cancelLabel = options.locale.cancelLabel;
                }

                if (typeof options.locale.fromLabel === 'string') {
                  this.locale.fromLabel = options.locale.fromLabel;
                }

                if (typeof options.locale.toLabel === 'string') {
                  this.locale.toLabel = options.locale.toLabel;
                }

                if (typeof options.locale.weekLabel === 'string') {
                  this.locale.weekLabel = options.locale.weekLabel;
                }

                if (typeof options.locale.customRangeLabel === 'string') {
                  this.locale.customRangeLabel = options.locale.customRangeLabel;
                }
            }

            if (typeof options.opens === 'string')
                this.opens = options.opens;

            if (typeof options.showWeekNumbers === 'boolean') {
                this.showWeekNumbers = options.showWeekNumbers;
            }

            if (typeof options.buttonClasses === 'string') {
                this.buttonClasses = [options.buttonClasses];
            }

            if (typeof options.buttonClasses === 'object') {
                this.buttonClasses = options.buttonClasses;
            }

            if (typeof options.showDropdowns === 'boolean') {
                this.showDropdowns = options.showDropdowns;
            }

            if (typeof options.singleDatePicker === 'boolean') {
                this.singleDatePicker = options.singleDatePicker;
                if (this.singleDatePicker) {
                    this.endDate = this.startDate.clone();
                }
            }

            if (typeof options.timePicker === 'boolean') {
                this.timePicker = options.timePicker;
            }

            if (typeof options.timePickerIncrement === 'number') {
                this.timePickerIncrement = options.timePickerIncrement;
            }

            if (typeof options.timePicker12Hour === 'boolean') {
                this.timePicker12Hour = options.timePicker12Hour;
            }

            // update day names order to firstDay
            if (this.locale.firstDay != 0) {
                var iterator = this.locale.firstDay;
                while (iterator > 0) {
                    this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());
                    iterator--;
                }
            }

            var start, end, range;

            //if no start/end dates set, check if an input element contains initial values
            if (typeof options.startDate === 'undefined' && typeof options.endDate === 'undefined') {
                if ($(this.element).is('input[type=text]')) {
                    var val = $(this.element).val();
                    var split = val.split(this.separator);
                    start = end = null;
                    if (split.length == 2) {
                        start = moment(split[0], this.format);
                        end = moment(split[1], this.format);
                    } else if (this.singleDatePicker) {
                        start = moment(val, this.format);
                        end = moment(val, this.format);
                    }
                    if (start !== null && end !== null) {
                        this.startDate = start;
                        this.endDate = end;
                    }
                }
            }

            if (typeof options.ranges === 'object') {
                for (range in options.ranges) {

                    start = moment(options.ranges[range][0]);
                    end = moment(options.ranges[range][1]);

                    // If we have a min/max date set, bound this range
                    // to it, but only if it would otherwise fall
                    // outside of the min/max.
                    if (this.minDate && start.isBefore(this.minDate))
                        start = moment(this.minDate);

                    if (this.maxDate && end.isAfter(this.maxDate))
                        end = moment(this.maxDate);

                    // If the end of the range is before the minimum (if min is set) OR
                    // the start of the range is after the max (also if set) don't display this
                    // range option.
                    if ((this.minDate && end.isBefore(this.minDate)) || (this.maxDate && start.isAfter(this.maxDate))) {
                        continue;
                    }

                    this.ranges[range] = [start, end];
                }

                var list = '<ul>';
                for (range in this.ranges) {
                    list += '<li>' + range + '</li>';
                }
                list += '<li>' + this.locale.customRangeLabel + '</li>';
                list += '</ul>';
                this.container.find('.ranges ul').remove();
                this.container.find('.ranges').prepend(list);
            }

            if (typeof callback === 'function') {
                this.cb = callback;
            }

            if (!this.timePicker) {
                this.startDate = this.startDate.startOf('day');
                this.endDate = this.endDate.endOf('day');
            }

            if (this.singleDatePicker) {
            	this.opens = 'right';
            	this.container.addClass('single');
                this.container.find('.calendar.right').show();
                this.container.find('.calendar.left').hide();
                if (!this.timePicker) {
	                this.container.find('.ranges').hide();
                } else {
                	this.container.find('.ranges .daterangepicker_start_input, .ranges .daterangepicker_end_input').hide();
                }
                if (!this.container.find('.calendar.right').hasClass('single'))
                    this.container.find('.calendar.right').addClass('single');
            } else {
            	this.container.removeClass('single');
            	this.container.find('.calendar.right').removeClass('single');
                this.container.find('.ranges').show();
            }

            this.oldStartDate = this.startDate.clone();
            this.oldEndDate = this.endDate.clone();
            this.oldChosenLabel = this.chosenLabel;

            this.leftCalendar = {
                month: moment([this.startDate.year(), this.startDate.month(), 1, this.startDate.hour(), this.startDate.minute()]),
                calendar: []
            };

            this.rightCalendar = {
                month: moment([this.endDate.year(), this.endDate.month(), 1, this.endDate.hour(), this.endDate.minute()]),
                calendar: []
            };

            if (this.opens == 'right') {
                //swap calendar positions
                var left = this.container.find('.calendar.left');
                var right = this.container.find('.calendar.right');

                if (right.hasClass('single')) {
                    right.removeClass('single');
                    left.addClass('single');
                }

                left.removeClass('left').addClass('right');
                right.removeClass('right').addClass('left');

                if (this.singleDatePicker) {
                    left.show();
                    right.hide();
                }
            }

            if (typeof options.ranges === 'undefined' && !this.singleDatePicker) {
                this.container.addClass('show-calendar');
            }

            this.container.addClass('opens' + this.opens);

            this.updateView();
            this.updateCalendars();

        },

        setStartDate: function(startDate) {
            if (typeof startDate === 'string')
                this.startDate = moment(startDate, this.format);

            if (typeof startDate === 'object')
                this.startDate = moment(startDate);

            if (!this.timePicker)
                this.startDate = this.startDate.startOf('day');

            this.oldStartDate = this.startDate.clone();

            this.updateView();
            this.updateCalendars();
            this.updateInputText();
        },

        setEndDate: function(endDate) {
            if (typeof endDate === 'string')
                this.endDate = moment(endDate, this.format);

            if (typeof endDate === 'object')
                this.endDate = moment(endDate);

            if (!this.timePicker)
                this.endDate = this.endDate.endOf('day');

            this.oldEndDate = this.endDate.clone();

            this.updateView();
            this.updateCalendars();
            this.updateInputText();
        },

        updateView: function () {
            this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year()).hour(this.startDate.hour()).minute(this.startDate.minute());
            this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year()).hour(this.endDate.hour()).minute(this.endDate.minute());
            this.updateFormInputs();
        },

        updateFormInputs: function () {
            this.container.find('input[name=daterangepicker_start]').val(this.startDate.format(this.format));
            this.container.find('input[name=daterangepicker_end]').val(this.endDate.format(this.format));

            if (this.startDate.isSame(this.endDate) || this.startDate.isBefore(this.endDate)) {
                this.container.find('button.applyBtn').removeAttr('disabled');
            } else {
                this.container.find('button.applyBtn').attr('disabled', 'disabled');
            }
        },

        updateFromControl: function () {
            if (!this.element.is('input')) return;
            if (!this.element.val().length) return;

            var dateString = this.element.val().split(this.separator),
                start = null,
                end = null;

            if(dateString.length === 2) {
                start = moment(dateString[0], this.format);
                end = moment(dateString[1], this.format);
            }

            if (this.singleDatePicker || start === null || end === null) {
                start = moment(this.element.val(), this.format);
                end = start;
            }

            if (end.isBefore(start)) return;

            this.oldStartDate = this.startDate.clone();
            this.oldEndDate = this.endDate.clone();

            this.startDate = start;
            this.endDate = end;

            if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))
                this.notify();

            this.updateCalendars();
        },

        notify: function () {
            this.updateView();
            this.cb(this.startDate, this.endDate, this.chosenLabel);
        },

        move: function () {
            var parentOffset = { top: 0, left: 0 };
            var parentRightEdge = $(window).width();
            if (!this.parentEl.is('body')) {
                parentOffset = {
                    top: this.parentEl.offset().top - this.parentEl.scrollTop(),
                    left: this.parentEl.offset().left - this.parentEl.scrollLeft()
                };
                parentRightEdge = this.parentEl[0].clientWidth + this.parentEl.offset().left;
            }

            if (this.opens == 'left') {
                this.container.css({
                    top: this.element.offset().top + this.element.outerHeight() - parentOffset.top,
                    right: parentRightEdge - this.element.offset().left - this.element.outerWidth(),
                    left: 'auto'
                });
                if (this.container.offset().left < 0) {
                    this.container.css({
                        right: 'auto',
                        left: 9
                    });
                }
            } else {
                this.container.css({
                    top: this.element.offset().top + this.element.outerHeight() - parentOffset.top,
                    left: this.element.offset().left - parentOffset.left,
                    right: 'auto'
                });
                if (this.container.offset().left + this.container.outerWidth() > $(window).width()) {
                    this.container.css({
                        left: 'auto',
                        right: 0
                    });
                }
            }
        },

        toggle: function (e) {
            if (this.element.hasClass('active')) {
                this.hide();
            } else {
                this.show();
            }
        },

        show: function (e) {
            if (this.isShowing) return;

            this.element.addClass('active');
            this.container.show();
            this.move();

            // Create a click proxy that is private to this instance of datepicker, for unbinding
            this._outsideClickProxy = $.proxy(function (e) { this.outsideClick(e); }, this);
            // Bind global datepicker mousedown for hiding and
            $(document)
              .on('mousedown.daterangepicker', this._outsideClickProxy)
              // also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them
              .on('click.daterangepicker', '[data-toggle=dropdown]', this._outsideClickProxy)
              // and also close when focus changes to outside the picker (eg. tabbing between controls)
              .on('focusin.daterangepicker', this._outsideClickProxy);

            this.isShowing = true;
            this.element.trigger('show.daterangepicker', this);
        },

        outsideClick: function (e) {
            var target = $(e.target);
            // if the page is clicked anywhere except within the daterangerpicker/button
            // itself then call this.hide()
            if (
                target.closest(this.element).length ||
                target.closest(this.container).length ||
                target.closest('.calendar-date').length
                ) return;
            this.hide();
        },

        hide: function (e) {
            if (!this.isShowing) return;

            $(document)
              .off('mousedown.daterangepicker')
              .off('click.daterangepicker', '[data-toggle=dropdown]')
              .off('focusin.daterangepicker');

            this.element.removeClass('active');
            this.container.hide();

            if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))
                this.notify();

            this.oldStartDate = this.startDate.clone();
            this.oldEndDate = this.endDate.clone();

            this.isShowing = false;
            this.element.trigger('hide.daterangepicker', this);
        },

        enterRange: function (e) {
            // mouse pointer has entered a range label
            var label = e.target.innerHTML;
            if (label == this.locale.customRangeLabel) {
                this.updateView();
            } else {
                var dates = this.ranges[label];
                this.container.find('input[name=daterangepicker_start]').val(dates[0].format(this.format));
                this.container.find('input[name=daterangepicker_end]').val(dates[1].format(this.format));
            }
        },

        showCalendars: function() {
            this.container.addClass('show-calendar');
            this.move();
            this.element.trigger('showCalendar.daterangepicker', this);
        },

        hideCalendars: function() {
            this.container.removeClass('show-calendar');
            this.element.trigger('hideCalendar.daterangepicker', this);
        },

        // when a date is typed into the start to end date textboxes
        inputsChanged: function (e) {
            var el = $(e.target);
            var date = moment(el.val(), this.format);
            if (!date.isValid()) return;

            var startDate, endDate;
            if (el.attr('name') === 'daterangepicker_start') {
                startDate = date;
                endDate = this.endDate;
            } else {
                startDate = this.startDate;
                endDate = date;
            }
            this.setCustomDates(startDate, endDate);
        },

        inputsKeydown: function(e) {
            if (e.keyCode === 13) {
                this.inputsChanged(e);
                this.notify();
            }
        },

        updateInputText: function() {
            if (this.element.is('input') && !this.singleDatePicker) {
                this.element.val(this.startDate.format(this.format) + this.separator + this.endDate.format(this.format));
            } else if (this.element.is('input')) {
            	this.element.val(this.endDate.format(this.format));
            }
        },

        clickRange: function (e) {
            var label = e.target.innerHTML;
            this.chosenLabel = label;
            if (label == this.locale.customRangeLabel) {
                this.showCalendars();
            } else {
                var dates = this.ranges[label];

                this.startDate = dates[0];
                this.endDate = dates[1];

                if (!this.timePicker) {
                    this.startDate.startOf('day');
                    this.endDate.endOf('day');
                }

                this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year()).hour(this.startDate.hour()).minute(this.startDate.minute());
                this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year()).hour(this.endDate.hour()).minute(this.endDate.minute());
                this.updateCalendars();

                this.updateInputText();

                this.hideCalendars();
                this.hide();
                this.element.trigger('apply.daterangepicker', this);
            }
        },

        clickPrev: function (e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.subtract(1, 'month');
            } else {
                this.rightCalendar.month.subtract(1, 'month');
            }
            this.updateCalendars();
        },

        clickNext: function (e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.add(1, 'month');
            } else {
                this.rightCalendar.month.add(1, 'month');
            }
            this.updateCalendars();
        },

        hoverDate: function (e) {
            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');

            if (cal.hasClass('left')) {
                this.container.find('input[name=daterangepicker_start]').val(this.leftCalendar.calendar[row][col].format(this.format));
            } else {
                this.container.find('input[name=daterangepicker_end]').val(this.rightCalendar.calendar[row][col].format(this.format));
            }
        },

        setCustomDates: function(startDate, endDate) {
            this.chosenLabel = this.locale.customRangeLabel;
            if (startDate.isAfter(endDate)) {
                var difference = this.endDate.diff(this.startDate);
                endDate = moment(startDate).add(difference, 'ms');
            }
            this.startDate = startDate;
            this.endDate = endDate;

            this.updateView();
            this.updateCalendars();
        },

        clickDate: function (e) {
            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');

            var startDate, endDate;
            if (cal.hasClass('left')) {
                startDate = this.leftCalendar.calendar[row][col];
                endDate = this.endDate;
                if (typeof this.dateLimit === 'object') {
                    var maxDate = moment(startDate).add(this.dateLimit).startOf('day');
                    if (endDate.isAfter(maxDate)) {
                        endDate = maxDate;
                    }
                }
            } else {
                startDate = this.startDate;
                endDate = this.rightCalendar.calendar[row][col];
                if (typeof this.dateLimit === 'object') {
                    var minDate = moment(endDate).subtract(this.dateLimit).startOf('day');
                    if (startDate.isBefore(minDate)) {
                        startDate = minDate;
                    }
                }
            }

            if (this.singleDatePicker && cal.hasClass('left')) {
                endDate = startDate.clone();
            } else if (this.singleDatePicker && cal.hasClass('right')) {
                startDate = endDate.clone();
            }

            cal.find('td').removeClass('active');

            $(e.target).addClass('active');

            this.setCustomDates(startDate, endDate);

            if (!this.timePicker)
                endDate.endOf('day');

            if (this.singleDatePicker && !this.timePicker)
                this.clickApply();
        },

        clickApply: function (e) {
            this.updateInputText();
            this.hide();
            this.element.trigger('apply.daterangepicker', this);
        },

        clickCancel: function (e) {
            this.startDate = this.oldStartDate;
            this.endDate = this.oldEndDate;
            this.chosenLabel = this.oldChosenLabel;
            this.updateView();
            this.updateCalendars();
            this.hide();
            this.element.trigger('cancel.daterangepicker', this);
        },

        updateMonthYear: function (e) {
            var isLeft = $(e.target).closest('.calendar').hasClass('left'),
                leftOrRight = isLeft ? 'left' : 'right',
                cal = this.container.find('.calendar.'+leftOrRight);

            // Month must be Number for new moment versions
            var month = parseInt(cal.find('.monthselect').val(), 10);
            var year = cal.find('.yearselect').val();

            this[leftOrRight+'Calendar'].month.month(month).year(year);
            this.updateCalendars();
        },

        updateTime: function(e) {

            var cal = $(e.target).closest('.calendar'),
                isLeft = cal.hasClass('left');

            var hour = parseInt(cal.find('.hourselect').val(), 10);
            var minute = parseInt(cal.find('.minuteselect').val(), 10);

            if (this.timePicker12Hour) {
                var ampm = cal.find('.ampmselect').val();
                if (ampm === 'PM' && hour < 12)
                    hour += 12;
                if (ampm === 'AM' && hour === 12)
                    hour = 0;
            }

            if (isLeft) {
                var start = this.startDate.clone();
                start.hour(hour);
                start.minute(minute);
                this.startDate = start;
                this.leftCalendar.month.hour(hour).minute(minute);
            } else {
                var end = this.endDate.clone();
                end.hour(hour);
                end.minute(minute);
                this.endDate = end;
                this.rightCalendar.month.hour(hour).minute(minute);
            }

            this.updateCalendars();
        },

        updateCalendars: function () {
            this.leftCalendar.calendar = this.buildCalendar(this.leftCalendar.month.month(), this.leftCalendar.month.year(), this.leftCalendar.month.hour(), this.leftCalendar.month.minute(), 'left');
            this.rightCalendar.calendar = this.buildCalendar(this.rightCalendar.month.month(), this.rightCalendar.month.year(), this.rightCalendar.month.hour(), this.rightCalendar.month.minute(), 'right');
            this.container.find('.calendar.left').empty().html(this.renderCalendar(this.leftCalendar.calendar, this.startDate, this.minDate, this.maxDate));
            this.container.find('.calendar.right').empty().html(this.renderCalendar(this.rightCalendar.calendar, this.endDate, this.singleDatePicker ? this.minDate : this.startDate, this.maxDate));
            
            this.container.find('.ranges li').removeClass('active');
            var customRange = true;
            var i = 0;
            for (var range in this.ranges) {
                if (this.timePicker) {
                    if (this.startDate.isSame(this.ranges[range][0]) && this.endDate.isSame(this.ranges[range][1])) {
                        customRange = false;
                        this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')')
                            .addClass('active').html();
                    }
                } else {
                    //ignore times when comparing dates if time picker is not enabled
                    if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {
                        customRange = false;
                        this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')')
                            .addClass('active').html();
                    }
                }
                i++;
            }
            if (customRange) {
                this.chosenLabel = this.container.find('.ranges li:last').addClass('active').html();
                this.showCalendars();
            }
        },

        buildCalendar: function (month, year, hour, minute, side) {
            var daysInMonth = moment([year, month]).daysInMonth();
            var firstDay = moment([year, month, 1]);
            var lastDay = moment([year, month, daysInMonth]);
            var lastMonth = moment(firstDay).subtract(1, 'month').month();
            var lastYear = moment(firstDay).subtract(1, 'month').year();

            var daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();

            var dayOfWeek = firstDay.day();

            var i;

            //initialize a 6 rows x 7 columns array for the calendar
            var calendar = [];
            calendar.firstDay = firstDay;
            calendar.lastDay = lastDay;

            for (i = 0; i < 6; i++) {
                calendar[i] = [];
            }

            //populate the calendar with date objects
            var startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;
            if (startDay > daysInLastMonth)
                startDay -= 7;

            if (dayOfWeek == this.locale.firstDay)
                startDay = daysInLastMonth - 6;

            var curDate = moment([lastYear, lastMonth, startDay, 12, minute]);
            var col, row;
            for (i = 0, col = 0, row = 0; i < 42; i++, col++, curDate = moment(curDate).add(24, 'hour')) {
                if (i > 0 && col % 7 === 0) {
                    col = 0;
                    row++;
                }
                calendar[row][col] = curDate.clone().hour(hour);
                curDate.hour(12);
            }

            return calendar;
        },

        renderDropdowns: function (selected, minDate, maxDate) {
            var currentMonth = selected.month();
            var monthHtml = '<select class="monthselect">';
            var inMinYear = false;
            var inMaxYear = false;

            for (var m = 0; m < 12; m++) {
                if ((!inMinYear || m >= minDate.month()) && (!inMaxYear || m <= maxDate.month())) {
                    monthHtml += "<option value='" + m + "'" +
                        (m === currentMonth ? " selected='selected'" : "") +
                        ">" + this.locale.monthNames[m] + "</option>";
                }
            }
            monthHtml += "</select>";

            var currentYear = selected.year();
            var maxYear = (maxDate && maxDate.year()) || (currentYear + 5);
            var minYear = (minDate && minDate.year()) || (currentYear - 50);
            var yearHtml = '<select class="yearselect">';

            for (var y = minYear; y <= maxYear; y++) {
                yearHtml += '<option value="' + y + '"' +
                    (y === currentYear ? ' selected="selected"' : '') +
                    '>' + y + '</option>';
            }

            yearHtml += '</select>';

            return monthHtml + yearHtml;
        },

        renderCalendar: function (calendar, selected, minDate, maxDate) {

            var html = '<div class="calendar-date">';
            html += '<table class="table-condensed">';
            html += '<thead>';
            html += '<tr>';

            // add empty cell for week number
            if (this.showWeekNumbers)
                html += '<th></th>';

            if (!minDate || minDate.isBefore(calendar.firstDay)) {
                html += '<th class="prev available">â</th>';
            } else {
                html += '<th></th>';
            }

            var dateHtml = this.locale.monthNames[calendar[1][1].month()] + calendar[1][1].format(" YYYY");

            if (this.showDropdowns) {
                dateHtml = this.renderDropdowns(calendar[1][1], minDate, maxDate);
            }

            html += '<th colspan="5" class="month">' + dateHtml + '</th>';
            if (!maxDate || maxDate.isAfter(calendar.lastDay)) {
                html += '<th class="next available">â</th>';
            } else {
                html += '<th></th>';
            }

            html += '</tr>';
            html += '<tr>';

            // add week number label
            if (this.showWeekNumbers)
                html += '<th class="week">' + this.locale.weekLabel + '</th>';

            $.each(this.locale.daysOfWeek, function (index, dayOfWeek) {
                html += '<th>' + dayOfWeek + '</th>';
            });

            html += '</tr>';
            html += '</thead>';
            html += '<tbody>';

            for (var row = 0; row < 6; row++) {
                html += '<tr>';

                // add week number
                if (this.showWeekNumbers)
                    html += '<td class="week">' + calendar[row][0].week() + '</td>';

                for (var col = 0; col < 7; col++) {
                    var cname = 'available ';
                    cname += (calendar[row][col].month() == calendar[1][1].month()) ? '' : 'off';

                    if ((minDate && calendar[row][col].isBefore(minDate, 'day')) || (maxDate && calendar[row][col].isAfter(maxDate, 'day'))) {
                        cname = ' off disabled ';
                    } else if (calendar[row][col].format('YYYY-MM-DD') == selected.format('YYYY-MM-DD')) {
                        cname += ' active ';
                        if (calendar[row][col].format('YYYY-MM-DD') == this.startDate.format('YYYY-MM-DD')) {
                            cname += ' start-date ';
                        }
                        if (calendar[row][col].format('YYYY-MM-DD') == this.endDate.format('YYYY-MM-DD')) {
                            cname += ' end-date ';
                        }
                    } else if (calendar[row][col] >= this.startDate && calendar[row][col] <= this.endDate) {
                        cname += ' in-range ';
                        if (calendar[row][col].isSame(this.startDate)) { cname += ' start-date '; }
                        if (calendar[row][col].isSame(this.endDate)) { cname += ' end-date '; }
                    }

                    var title = 'r' + row + 'c' + col;
                    html += '<td class="' + cname.replace(/\s+/g, ' ').replace(/^\s?(.*?)\s?$/, '$1') + '" data-title="' + title + '">' + calendar[row][col].date() + '</td>';
                }
                html += '</tr>';
            }

            html += '</tbody>';
            html += '</table>';
            html += '</div>';

            var i;
            if (this.timePicker) {

                html += '<div class="calendar-time">';
                html += '<select class="hourselect">';
                var start = 0;
                var end = 23;
                var selected_hour = selected.hour();
                if (this.timePicker12Hour) {
                    start = 1;
                    end = 12;
                    if (selected_hour >= 12)
                        selected_hour -= 12;
                    if (selected_hour === 0)
                        selected_hour = 12;
                }

                for (i = start; i <= end; i++) {
                    if (i == selected_hour) {
                        html += '<option value="' + i + '" selected="selected">' + i + '</option>';
                    } else {
                        html += '<option value="' + i + '">' + i + '</option>';
                    }
                }

                html += '</select> : ';

                html += '<select class="minuteselect">';

                for (i = 0; i < 60; i += this.timePickerIncrement) {
                    var num = i;
                    if (num < 10)
                        num = '0' + num;
                    if (i == selected.minute()) {
                        html += '<option value="' + i + '" selected="selected">' + num + '</option>';
                    } else {
                        html += '<option value="' + i + '">' + num + '</option>';
                    }
                }

                html += '</select> ';

                if (this.timePicker12Hour) {
                    html += '<select class="ampmselect">';
                    if (selected.hour() >= 12) {
                        html += '<option value="AM">AM</option><option value="PM" selected="selected">PM</option>';
                    } else {
                        html += '<option value="AM" selected="selected">AM</option><option value="PM">PM</option>';
                    }
                    html += '</select>';
                }

                html += '</div>';

            }

            return html;

        },

        remove: function() {

            this.container.remove();
            this.element.off('.daterangepicker');
            this.element.removeData('daterangepicker');

        }

    };

    $.fn.daterangepicker = function (options, cb) {
        this.each(function () {
            var el = $(this);
            if (el.data('daterangepicker'))
                el.data('daterangepicker').remove();
            el.data('daterangepicker', new DateRangePicker(el, options, cb));
        });
        return this;
    };

}));
;
/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.0
 *
 */
(function(f){jQuery.fn.extend({slimScroll:function(h){var a=f.extend({width:"auto",height:"250px",size:"7px",color:"#000",position:"right",distance:"1px",start:"top",opacity:0.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:"#333",railOpacity:0.2,railDraggable:!0,railClass:"slimScrollRail",barClass:"slimScrollBar",wrapperClass:"slimScrollDiv",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:"7px",railBorderRadius:"7px"},h);this.each(function(){function r(d){if(s){d=d||
window.event;var c=0;d.wheelDelta&&(c=-d.wheelDelta/120);d.detail&&(c=d.detail/3);f(d.target||d.srcTarget||d.srcElement).closest("."+a.wrapperClass).is(b.parent())&&m(c,!0);d.preventDefault&&!k&&d.preventDefault();k||(d.returnValue=!1)}}function m(d,f,h){k=!1;var e=d,g=b.outerHeight()-c.outerHeight();f&&(e=parseInt(c.css("top"))+d*parseInt(a.wheelStep)/100*c.outerHeight(),e=Math.min(Math.max(e,0),g),e=0<d?Math.ceil(e):Math.floor(e),c.css({top:e+"px"}));l=parseInt(c.css("top"))/(b.outerHeight()-c.outerHeight());
e=l*(b[0].scrollHeight-b.outerHeight());h&&(e=d,d=e/b[0].scrollHeight*b.outerHeight(),d=Math.min(Math.max(d,0),g),c.css({top:d+"px"}));b.scrollTop(e);b.trigger("slimscrolling",~~e);v();p()}function C(){window.addEventListener?(this.addEventListener("DOMMouseScroll",r,!1),this.addEventListener("mousewheel",r,!1),this.addEventListener("MozMousePixelScroll",r,!1)):document.attachEvent("onmousewheel",r)}function w(){u=Math.max(b.outerHeight()/b[0].scrollHeight*b.outerHeight(),D);c.css({height:u+"px"});
var a=u==b.outerHeight()?"none":"block";c.css({display:a})}function v(){w();clearTimeout(A);l==~~l?(k=a.allowPageScroll,B!=l&&b.trigger("slimscroll",0==~~l?"top":"bottom")):k=!1;B=l;u>=b.outerHeight()?k=!0:(c.stop(!0,!0).fadeIn("fast"),a.railVisible&&g.stop(!0,!0).fadeIn("fast"))}function p(){a.alwaysVisible||(A=setTimeout(function(){a.disableFadeOut&&s||(x||y)||(c.fadeOut("slow"),g.fadeOut("slow"))},1E3))}var s,x,y,A,z,u,l,B,D=30,k=!1,b=f(this);if(b.parent().hasClass(a.wrapperClass)){var n=b.scrollTop(),
c=b.parent().find("."+a.barClass),g=b.parent().find("."+a.railClass);w();if(f.isPlainObject(h)){if("height"in h&&"auto"==h.height){b.parent().css("height","auto");b.css("height","auto");var q=b.parent().parent().height();b.parent().css("height",q);b.css("height",q)}if("scrollTo"in h)n=parseInt(a.scrollTo);else if("scrollBy"in h)n+=parseInt(a.scrollBy);else if("destroy"in h){c.remove();g.remove();b.unwrap();return}m(n,!1,!0)}}else{a.height="auto"==a.height?b.parent().height():a.height;n=f("<div></div>").addClass(a.wrapperClass).css({position:"relative",
overflow:"hidden",width:a.width,height:a.height});b.css({overflow:"hidden",width:a.width,height:a.height});var g=f("<div></div>").addClass(a.railClass).css({width:a.size,height:"100%",position:"absolute",top:0,display:a.alwaysVisible&&a.railVisible?"block":"none","border-radius":a.railBorderRadius,background:a.railColor,opacity:a.railOpacity,zIndex:90}),c=f("<div></div>").addClass(a.barClass).css({background:a.color,width:a.size,position:"absolute",top:0,opacity:a.opacity,display:a.alwaysVisible?
"block":"none","border-radius":a.borderRadius,BorderRadius:a.borderRadius,MozBorderRadius:a.borderRadius,WebkitBorderRadius:a.borderRadius,zIndex:99}),q="right"==a.position?{right:a.distance}:{left:a.distance};g.css(q);c.css(q);b.wrap(n);b.parent().append(c);b.parent().append(g);a.railDraggable&&c.bind("mousedown",function(a){var b=f(document);y=!0;t=parseFloat(c.css("top"));pageY=a.pageY;b.bind("mousemove.slimscroll",function(a){currTop=t+a.pageY-pageY;c.css("top",currTop);m(0,c.position().top,!1)});
b.bind("mouseup.slimscroll",function(a){y=!1;p();b.unbind(".slimscroll")});return!1}).bind("selectstart.slimscroll",function(a){a.stopPropagation();a.preventDefault();return!1});g.hover(function(){v()},function(){p()});c.hover(function(){x=!0},function(){x=!1});b.hover(function(){s=!0;v();p()},function(){s=!1;p()});b.bind("touchstart",function(a,b){a.originalEvent.touches.length&&(z=a.originalEvent.touches[0].pageY)});b.bind("touchmove",function(b){k||b.originalEvent.preventDefault();b.originalEvent.touches.length&&
(m((z-b.originalEvent.touches[0].pageY)/a.touchScrollStep,!0),z=b.originalEvent.touches[0].pageY)});w();"bottom"===a.start?(c.css({top:b.outerHeight()-c.outerHeight()}),m(0,!0)):"top"!==a.start&&(m(f(a.start).position().top,null,!0),a.alwaysVisible||c.hide());C()}});return this}});jQuery.fn.extend({slimscroll:jQuery.fn.slimScroll})})(jQuery);;
/* Copyright (c) 2014 JoÃ£o Santos (http://webfueler.com)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.5
 *
 */
(function( $ ){

	"use strict";

	$.fn.quicktip = function(options) {
		
		var settings = {
			alignTo: 'auto'
		};

		if ( options ) {
			$.extend( settings, options );
		}
		
		return $(this).each(function(){

			var obj = $(this);
			
			obj.showtip = function(e){
				var align = "";

				if (obj.timeout) clearTimeout(obj.timeout);
				
				obj.timeout = setTimeout(function(){
					
					obj.qt = obj.data('quicktip-title')!=null ? $('<div class="quicktip">' + obj.data('quicktip-title') + '</div>').appendTo('body') : $('<div class="quicktip">' + obj.html() + '</div>').appendTo('body')

					var posY = obj.offset().top + obj.outerHeight() + 10;
					var posX = (obj.offset().left + (obj.outerWidth()/2)) - (obj.qt.outerWidth()/2); 
					
					if (settings.alignTo=='auto'){
						if (posX < 0){
							posX = obj.offset().left;
							align = "left";
						}
						
						if ( (posX + obj.qt.outerWidth()) > $(window).width()) {
							posX = obj.offset().left + obj.outerWidth() - obj.qt.outerWidth();
							align = "right"
						}
					}else{
						if (settings.alignTo=='left'){
							posX = obj.offset().left;
							align = "left";
						}
						if (settings.alignTo=='right'){
							posX = obj.offset().left + obj.outerWidth() - obj.qt.outerWidth();
							align = "right";
						}
					}
						
					obj.qt.css({
			            'top' : posY,
			            'left' : posX
					});
					obj.qt.addClass(align);
					
				}, 500);

			}
			
			obj.hidetip = function(e){
				if (obj.timeout) clearTimeout(obj.timeout);
				if (obj.qt)
					obj.qt.remove();
			}
			
		
			obj.init = function(obj){
				$.browser.mobile = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));			
				if (!$.browser.mobile){
					obj.on('mouseover',obj.showtip);
					obj.on('mouseleave',obj.hidetip);
				}
			}

			obj.init(obj);
			
		});
	};

})( jQuery );


(function($){
	$('[data-spy="quicktip"]').each(function () {
		var $obj = $(this);
		$obj.quicktip();
	});
})(jQuery);;
(function( $ ){

	"use strict";

	$.fn.sticky = function( options ) {
		var settings = {
			initWidth:1024,
			top: 0,
			bottom: 0
		};
		var STYLERESET = {
				  top: '',
				  bottom: '',
				  position: '',
				  width:''
		}
		
		if ( options ) {
			$.extend( settings, options );
		}

		return $(this).each(function(){
			var obj = $(this);
			obj.resizeTimeout;
			obj.stickstatus = 'none';
			obj.offsetTop = settings.top;
			obj.offsetBottom = settings.bottom;
			obj.ot = obj.offsetTop(obj);
			obj.ob = obj.offsetBottom(obj);
			
			obj.init = function(obj){
				$(window).on('scroll',obj,obj.checkpos);
				$(window).on('resize',obj.resized);
				/*
				$(window).on('resize',obj.resizestart);
				obj.on('resizeend',obj.resized);
				*/
				obj.on('update',obj.resized);
				obj.resized();
				obj.checkpos();
			}
			
			obj.resizestart = function(event){
				clearTimeout(obj.resizeTimeout);

				obj.css({'visibility':'hidden','width':''});

				obj.resizeTimeout = setTimeout(function(){
					obj.trigger('resizeend');
				},500);
			}
			
			obj.resized = function(event){
				obj.stickstatus = 'none';
				obj.removeClass('sticky sticky-bottom').css(STYLERESET).css('width','');

				obj.ot = obj.offsetTop(obj);
				obj.ob = obj.offsetBottom(obj);
				
				/*
				offsetTop = settings.top(obj);
				offsetBottom = settings.bottom(obj);
				*/
				/*this.$element.addClass('sticky');*/
				obj.css('visibility','');
				obj.checkpos();
				
				/*
				if (stickystatus=='top' || stickystatus=='bottom'){
					obj.removeClass('sticky');
					obj.css('width',obj.parent().width());
					obj.css('visibility','');

					if (typeof settings.top == 'function')
						offsetTop = settings.top(obj);
					if (typeof settings.bottom == 'function')
						offsetBottom = settings.bottom(obj)-obj.outerHeight(true);

					obj.addClass('sticky');
				}else{
					if (typeof settings.top == 'function')
						offsetTop = settings.top(obj);
					if (typeof settings.bottom == 'function')
						offsetBottom = settings.bottom(obj)-obj.outerHeight(true);
				}
				*/
			}
			
			
			obj.checkpos = function(event){
				if (event!=undefined) obj = event.data;
				var windowPos = $(window).scrollTop();
					
				if (obj.stickstatus=='none' || obj.stickstatus=='bottom'){
					if (windowPos>=obj.ot && windowPos<obj.ob){
						//stick
						var addon = 0;
						var objMarginLeft = parseInt(obj.css('margin-left'));
						var objMarginRight = parseInt(obj.css('margin-right'));
						
						if (objMarginLeft<0)
							addon+=objMarginLeft;

						if (objMarginRight<0)
							addon+=objMarginRight;
						

						obj.css(STYLERESET);
						obj.removeClass('sticky-bottom');
						
						obj.addClass('sticky').css({top:'0',position:'fixed',width:obj.parent().width()+Math.abs(addon)});
						obj.stickstatus = 'top';
					}
				}else{
					if (windowPos>obj.ob){
						//sticktobottom
						obj.css(STYLERESET);
						obj.css({position:'absolute', bottom: 0});
						obj.addClass('sticky-bottom');
						obj.stickstatus = 'bottom';
					}else
						if (windowPos<obj.ot){
							//unstick
							obj.removeClass('sticky sticky-bottom').css(STYLERESET);
							//obj.addClass('sticky-bottom');
							obj.stickstatus = 'none';
						}
				}
				/*console.log("top:" + obj.ot + "|bottom:" + obj.ob + "|classes:" + obj.attr('class'));*/
				
			  }
				
				/*
				if (sticky=='none' || sticky=='bottom'){
					if (windowPos>=offsetTop && windowPos<offsetBottom){
						obj.stick(obj);
					}
				}else{
					if (windowPos>offsetBottom){
						obj.stickbottom(obj);
					}else
						if (windowPos<offsetTop){
							obj.unstick(obj);
						}
				}
				
				if (sticky=='bottom'){
					obj.stickbottom(obj);
				}
			}
				*/

			
			/*
			
			obj.stick = function(obj){
				obj.addClass('sticky').css('top','');;
				obj.css('width',obj.parent().width());
				sticky = 'top';
			}
			obj.stickbottom = function(obj){
				var windowPos = $(window).scrollTop();
				obj.css('top',offsetBottom-windowPos);
				sticky = 'bottom';
			}
			obj.unstick = function(obj){
				obj.removeClass('sticky').css('top','');
				obj.removeAttr('style');
				sticky = 'none';
			}
			*/
			
			obj.init(obj);
		});
	};
})( jQuery );;
(function( $ ){

	"use strict";

	$.fn.passwordcheck = function( options ) {
		var settings = {
			container: null,
			blacklist: null,
			minPasswordLength: 6
		};
		
		if ( options ) {
			$.extend( settings, options );
		}
		
		var CSSRESET = 'default weak strong stronger strongest';

		return $(this).each(function(){
			var obj = $(this);
			var strPassword;
			var charPassword;
			var baseScore = 0, score = 0;
			var num = {};
			num.Excess = 0;
			num.Upper = 0;
			num.Numbers = 0;
			num.Symbols = 0;
			var bonus = {};
			bonus.Excess = 3;
			bonus.Upper = 4;
			bonus.Numbers = 5;
			bonus.Symbols = 5;
			bonus.Combo = 0;
			bonus.FlatLower = 0;
			bonus.FlatNumber = 0;
			
			obj.init = function(obj){
				if (settings.container==null) {
					settings.container = obj.parent().next().find('.label');
				}
				
				obj.on("keyup", obj.checkVal);
			}
			
			obj.checkVal = function(){
				strPassword = obj.val();
				charPassword = strPassword.split("");
			    
				num.Excess = 0;
			    num.Upper = 0;
			    num.Numbers = 0;
			    num.Symbols = 0;
			    bonus.Combo = 0;
			    bonus.FlatLower = 0;
			    bonus.FlatNumber = 0;
			    baseScore = 0;
			    score = 0;
			    
			    if (charPassword.length >= settings.minPasswordLength){
			        baseScore = 50;
			        obj.analyzeString();   
			        obj.calcComplexity();      
			    }else{
			        baseScore = 0;
			    }
			    obj.outputResult();				
			}
			
			obj.calcComplexity = function(){
			    score = baseScore + (num.Excess*bonus.Excess) + (num.Upper*bonus.Upper) + 
			    (num.Numbers*bonus.Numbers) + (num.Symbols*bonus.Symbols) + bonus.Combo + 
			    bonus.FlatLower + bonus.FlatNumber;
			}
			
			obj.analyzeString = function (){  
			    for (var i=0; i<charPassword.length;i++){
			        if (charPassword[i].match(/[A-Z]/g)) {num.Upper++;}
			        if (charPassword[i].match(/[0-9]/g)) {num.Numbers++;}
			        if (charPassword[i].match(/(.*[!,@,#,$,%,^,&,*,?,_,~])/)) {num.Symbols++;}
			    }
			     
			    num.Excess = charPassword.length - settings.minPasswordLength;
			     
			    if (num.Upper && num.Numbers && num.Symbols){
			        bonus.Combo = 25;
			    }else if ((num.Upper && num.Numbers) || (num.Upper && num.Symbols) || (num.Numbers && num.Symbols)){
			        bonus.Combo = 15;
			    }
			    if (strPassword.match(/^[\sa-z]+$/)){
			        bonus.FlatLower = -15;
			    }
			    if (strPassword.match(/^[\s0-9]+$/)){
			        bonus.FlatNumber = -35;
			    }
			}

			obj.outputResult = function(){
			    if (obj.val()== ""){
			        settings.container.html('').removeClass(CSSRESET).addClass("default");
			    }else if (charPassword.length < settings.minPasswordLength){
			    	//settings.container.html("At least " + settings.minPasswordLength+ " characters please").removeClass(CSSRESET).addClass("default");
			    	settings.container.html("Weak").removeClass(CSSRESET).addClass("weak");
			    }else if (score<50){
			    	settings.container.html("Weak").removeClass(CSSRESET).addClass("weak");
			    }else if (score>=50 && score<75){
			    	settings.container.html("Average").removeClass(CSSRESET).addClass("strong");
			    }else if (score>=75 && score<100){
			    	settings.container.html("Strong").removeClass(CSSRESET).addClass("stronger");
			    }else if (score>=100){
			    	settings.container.html("Super strong").removeClass(CSSRESET).addClass("strongest");
			    }
			}
			
			obj.init(obj);
		});
	};
})( jQuery );;
(function(c){c.address=function(){var r=function(a){a=c.extend(c.Event(a),function(){for(var b={},f=c.address.parameterNames(),m=0,p=f.length;m<p;m++)b[f[m]]=c.address.parameter(f[m]);return{value:c.address.value(),path:c.address.path(),pathNames:c.address.pathNames(),parameterNames:f,parameters:b,queryString:c.address.queryString()}}.call(c.address));c(c.address).trigger(a);return a},s=function(a){return Array.prototype.slice.call(a)},h=function(){c().bind.apply(c(c.address),Array.prototype.slice.call(arguments));
return c.address},ea=function(){c().unbind.apply(c(c.address),Array.prototype.slice.call(arguments));return c.address},E=function(){return z.pushState&&d.state!==g},U=function(){return("/"+i.pathname.replace(new RegExp(d.state),"")+i.search+(L()?"#"+L():"")).replace(T,"/")},L=function(){var a=i.href.indexOf("#");return a!=-1?t(i.href.substr(a+1),k):""},u=function(){return E()?U():L()},V=function(){return"javascript"},O=function(a){a=a.toString();return(d.strict&&a.substr(0,1)!="/"?"/":"")+a},t=function(a,
b){if(d.crawlable&&b)return(a!==""?"!":"")+a;return a.replace(/^\!/,"")},v=function(a,b){return parseInt(a.css(b),10)},H=function(){if(!x){var a=u();if(decodeURI(e)!=decodeURI(a))if(w&&A<7)i.reload();else{w&&!F&&d.history&&q(M,50);_old=e;e=a;G(k)}}},G=function(a){var b=r(W);a=r(a?X:Y);q(fa,10);if(b.isDefaultPrevented()||a.isDefaultPrevented())ga()},ga=function(){e=_old;if(E())z.popState({},"",d.state.replace(/\/$/,"")+(e===""?"/":e));else{x=n;if(B)if(d.history)i.hash="#"+t(e,n);else i.replace("#"+
t(e,n));else if(e!=u())if(d.history)i.hash="#"+t(e,n);else i.replace("#"+t(e,n));w&&!F&&d.history&&q(M,50);if(B)q(function(){x=k},1);else x=k}},fa=function(){if(d.tracker!=="null"&&d.tracker!==I){var a=c.isFunction(d.tracker)?d.tracker:j[d.tracker],b=(i.pathname+i.search+(c.address&&!E()?c.address.value():"")).replace(/\/\//,"/").replace(/^\/$/,"");if(c.isFunction(a))a(b);else if(c.isFunction(j.urchinTracker))j.urchinTracker(b);else if(j.pageTracker!==g&&c.isFunction(j.pageTracker._trackPageview))j.pageTracker._trackPageview(b);
else j._gaq!==g&&c.isFunction(j._gaq.push)&&j._gaq.push(["_trackPageview",decodeURI(b)])}},M=function(){var a=V()+":"+k+";document.open();document.writeln('<html><head><title>"+o.title.replace(/\'/g,"\\'")+"</title><script>var "+C+' = "'+encodeURIComponent(u()).replace(/\'/g,"\\'")+(o.domain!=i.hostname?'";document.domain="'+o.domain:"")+"\";<\/script></head></html>');document.close();";if(A<7)l.src=a;else l.contentWindow.location.replace(a)},$=function(){if(J&&Z!=-1){var a,b,f=J.substr(Z+1).split("&");
for(a=0;a<f.length;a++){b=f[a].split("=");if(/^(autoUpdate|crawlable|history|strict|wrap)$/.test(b[0]))d[b[0]]=isNaN(b[1])?/^(true|yes)$/i.test(b[1]):parseInt(b[1],10)!==0;if(/^(state|tracker)$/.test(b[0]))d[b[0]]=b[1]}J=I}_old=e;e=u()},ba=function(){if(!aa){aa=n;$();var a=function(){ha.call(this);ia.call(this)},b=c("body").ajaxComplete(a);a();if(d.wrap){c("body > *").wrapAll('<div style="padding:'+(v(b,"marginTop")+v(b,"paddingTop"))+"px "+(v(b,"marginRight")+v(b,"paddingRight"))+"px "+(v(b,"marginBottom")+
v(b,"paddingBottom"))+"px "+(v(b,"marginLeft")+v(b,"paddingLeft"))+'px;" />').parent().wrap('<div id="'+C+'" style="height:100%;overflow:auto;position:relative;'+(B&&!window.statusbar.visible?"resize:both;":"")+'" />');c("html, body").css({height:"100%",margin:0,padding:0,overflow:"hidden"});B&&c('<style type="text/css" />').appendTo("head").text("#"+C+"::-webkit-resizer { background-color: #fff; }")}if(w&&!F){a=o.getElementsByTagName("frameset")[0];l=o.createElement((a?"":"i")+"frame");l.src=V()+
":"+k;if(a){a.insertAdjacentElement("beforeEnd",l);a[a.cols?"cols":"rows"]+=",0";l.noResize=n;l.frameBorder=l.frameSpacing=0}else{l.style.display="none";l.style.width=l.style.height=0;l.tabIndex=-1;o.body.insertAdjacentElement("afterBegin",l)}q(function(){c(l).bind("load",function(){var f=l.contentWindow;_old=e;e=f[C]!==g?f[C]:"";if(e!=u()){G(k);i.hash=t(e,n)}});l.contentWindow[C]===g&&M()},50)}q(function(){r("init");G(k)},1);if(!E())if(w&&A>7||!w&&F)if(j.addEventListener)j.addEventListener(K,H,k);
else j.attachEvent&&j.attachEvent("on"+K,H);else ja(H,50);"state"in window.history&&c(window).trigger("popstate")}},ha=function(){var a,b=c("a"),f=b.size(),m=-1,p=function(){if(++m!=f){a=c(b.get(m));a.is('[rel*="address:"]')&&a.address('[rel*="address:"]');q(p,1)}};q(p,1)},ia=function(){if(d.crawlable){var a=i.pathname.replace(/\/$/,"");c("body").html().indexOf("_escaped_fragment_")!=-1&&c('a[href]:not([href^=http]), a[href*="'+document.domain+'"]').each(function(){var b=c(this).attr("href").replace(/^http:/,
"").replace(new RegExp(a+"/?$"),"");if(b===""||b.indexOf("_escaped_fragment_")!=-1)c(this).attr("href","#"+encodeURI(decodeURIComponent(b.replace(/\/(.*)\?_escaped_fragment_=(.*)$/,"!$2"))))})}},g,I=null,C="jQueryAddress",K="hashchange",W="change",X="internalChange",Y="externalChange",n=true,k=false,d={autoUpdate:n,crawlable:k,history:n,strict:n,wrap:k},D=c.browser,A=parseFloat(D.version),w=!c.support.opacity,B=D.webkit||D.safari,j=function(){try{return top.document!==g&&top.document.title!==g?top:
window}catch(a){return window}}(),o=j.document,z=j.history,i=j.location,ja=setInterval,q=setTimeout,T=/\/{2,9}/g;D=navigator.userAgent;var F="on"+K in j,l,J=c("script:last").attr("src"),Z=J?J.indexOf("?"):-1,P=o.title,x=k,aa=k,ca=n,N=k,e=u();_old=e;if(w){A=parseFloat(D.substr(D.indexOf("MSIE")+4));if(o.documentMode&&o.documentMode!=A)A=o.documentMode!=8?7:8;var da=o.onpropertychange;o.onpropertychange=function(){da&&da.call(o);if(o.title!=P&&o.title.indexOf("#"+u())!=-1)o.title=P}}if(z.navigationMode)z.navigationMode=
"compatible";if(document.readyState=="complete")var ka=setInterval(function(){if(c.address){ba();clearInterval(ka)}},50);else{$();c(ba)}c(window).bind("popstate",function(){if(decodeURI(e)!=decodeURI(u())){_old=e;e=u();G(k)}}).bind("unload",function(){if(j.removeEventListener)j.removeEventListener(K,H,k);else j.detachEvent&&j.detachEvent("on"+K,H)});return{bind:function(){return h.apply(this,s(arguments))},unbind:function(){return ea.apply(this,s(arguments))},init:function(){return h.apply(this,["init"].concat(s(arguments)))},
change:function(){return h.apply(this,[W].concat(s(arguments)))},internalChange:function(){return h.apply(this,[X].concat(s(arguments)))},externalChange:function(){return h.apply(this,[Y].concat(s(arguments)))},baseURL:function(){var a=i.href;if(a.indexOf("#")!=-1)a=a.substr(0,a.indexOf("#"));if(/\/$/.test(a))a=a.substr(0,a.length-1);return a},autoUpdate:function(a){if(a!==g){d.autoUpdate=a;return this}return d.autoUpdate},crawlable:function(a){if(a!==g){d.crawlable=a;return this}return d.crawlable},
history:function(a){if(a!==g){d.history=a;return this}return d.history},state:function(a){if(a!==g){d.state=a;var b=U();if(d.state!==g)if(z.pushState)b.substr(0,3)=="/#/"&&i.replace(d.state.replace(/^\/$/,"")+b.substr(2));else b!="/"&&b.replace(/^\/#/,"")!=L()&&q(function(){i.replace(d.state.replace(/^\/$/,"")+"/#"+b)},1);return this}return d.state},strict:function(a){if(a!==g){d.strict=a;return this}return d.strict},tracker:function(a){if(a!==g){d.tracker=a;return this}return d.tracker},wrap:function(a){if(a!==
g){d.wrap=a;return this}return d.wrap},update:function(){N=n;this.value(e);N=k;return this},title:function(a){if(a!==g){q(function(){P=o.title=a;if(ca&&l&&l.contentWindow&&l.contentWindow.document){l.contentWindow.document.title=a;ca=k}},50);return this}return o.title},value:function(a){if(a!==g){a=O(a);if(a=="/")a="";if(e==a&&!N)return;_old=e;e=a;if(d.autoUpdate||N){G(n);if(E())z[d.history?"pushState":"replaceState"]({},"",d.state.replace(/\/$/,"")+(e===""?"/":e));else{x=n;if(B)if(d.history)i.hash=
"#"+t(e,n);else i.replace("#"+t(e,n));else if(e!=u())if(d.history)i.hash="#"+t(e,n);else i.replace("#"+t(e,n));w&&!F&&d.history&&q(M,50);if(B)q(function(){x=k},1);else x=k}}return this}return O(e)},path:function(a){if(a!==g){var b=this.queryString(),f=this.hash();this.value(a+(b?"?"+b:"")+(f?"#"+f:""));return this}return O(e).split("#")[0].split("?")[0]},pathNames:function(){var a=this.path(),b=a.replace(T,"/").split("/");if(a.substr(0,1)=="/"||a.length===0)b.splice(0,1);a.substr(a.length-1,1)=="/"&&
b.splice(b.length-1,1);return b},queryString:function(a){if(a!==g){var b=this.hash();this.value(this.path()+(a?"?"+a:"")+(b?"#"+b:""));return this}a=e.split("?");return a.slice(1,a.length).join("?").split("#")[0]},parameter:function(a,b,f){var m,p;if(b!==g){var Q=this.parameterNames();p=[];b=b===g||b===I?"":b.toString();for(m=0;m<Q.length;m++){var R=Q[m],y=this.parameter(R);if(typeof y=="string")y=[y];if(R==a)y=b===I||b===""?[]:f?y.concat([b]):[b];for(var S=0;S<y.length;S++)p.push(R+"="+y[S])}c.inArray(a,
Q)==-1&&b!==I&&b!==""&&p.push(a+"="+b);this.queryString(p.join("&"));return this}if(b=this.queryString()){f=[];p=b.split("&");for(m=0;m<p.length;m++){b=p[m].split("=");b[0]==a&&f.push(b.slice(1).join("="))}if(f.length!==0)return f.length!=1?f:f[0]}},parameterNames:function(){var a=this.queryString(),b=[];if(a&&a.indexOf("=")!=-1){a=a.split("&");for(var f=0;f<a.length;f++){var m=a[f].split("=")[0];c.inArray(m,b)==-1&&b.push(m)}}return b},hash:function(a){if(a!==g){this.value(e.split("#")[0]+(a?"#"+
a:""));return this}a=e.split("#");return a.slice(1,a.length).join("#")}}}();c.fn.address=function(r){var s;if(typeof r=="string"){s=r;r=undefined}c(this).attr("address")||c(s?s:this).live("click",function(h){if(h.shiftKey||h.ctrlKey||h.metaKey||h.which==2)return true;if(c(this).is("a")){h.preventDefault();h=r?r.call(this):/address:/.test(c(this).attr("rel"))?c(this).attr("rel").split("address:")[1].split(" ")[0]:c.address.state()!==undefined&&!/^\/?$/.test(c.address.state())?c(this).attr("href").replace(new RegExp("^(.*"+
c.address.state()+"|\\.)"),""):c(this).attr("href").replace(/^(#\!?|\.)/,"");c.address.value(h)}}).live("submit",function(h){if(c(this).is("form")){h.preventDefault();h=c(this).attr("action");h=r?r.call(this):(h.indexOf("?")!=-1?h.replace(/&$/,""):h+"?")+c(this).serialize();c.address.value(h)}}).attr("address",true);return this}})(jQuery);
;
(function( $ ){

	"use strict";

	$.fn.defaultMethod = function(options) {
		
		var settings = {

		};

		if ( options ) {
			$.extend( settings, options );
		}
		
		
		return $(this).each(function(){
			var selects;
			var masterselect;
			var obj = $(this);
			
			obj.update = function(e){
				
				if (obj.is(':checked')){
					selects.each(function(e){
						$(this).select2("val",masterselect.val());
						$(this).trigger('visibility.change');
						$(this).select2("enable", false);
						/*
						$(this).attr('disabled','disabled');
						$(this).coreUISelect('destroy');
						$(this).coreUISelect();
						*/		
					})
				}else{
					selects.each(function(e){
						$(this).select2("enable", true);
						/*
						$(this).removeAttr('disabled');
						$(this).coreUISelect('destroy');
						$(this).coreUISelect();
						*/						
					})
				}
			}
			
			obj.updateonclick = function(e){
				e.preventDefault();
			}
		
			obj.init = function(obj){
				masterselect = obj.parent().parent().parent().siblings().find('select.default-select');
				selects = obj.parent().parent().parent().siblings().find('select.listen-default');

				masterselect.on('change',obj.update);
				obj.on('click',obj.update);
				obj.update();
			}

			obj.init(obj);
			
		});
	};

})( jQuery );

$(document).ready(function () {
	
    $('[data-nccontrol="default-dcvmethod"]').each(function () {
    	$(this).defaultMethod();
    })
});


;
/*
Copyright 2014 Igor Vaynberg

Version: 3.5.1 Timestamp: Tue Jul 22 18:58:56 EDT 2014

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

http://www.apache.org/licenses/LICENSE-2.0
http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the Apache License
or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the Apache License and the GPL License for the specific language governing
permissions and limitations under the Apache License and the GPL License.
*/
!function(a){"undefined"==typeof a.fn.each2&&a.extend(a.fn,{each2:function(b){for(var c=a([0]),d=-1,e=this.length;++d<e&&(c.context=c[0]=this[d])&&b.call(c[0],d,c)!==!1;);return this}})}(jQuery),function(a,b){"use strict";function n(b){var c=a(document.createTextNode(""));b.before(c),c.before(b),c.remove()}function o(a){function b(a){return m[a]||a}return a.replace(/[^\u0000-\u007E]/g,b)}function p(a,b){for(var c=0,d=b.length;d>c;c+=1)if(r(a,b[c]))return c;return-1}function q(){var b=a(l);b.appendTo("body");var c={width:b.width()-b[0].clientWidth,height:b.height()-b[0].clientHeight};return b.remove(),c}function r(a,c){return a===c?!0:a===b||c===b?!1:null===a||null===c?!1:a.constructor===String?a+""==c+"":c.constructor===String?c+""==a+"":!1}function s(b,c){var d,e,f;if(null===b||b.length<1)return[];for(d=b.split(c),e=0,f=d.length;f>e;e+=1)d[e]=a.trim(d[e]);return d}function t(a){return a.outerWidth(!1)-a.width()}function u(c){var d="keyup-change-value";c.on("keydown",function(){a.data(c,d)===b&&a.data(c,d,c.val())}),c.on("keyup",function(){var e=a.data(c,d);e!==b&&c.val()!==e&&(a.removeData(c,d),c.trigger("keyup-change"))})}function v(c){c.on("mousemove",function(c){var d=i;(d===b||d.x!==c.pageX||d.y!==c.pageY)&&a(c.target).trigger("mousemove-filtered",c)})}function w(a,c,d){d=d||b;var e;return function(){var b=arguments;window.clearTimeout(e),e=window.setTimeout(function(){c.apply(d,b)},a)}}function x(a,b){var c=w(a,function(a){b.trigger("scroll-debounced",a)});b.on("scroll",function(a){p(a.target,b.get())>=0&&c(a)})}function y(a){a[0]!==document.activeElement&&window.setTimeout(function(){var d,b=a[0],c=a.val().length;a.focus();var e=b.offsetWidth>0||b.offsetHeight>0;e&&b===document.activeElement&&(b.setSelectionRange?b.setSelectionRange(c,c):b.createTextRange&&(d=b.createTextRange(),d.collapse(!1),d.select()))},0)}function z(b){b=a(b)[0];var c=0,d=0;if("selectionStart"in b)c=b.selectionStart,d=b.selectionEnd-c;else if("selection"in document){b.focus();var e=document.selection.createRange();d=document.selection.createRange().text.length,e.moveStart("character",-b.value.length),c=e.text.length-d}return{offset:c,length:d}}function A(a){a.preventDefault(),a.stopPropagation()}function B(a){a.preventDefault(),a.stopImmediatePropagation()}function C(b){if(!h){var c=b[0].currentStyle||window.getComputedStyle(b[0],null);h=a(document.createElement("div")).css({position:"absolute",left:"-10000px",top:"-10000px",display:"none",fontSize:c.fontSize,fontFamily:c.fontFamily,fontStyle:c.fontStyle,fontWeight:c.fontWeight,letterSpacing:c.letterSpacing,textTransform:c.textTransform,whiteSpace:"nowrap"}),h.attr("class","select2-sizer"),a("body").append(h)}return h.text(b.val()),h.width()}function D(b,c,d){var e,g,f=[];e=a.trim(b.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each2(function(){0===this.indexOf("select2-")&&f.push(this)})),e=a.trim(c.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each2(function(){0!==this.indexOf("select2-")&&(g=d(this),g&&f.push(g))})),b.attr("class",f.join(" "))}function E(a,b,c,d){var e=o(a.toUpperCase()).indexOf(o(b.toUpperCase())),f=b.length;return 0>e?(c.push(d(a)),void 0):(c.push(d(a.substring(0,e))),c.push("<span class='select2-match'>"),c.push(d(a.substring(e,e+f))),c.push("</span>"),c.push(d(a.substring(e+f,a.length))),void 0)}function F(a){var b={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return String(a).replace(/[&<>"'\/\\]/g,function(a){return b[a]})}function G(c){var d,e=null,f=c.quietMillis||100,g=c.url,h=this;return function(i){window.clearTimeout(d),d=window.setTimeout(function(){var d=c.data,f=g,j=c.transport||a.fn.select2.ajaxDefaults.transport,k={type:c.type||"GET",cache:c.cache||!1,jsonpCallback:c.jsonpCallback||b,dataType:c.dataType||"json"},l=a.extend({},a.fn.select2.ajaxDefaults.params,k);d=d?d.call(h,i.term,i.page,i.context):null,f="function"==typeof f?f.call(h,i.term,i.page,i.context):f,e&&"function"==typeof e.abort&&e.abort(),c.params&&(a.isFunction(c.params)?a.extend(l,c.params.call(h)):a.extend(l,c.params)),a.extend(l,{url:f,dataType:c.dataType,data:d,success:function(a){var b=c.results(a,i.page,i);i.callback(b)},error:function(a,b,c){var d={hasError:!0,jqXHR:a,textStatus:b,errorThrown:c};i.callback(d)}}),e=j.call(h,l)},f)}}function H(b){var d,e,c=b,f=function(a){return""+a.text};a.isArray(c)&&(e=c,c={results:e}),a.isFunction(c)===!1&&(e=c,c=function(){return e});var g=c();return g.text&&(f=g.text,a.isFunction(f)||(d=g.text,f=function(a){return a[d]})),function(b){var g,d=b.term,e={results:[]};return""===d?(b.callback(c()),void 0):(g=function(c,e){var h,i;if(c=c[0],c.children){h={};for(i in c)c.hasOwnProperty(i)&&(h[i]=c[i]);h.children=[],a(c.children).each2(function(a,b){g(b,h.children)}),(h.children.length||b.matcher(d,f(h),c))&&e.push(h)}else b.matcher(d,f(c),c)&&e.push(c)},a(c().results).each2(function(a,b){g(b,e.results)}),b.callback(e),void 0)}}function I(c){var d=a.isFunction(c);return function(e){var f=e.term,g={results:[]},h=d?c(e):c;a.isArray(h)&&(a(h).each(function(){var a=this.text!==b,c=a?this.text:this;(""===f||e.matcher(f,c))&&g.results.push(a?this:{id:this,text:this})}),e.callback(g))}}function J(b,c){if(a.isFunction(b))return!0;if(!b)return!1;if("string"==typeof b)return!0;throw new Error(c+" must be a string, function, or falsy value")}function K(b,c){if(a.isFunction(b)){var d=Array.prototype.slice.call(arguments,2);return b.apply(c,d)}return b}function L(b){var c=0;return a.each(b,function(a,b){b.children?c+=L(b.children):c++}),c}function M(a,c,d,e){var h,i,j,k,l,f=a,g=!1;if(!e.createSearchChoice||!e.tokenSeparators||e.tokenSeparators.length<1)return b;for(;;){for(i=-1,j=0,k=e.tokenSeparators.length;k>j&&(l=e.tokenSeparators[j],i=a.indexOf(l),!(i>=0));j++);if(0>i)break;if(h=a.substring(0,i),a=a.substring(i+l.length),h.length>0&&(h=e.createSearchChoice.call(this,h,c),h!==b&&null!==h&&e.id(h)!==b&&null!==e.id(h))){for(g=!1,j=0,k=c.length;k>j;j++)if(r(e.id(h),e.id(c[j]))){g=!0;break}g||d(h)}}return f!==a?a:void 0}function N(){var b=this;a.each(arguments,function(a,c){b[c].remove(),b[c]=null})}function O(b,c){var d=function(){};return d.prototype=new b,d.prototype.constructor=d,d.prototype.parent=b.prototype,d.prototype=a.extend(d.prototype,c),d}if(window.Select2===b){var c,d,e,f,g,h,j,k,i={x:0,y:0},c={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,isArrow:function(a){switch(a=a.which?a.which:a){case c.LEFT:case c.RIGHT:case c.UP:case c.DOWN:return!0}return!1},isControl:function(a){var b=a.which;switch(b){case c.SHIFT:case c.CTRL:case c.ALT:return!0}return a.metaKey?!0:!1},isFunctionKey:function(a){return a=a.which?a.which:a,a>=112&&123>=a}},l="<div class='select2-measure-scrollbar'></div>",m={"\u24b6":"A","\uff21":"A","\xc0":"A","\xc1":"A","\xc2":"A","\u1ea6":"A","\u1ea4":"A","\u1eaa":"A","\u1ea8":"A","\xc3":"A","\u0100":"A","\u0102":"A","\u1eb0":"A","\u1eae":"A","\u1eb4":"A","\u1eb2":"A","\u0226":"A","\u01e0":"A","\xc4":"A","\u01de":"A","\u1ea2":"A","\xc5":"A","\u01fa":"A","\u01cd":"A","\u0200":"A","\u0202":"A","\u1ea0":"A","\u1eac":"A","\u1eb6":"A","\u1e00":"A","\u0104":"A","\u023a":"A","\u2c6f":"A","\ua732":"AA","\xc6":"AE","\u01fc":"AE","\u01e2":"AE","\ua734":"AO","\ua736":"AU","\ua738":"AV","\ua73a":"AV","\ua73c":"AY","\u24b7":"B","\uff22":"B","\u1e02":"B","\u1e04":"B","\u1e06":"B","\u0243":"B","\u0182":"B","\u0181":"B","\u24b8":"C","\uff23":"C","\u0106":"C","\u0108":"C","\u010a":"C","\u010c":"C","\xc7":"C","\u1e08":"C","\u0187":"C","\u023b":"C","\ua73e":"C","\u24b9":"D","\uff24":"D","\u1e0a":"D","\u010e":"D","\u1e0c":"D","\u1e10":"D","\u1e12":"D","\u1e0e":"D","\u0110":"D","\u018b":"D","\u018a":"D","\u0189":"D","\ua779":"D","\u01f1":"DZ","\u01c4":"DZ","\u01f2":"Dz","\u01c5":"Dz","\u24ba":"E","\uff25":"E","\xc8":"E","\xc9":"E","\xca":"E","\u1ec0":"E","\u1ebe":"E","\u1ec4":"E","\u1ec2":"E","\u1ebc":"E","\u0112":"E","\u1e14":"E","\u1e16":"E","\u0114":"E","\u0116":"E","\xcb":"E","\u1eba":"E","\u011a":"E","\u0204":"E","\u0206":"E","\u1eb8":"E","\u1ec6":"E","\u0228":"E","\u1e1c":"E","\u0118":"E","\u1e18":"E","\u1e1a":"E","\u0190":"E","\u018e":"E","\u24bb":"F","\uff26":"F","\u1e1e":"F","\u0191":"F","\ua77b":"F","\u24bc":"G","\uff27":"G","\u01f4":"G","\u011c":"G","\u1e20":"G","\u011e":"G","\u0120":"G","\u01e6":"G","\u0122":"G","\u01e4":"G","\u0193":"G","\ua7a0":"G","\ua77d":"G","\ua77e":"G","\u24bd":"H","\uff28":"H","\u0124":"H","\u1e22":"H","\u1e26":"H","\u021e":"H","\u1e24":"H","\u1e28":"H","\u1e2a":"H","\u0126":"H","\u2c67":"H","\u2c75":"H","\ua78d":"H","\u24be":"I","\uff29":"I","\xcc":"I","\xcd":"I","\xce":"I","\u0128":"I","\u012a":"I","\u012c":"I","\u0130":"I","\xcf":"I","\u1e2e":"I","\u1ec8":"I","\u01cf":"I","\u0208":"I","\u020a":"I","\u1eca":"I","\u012e":"I","\u1e2c":"I","\u0197":"I","\u24bf":"J","\uff2a":"J","\u0134":"J","\u0248":"J","\u24c0":"K","\uff2b":"K","\u1e30":"K","\u01e8":"K","\u1e32":"K","\u0136":"K","\u1e34":"K","\u0198":"K","\u2c69":"K","\ua740":"K","\ua742":"K","\ua744":"K","\ua7a2":"K","\u24c1":"L","\uff2c":"L","\u013f":"L","\u0139":"L","\u013d":"L","\u1e36":"L","\u1e38":"L","\u013b":"L","\u1e3c":"L","\u1e3a":"L","\u0141":"L","\u023d":"L","\u2c62":"L","\u2c60":"L","\ua748":"L","\ua746":"L","\ua780":"L","\u01c7":"LJ","\u01c8":"Lj","\u24c2":"M","\uff2d":"M","\u1e3e":"M","\u1e40":"M","\u1e42":"M","\u2c6e":"M","\u019c":"M","\u24c3":"N","\uff2e":"N","\u01f8":"N","\u0143":"N","\xd1":"N","\u1e44":"N","\u0147":"N","\u1e46":"N","\u0145":"N","\u1e4a":"N","\u1e48":"N","\u0220":"N","\u019d":"N","\ua790":"N","\ua7a4":"N","\u01ca":"NJ","\u01cb":"Nj","\u24c4":"O","\uff2f":"O","\xd2":"O","\xd3":"O","\xd4":"O","\u1ed2":"O","\u1ed0":"O","\u1ed6":"O","\u1ed4":"O","\xd5":"O","\u1e4c":"O","\u022c":"O","\u1e4e":"O","\u014c":"O","\u1e50":"O","\u1e52":"O","\u014e":"O","\u022e":"O","\u0230":"O","\xd6":"O","\u022a":"O","\u1ece":"O","\u0150":"O","\u01d1":"O","\u020c":"O","\u020e":"O","\u01a0":"O","\u1edc":"O","\u1eda":"O","\u1ee0":"O","\u1ede":"O","\u1ee2":"O","\u1ecc":"O","\u1ed8":"O","\u01ea":"O","\u01ec":"O","\xd8":"O","\u01fe":"O","\u0186":"O","\u019f":"O","\ua74a":"O","\ua74c":"O","\u01a2":"OI","\ua74e":"OO","\u0222":"OU","\u24c5":"P","\uff30":"P","\u1e54":"P","\u1e56":"P","\u01a4":"P","\u2c63":"P","\ua750":"P","\ua752":"P","\ua754":"P","\u24c6":"Q","\uff31":"Q","\ua756":"Q","\ua758":"Q","\u024a":"Q","\u24c7":"R","\uff32":"R","\u0154":"R","\u1e58":"R","\u0158":"R","\u0210":"R","\u0212":"R","\u1e5a":"R","\u1e5c":"R","\u0156":"R","\u1e5e":"R","\u024c":"R","\u2c64":"R","\ua75a":"R","\ua7a6":"R","\ua782":"R","\u24c8":"S","\uff33":"S","\u1e9e":"S","\u015a":"S","\u1e64":"S","\u015c":"S","\u1e60":"S","\u0160":"S","\u1e66":"S","\u1e62":"S","\u1e68":"S","\u0218":"S","\u015e":"S","\u2c7e":"S","\ua7a8":"S","\ua784":"S","\u24c9":"T","\uff34":"T","\u1e6a":"T","\u0164":"T","\u1e6c":"T","\u021a":"T","\u0162":"T","\u1e70":"T","\u1e6e":"T","\u0166":"T","\u01ac":"T","\u01ae":"T","\u023e":"T","\ua786":"T","\ua728":"TZ","\u24ca":"U","\uff35":"U","\xd9":"U","\xda":"U","\xdb":"U","\u0168":"U","\u1e78":"U","\u016a":"U","\u1e7a":"U","\u016c":"U","\xdc":"U","\u01db":"U","\u01d7":"U","\u01d5":"U","\u01d9":"U","\u1ee6":"U","\u016e":"U","\u0170":"U","\u01d3":"U","\u0214":"U","\u0216":"U","\u01af":"U","\u1eea":"U","\u1ee8":"U","\u1eee":"U","\u1eec":"U","\u1ef0":"U","\u1ee4":"U","\u1e72":"U","\u0172":"U","\u1e76":"U","\u1e74":"U","\u0244":"U","\u24cb":"V","\uff36":"V","\u1e7c":"V","\u1e7e":"V","\u01b2":"V","\ua75e":"V","\u0245":"V","\ua760":"VY","\u24cc":"W","\uff37":"W","\u1e80":"W","\u1e82":"W","\u0174":"W","\u1e86":"W","\u1e84":"W","\u1e88":"W","\u2c72":"W","\u24cd":"X","\uff38":"X","\u1e8a":"X","\u1e8c":"X","\u24ce":"Y","\uff39":"Y","\u1ef2":"Y","\xdd":"Y","\u0176":"Y","\u1ef8":"Y","\u0232":"Y","\u1e8e":"Y","\u0178":"Y","\u1ef6":"Y","\u1ef4":"Y","\u01b3":"Y","\u024e":"Y","\u1efe":"Y","\u24cf":"Z","\uff3a":"Z","\u0179":"Z","\u1e90":"Z","\u017b":"Z","\u017d":"Z","\u1e92":"Z","\u1e94":"Z","\u01b5":"Z","\u0224":"Z","\u2c7f":"Z","\u2c6b":"Z","\ua762":"Z","\u24d0":"a","\uff41":"a","\u1e9a":"a","\xe0":"a","\xe1":"a","\xe2":"a","\u1ea7":"a","\u1ea5":"a","\u1eab":"a","\u1ea9":"a","\xe3":"a","\u0101":"a","\u0103":"a","\u1eb1":"a","\u1eaf":"a","\u1eb5":"a","\u1eb3":"a","\u0227":"a","\u01e1":"a","\xe4":"a","\u01df":"a","\u1ea3":"a","\xe5":"a","\u01fb":"a","\u01ce":"a","\u0201":"a","\u0203":"a","\u1ea1":"a","\u1ead":"a","\u1eb7":"a","\u1e01":"a","\u0105":"a","\u2c65":"a","\u0250":"a","\ua733":"aa","\xe6":"ae","\u01fd":"ae","\u01e3":"ae","\ua735":"ao","\ua737":"au","\ua739":"av","\ua73b":"av","\ua73d":"ay","\u24d1":"b","\uff42":"b","\u1e03":"b","\u1e05":"b","\u1e07":"b","\u0180":"b","\u0183":"b","\u0253":"b","\u24d2":"c","\uff43":"c","\u0107":"c","\u0109":"c","\u010b":"c","\u010d":"c","\xe7":"c","\u1e09":"c","\u0188":"c","\u023c":"c","\ua73f":"c","\u2184":"c","\u24d3":"d","\uff44":"d","\u1e0b":"d","\u010f":"d","\u1e0d":"d","\u1e11":"d","\u1e13":"d","\u1e0f":"d","\u0111":"d","\u018c":"d","\u0256":"d","\u0257":"d","\ua77a":"d","\u01f3":"dz","\u01c6":"dz","\u24d4":"e","\uff45":"e","\xe8":"e","\xe9":"e","\xea":"e","\u1ec1":"e","\u1ebf":"e","\u1ec5":"e","\u1ec3":"e","\u1ebd":"e","\u0113":"e","\u1e15":"e","\u1e17":"e","\u0115":"e","\u0117":"e","\xeb":"e","\u1ebb":"e","\u011b":"e","\u0205":"e","\u0207":"e","\u1eb9":"e","\u1ec7":"e","\u0229":"e","\u1e1d":"e","\u0119":"e","\u1e19":"e","\u1e1b":"e","\u0247":"e","\u025b":"e","\u01dd":"e","\u24d5":"f","\uff46":"f","\u1e1f":"f","\u0192":"f","\ua77c":"f","\u24d6":"g","\uff47":"g","\u01f5":"g","\u011d":"g","\u1e21":"g","\u011f":"g","\u0121":"g","\u01e7":"g","\u0123":"g","\u01e5":"g","\u0260":"g","\ua7a1":"g","\u1d79":"g","\ua77f":"g","\u24d7":"h","\uff48":"h","\u0125":"h","\u1e23":"h","\u1e27":"h","\u021f":"h","\u1e25":"h","\u1e29":"h","\u1e2b":"h","\u1e96":"h","\u0127":"h","\u2c68":"h","\u2c76":"h","\u0265":"h","\u0195":"hv","\u24d8":"i","\uff49":"i","\xec":"i","\xed":"i","\xee":"i","\u0129":"i","\u012b":"i","\u012d":"i","\xef":"i","\u1e2f":"i","\u1ec9":"i","\u01d0":"i","\u0209":"i","\u020b":"i","\u1ecb":"i","\u012f":"i","\u1e2d":"i","\u0268":"i","\u0131":"i","\u24d9":"j","\uff4a":"j","\u0135":"j","\u01f0":"j","\u0249":"j","\u24da":"k","\uff4b":"k","\u1e31":"k","\u01e9":"k","\u1e33":"k","\u0137":"k","\u1e35":"k","\u0199":"k","\u2c6a":"k","\ua741":"k","\ua743":"k","\ua745":"k","\ua7a3":"k","\u24db":"l","\uff4c":"l","\u0140":"l","\u013a":"l","\u013e":"l","\u1e37":"l","\u1e39":"l","\u013c":"l","\u1e3d":"l","\u1e3b":"l","\u017f":"l","\u0142":"l","\u019a":"l","\u026b":"l","\u2c61":"l","\ua749":"l","\ua781":"l","\ua747":"l","\u01c9":"lj","\u24dc":"m","\uff4d":"m","\u1e3f":"m","\u1e41":"m","\u1e43":"m","\u0271":"m","\u026f":"m","\u24dd":"n","\uff4e":"n","\u01f9":"n","\u0144":"n","\xf1":"n","\u1e45":"n","\u0148":"n","\u1e47":"n","\u0146":"n","\u1e4b":"n","\u1e49":"n","\u019e":"n","\u0272":"n","\u0149":"n","\ua791":"n","\ua7a5":"n","\u01cc":"nj","\u24de":"o","\uff4f":"o","\xf2":"o","\xf3":"o","\xf4":"o","\u1ed3":"o","\u1ed1":"o","\u1ed7":"o","\u1ed5":"o","\xf5":"o","\u1e4d":"o","\u022d":"o","\u1e4f":"o","\u014d":"o","\u1e51":"o","\u1e53":"o","\u014f":"o","\u022f":"o","\u0231":"o","\xf6":"o","\u022b":"o","\u1ecf":"o","\u0151":"o","\u01d2":"o","\u020d":"o","\u020f":"o","\u01a1":"o","\u1edd":"o","\u1edb":"o","\u1ee1":"o","\u1edf":"o","\u1ee3":"o","\u1ecd":"o","\u1ed9":"o","\u01eb":"o","\u01ed":"o","\xf8":"o","\u01ff":"o","\u0254":"o","\ua74b":"o","\ua74d":"o","\u0275":"o","\u01a3":"oi","\u0223":"ou","\ua74f":"oo","\u24df":"p","\uff50":"p","\u1e55":"p","\u1e57":"p","\u01a5":"p","\u1d7d":"p","\ua751":"p","\ua753":"p","\ua755":"p","\u24e0":"q","\uff51":"q","\u024b":"q","\ua757":"q","\ua759":"q","\u24e1":"r","\uff52":"r","\u0155":"r","\u1e59":"r","\u0159":"r","\u0211":"r","\u0213":"r","\u1e5b":"r","\u1e5d":"r","\u0157":"r","\u1e5f":"r","\u024d":"r","\u027d":"r","\ua75b":"r","\ua7a7":"r","\ua783":"r","\u24e2":"s","\uff53":"s","\xdf":"s","\u015b":"s","\u1e65":"s","\u015d":"s","\u1e61":"s","\u0161":"s","\u1e67":"s","\u1e63":"s","\u1e69":"s","\u0219":"s","\u015f":"s","\u023f":"s","\ua7a9":"s","\ua785":"s","\u1e9b":"s","\u24e3":"t","\uff54":"t","\u1e6b":"t","\u1e97":"t","\u0165":"t","\u1e6d":"t","\u021b":"t","\u0163":"t","\u1e71":"t","\u1e6f":"t","\u0167":"t","\u01ad":"t","\u0288":"t","\u2c66":"t","\ua787":"t","\ua729":"tz","\u24e4":"u","\uff55":"u","\xf9":"u","\xfa":"u","\xfb":"u","\u0169":"u","\u1e79":"u","\u016b":"u","\u1e7b":"u","\u016d":"u","\xfc":"u","\u01dc":"u","\u01d8":"u","\u01d6":"u","\u01da":"u","\u1ee7":"u","\u016f":"u","\u0171":"u","\u01d4":"u","\u0215":"u","\u0217":"u","\u01b0":"u","\u1eeb":"u","\u1ee9":"u","\u1eef":"u","\u1eed":"u","\u1ef1":"u","\u1ee5":"u","\u1e73":"u","\u0173":"u","\u1e77":"u","\u1e75":"u","\u0289":"u","\u24e5":"v","\uff56":"v","\u1e7d":"v","\u1e7f":"v","\u028b":"v","\ua75f":"v","\u028c":"v","\ua761":"vy","\u24e6":"w","\uff57":"w","\u1e81":"w","\u1e83":"w","\u0175":"w","\u1e87":"w","\u1e85":"w","\u1e98":"w","\u1e89":"w","\u2c73":"w","\u24e7":"x","\uff58":"x","\u1e8b":"x","\u1e8d":"x","\u24e8":"y","\uff59":"y","\u1ef3":"y","\xfd":"y","\u0177":"y","\u1ef9":"y","\u0233":"y","\u1e8f":"y","\xff":"y","\u1ef7":"y","\u1e99":"y","\u1ef5":"y","\u01b4":"y","\u024f":"y","\u1eff":"y","\u24e9":"z","\uff5a":"z","\u017a":"z","\u1e91":"z","\u017c":"z","\u017e":"z","\u1e93":"z","\u1e95":"z","\u01b6":"z","\u0225":"z","\u0240":"z","\u2c6c":"z","\ua763":"z","\u0386":"\u0391","\u0388":"\u0395","\u0389":"\u0397","\u038a":"\u0399","\u03aa":"\u0399","\u038c":"\u039f","\u038e":"\u03a5","\u03ab":"\u03a5","\u038f":"\u03a9","\u03ac":"\u03b1","\u03ad":"\u03b5","\u03ae":"\u03b7","\u03af":"\u03b9","\u03ca":"\u03b9","\u0390":"\u03b9","\u03cc":"\u03bf","\u03cd":"\u03c5","\u03cb":"\u03c5","\u03b0":"\u03c5","\u03c9":"\u03c9","\u03c2":"\u03c3"};j=a(document),g=function(){var a=1;return function(){return a++}}(),d=O(Object,{bind:function(a){var b=this;return function(){a.apply(b,arguments)}},init:function(c){var d,e,f=".select2-results";this.opts=c=this.prepareOpts(c),this.id=c.id,c.element.data("select2")!==b&&null!==c.element.data("select2")&&c.element.data("select2").destroy(),this.container=this.createContainer(),this.liveRegion=a("<span>",{role:"status","aria-live":"polite"}).addClass("select2-hidden-accessible").appendTo(document.body),this.containerId="s2id_"+(c.element.attr("id")||"autogen"+g()),this.containerEventName=this.containerId.replace(/([.])/g,"_").replace(/([;&,\-\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,"\\$1"),this.container.attr("id",this.containerId),this.container.attr("title",c.element.attr("title")),this.body=a("body"),D(this.container,this.opts.element,this.opts.adaptContainerCssClass),this.container.attr("style",c.element.attr("style")),this.container.css(K(c.containerCss,this.opts.element)),this.container.addClass(K(c.containerCssClass,this.opts.element)),this.elementTabIndex=this.opts.element.attr("tabindex"),this.opts.element.data("select2",this).attr("tabindex","-1").before(this.container).on("click.select2",A),this.container.data("select2",this),this.dropdown=this.container.find(".select2-drop"),D(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass),this.dropdown.addClass(K(c.dropdownCssClass,this.opts.element)),this.dropdown.data("select2",this),this.dropdown.on("click",A),this.results=d=this.container.find(f),this.search=e=this.container.find("input.select2-input"),this.queryCount=0,this.resultsPage=0,this.context=null,this.initContainer(),this.container.on("click",A),v(this.results),this.dropdown.on("mousemove-filtered",f,this.bind(this.highlightUnderEvent)),this.dropdown.on("touchstart touchmove touchend",f,this.bind(function(a){this._touchEvent=!0,this.highlightUnderEvent(a)})),this.dropdown.on("touchmove",f,this.bind(this.touchMoved)),this.dropdown.on("touchstart touchend",f,this.bind(this.clearTouchMoved)),this.dropdown.on("click",this.bind(function(){this._touchEvent&&(this._touchEvent=!1,this.selectHighlighted())})),x(80,this.results),this.dropdown.on("scroll-debounced",f,this.bind(this.loadMoreIfNeeded)),a(this.container).on("change",".select2-input",function(a){a.stopPropagation()}),a(this.dropdown).on("change",".select2-input",function(a){a.stopPropagation()}),a.fn.mousewheel&&d.mousewheel(function(a,b,c,e){var f=d.scrollTop();e>0&&0>=f-e?(d.scrollTop(0),A(a)):0>e&&d.get(0).scrollHeight-d.scrollTop()+e<=d.height()&&(d.scrollTop(d.get(0).scrollHeight-d.height()),A(a))}),u(e),e.on("keyup-change input paste",this.bind(this.updateResults)),e.on("focus",function(){e.addClass("select2-focused")}),e.on("blur",function(){e.removeClass("select2-focused")}),this.dropdown.on("mouseup",f,this.bind(function(b){a(b.target).closest(".select2-result-selectable").length>0&&(this.highlightUnderEvent(b),this.selectHighlighted(b))})),this.dropdown.on("click mouseup mousedown touchstart touchend focusin",function(a){a.stopPropagation()}),this.nextSearchTerm=b,a.isFunction(this.opts.initSelection)&&(this.initSelection(),this.monitorSource()),null!==c.maximumInputLength&&this.search.attr("maxlength",c.maximumInputLength);var h=c.element.prop("disabled");h===b&&(h=!1),this.enable(!h);var i=c.element.prop("readonly");i===b&&(i=!1),this.readonly(i),k=k||q(),this.autofocus=c.element.prop("autofocus"),c.element.prop("autofocus",!1),this.autofocus&&this.focus(),this.search.attr("placeholder",c.searchInputPlaceholder)},destroy:function(){var a=this.opts.element,c=a.data("select2"),d=this;this.close(),a.length&&a[0].detachEvent&&a.each(function(){this.detachEvent("onpropertychange",d._sync)}),this.propertyObserver&&(this.propertyObserver.disconnect(),this.propertyObserver=null),this._sync=null,c!==b&&(c.container.remove(),c.liveRegion.remove(),c.dropdown.remove(),a.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus",this.autofocus||!1),this.elementTabIndex?a.attr({tabindex:this.elementTabIndex}):a.removeAttr("tabindex"),a.show()),N.call(this,"container","liveRegion","dropdown","results","search")},optionToData:function(a){return a.is("option")?{id:a.prop("value"),text:a.text(),element:a.get(),css:a.attr("class"),disabled:a.prop("disabled"),locked:r(a.attr("locked"),"locked")||r(a.data("locked"),!0)}:a.is("optgroup")?{text:a.attr("label"),children:[],element:a.get(),css:a.attr("class")}:void 0},prepareOpts:function(c){var d,e,f,h,i=this;if(d=c.element,"select"===d.get(0).tagName.toLowerCase()&&(this.select=e=c.element),e&&a.each(["id","multiple","ajax","query","createSearchChoice","initSelection","data","tags"],function(){if(this in c)throw new Error("Option '"+this+"' is not allowed for Select2 when attached to a <select> element.")}),c=a.extend({},{populateResults:function(d,e,f){var h,j=this.opts.id,k=this.liveRegion;h=function(d,e,l){var m,n,o,p,q,r,s,t,u,v;d=c.sortResults(d,e,f);var w=[];for(m=0,n=d.length;n>m;m+=1)o=d[m],q=o.disabled===!0,p=!q&&j(o)!==b,r=o.children&&o.children.length>0,s=a("<li></li>"),s.addClass("select2-results-dept-"+l),s.addClass("select2-result"),s.addClass(p?"select2-result-selectable":"select2-result-unselectable"),q&&s.addClass("select2-disabled"),r&&s.addClass("select2-result-with-children"),s.addClass(i.opts.formatResultCssClass(o)),s.attr("role","presentation"),t=a(document.createElement("div")),t.addClass("select2-result-label"),t.attr("id","select2-result-label-"+g()),t.attr("role","option"),v=c.formatResult(o,t,f,i.opts.escapeMarkup),v!==b&&(t.html(v),s.append(t)),r&&(u=a("<ul></ul>"),u.addClass("select2-result-sub"),h(o.children,u,l+1),s.append(u)),s.data("select2-data",o),w.push(s[0]);e.append(w),k.text(c.formatMatches(d.length))},h(e,d,0)}},a.fn.select2.defaults,c),"function"!=typeof c.id&&(f=c.id,c.id=function(a){return a[f]}),a.isArray(c.element.data("select2Tags"))){if("tags"in c)throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 "+c.element.attr("id");c.tags=c.element.data("select2Tags")}if(e?(c.query=this.bind(function(a){var f,g,h,c={results:[],more:!1},e=a.term;h=function(b,c){var d;b.is("option")?a.matcher(e,b.text(),b)&&c.push(i.optionToData(b)):b.is("optgroup")&&(d=i.optionToData(b),b.children().each2(function(a,b){h(b,d.children)}),d.children.length>0&&c.push(d))},f=d.children(),this.getPlaceholder()!==b&&f.length>0&&(g=this.getPlaceholderOption(),g&&(f=f.not(g))),f.each2(function(a,b){h(b,c.results)}),a.callback(c)}),c.id=function(a){return a.id}):"query"in c||("ajax"in c?(h=c.element.data("ajax-url"),h&&h.length>0&&(c.ajax.url=h),c.query=G.call(c.element,c.ajax)):"data"in c?c.query=H(c.data):"tags"in c&&(c.query=I(c.tags),c.createSearchChoice===b&&(c.createSearchChoice=function(b){return{id:a.trim(b),text:a.trim(b)}}),c.initSelection===b&&(c.initSelection=function(b,d){var e=[];a(s(b.val(),c.separator)).each(function(){var b={id:this,text:this},d=c.tags;a.isFunction(d)&&(d=d()),a(d).each(function(){return r(this.id,b.id)?(b=this,!1):void 0}),e.push(b)}),d(e)}))),"function"!=typeof c.query)throw"query function not defined for Select2 "+c.element.attr("id");if("top"===c.createSearchChoicePosition)c.createSearchChoicePosition=function(a,b){a.unshift(b)};else if("bottom"===c.createSearchChoicePosition)c.createSearchChoicePosition=function(a,b){a.push(b)};else if("function"!=typeof c.createSearchChoicePosition)throw"invalid createSearchChoicePosition option must be 'top', 'bottom' or a custom function";return c},monitorSource:function(){var d,c=this.opts.element,e=this;c.on("change.select2",this.bind(function(){this.opts.element.data("select2-change-triggered")!==!0&&this.initSelection()})),this._sync=this.bind(function(){var a=c.prop("disabled");a===b&&(a=!1),this.enable(!a);var d=c.prop("readonly");d===b&&(d=!1),this.readonly(d),D(this.container,this.opts.element,this.opts.adaptContainerCssClass),this.container.addClass(K(this.opts.containerCssClass,this.opts.element)),D(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass),this.dropdown.addClass(K(this.opts.dropdownCssClass,this.opts.element))}),c.length&&c[0].attachEvent&&c.each(function(){this.attachEvent("onpropertychange",e._sync)}),d=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,d!==b&&(this.propertyObserver&&(delete this.propertyObserver,this.propertyObserver=null),this.propertyObserver=new d(function(b){a.each(b,e._sync)}),this.propertyObserver.observe(c.get(0),{attributes:!0,subtree:!1}))},triggerSelect:function(b){var c=a.Event("select2-selecting",{val:this.id(b),object:b,choice:b});return this.opts.element.trigger(c),!c.isDefaultPrevented()},triggerChange:function(b){b=b||{},b=a.extend({},b,{type:"change",val:this.val()}),this.opts.element.data("select2-change-triggered",!0),this.opts.element.trigger(b),this.opts.element.data("select2-change-triggered",!1),this.opts.element.click(),this.opts.blurOnChange&&this.opts.element.blur()},isInterfaceEnabled:function(){return this.enabledInterface===!0},enableInterface:function(){var a=this._enabled&&!this._readonly,b=!a;return a===this.enabledInterface?!1:(this.container.toggleClass("select2-container-disabled",b),this.close(),this.enabledInterface=a,!0)},enable:function(a){a===b&&(a=!0),this._enabled!==a&&(this._enabled=a,this.opts.element.prop("disabled",!a),this.enableInterface())},disable:function(){this.enable(!1)},readonly:function(a){a===b&&(a=!1),this._readonly!==a&&(this._readonly=a,this.opts.element.prop("readonly",a),this.enableInterface())},opened:function(){return this.container?this.container.hasClass("select2-dropdown-open"):!1},positionDropdown:function(){var t,u,v,w,x,b=this.dropdown,c=this.container.offset(),d=this.container.outerHeight(!1),e=this.container.outerWidth(!1),f=b.outerHeight(!1),g=a(window),h=g.width(),i=g.height(),j=g.scrollLeft()+h,l=g.scrollTop()+i,m=c.top+d,n=c.left,o=l>=m+f,p=c.top-f>=g.scrollTop(),q=b.outerWidth(!1),r=j>=n+q,s=b.hasClass("select2-drop-above");s?(u=!0,!p&&o&&(v=!0,u=!1)):(u=!1,!o&&p&&(v=!0,u=!0)),v&&(b.hide(),c=this.container.offset(),d=this.container.outerHeight(!1),e=this.container.outerWidth(!1),f=b.outerHeight(!1),j=g.scrollLeft()+h,l=g.scrollTop()+i,m=c.top+d,n=c.left,q=b.outerWidth(!1),r=j>=n+q,b.show(),this.focusSearch()),this.opts.dropdownAutoWidth?(x=a(".select2-results",b)[0],b.addClass("select2-drop-auto-width"),b.css("width",""),q=b.outerWidth(!1)+(x.scrollHeight===x.clientHeight?0:k.width),q>e?e=q:q=e,f=b.outerHeight(!1),r=j>=n+q):this.container.removeClass("select2-drop-auto-width"),"static"!==this.body.css("position")&&(t=this.body.offset(),m-=t.top,n-=t.left),r||(n=c.left+this.container.outerWidth(!1)-q),w={left:n,width:e},u?(w.top=c.top-f,w.bottom="auto",this.container.addClass("select2-drop-above"),b.addClass("select2-drop-above")):(w.top=m,w.bottom="auto",this.container.removeClass("select2-drop-above"),b.removeClass("select2-drop-above")),w=a.extend(w,K(this.opts.dropdownCss,this.opts.element)),b.css(w)},shouldOpen:function(){var b;return this.opened()?!1:this._enabled===!1||this._readonly===!0?!1:(b=a.Event("select2-opening"),this.opts.element.trigger(b),!b.isDefaultPrevented())},clearDropdownAlignmentPreference:function(){this.container.removeClass("select2-drop-above"),this.dropdown.removeClass("select2-drop-above")},open:function(){return this.shouldOpen()?(this.opening(),j.on("mousemove.select2Event",function(a){i.x=a.pageX,i.y=a.pageY}),!0):!1},opening:function(){var f,b=this.containerEventName,c="scroll."+b,d="resize."+b,e="orientationchange."+b;this.container.addClass("select2-dropdown-open").addClass("select2-container-active"),this.clearDropdownAlignmentPreference(),this.dropdown[0]!==this.body.children().last()[0]&&this.dropdown.detach().appendTo(this.body),f=a("#select2-drop-mask"),0==f.length&&(f=a(document.createElement("div")),f.attr("id","select2-drop-mask").attr("class","select2-drop-mask"),f.hide(),f.appendTo(this.body),f.on("mousedown touchstart click",function(b){n(f);var d,c=a("#select2-drop");c.length>0&&(d=c.data("select2"),d.opts.selectOnBlur&&d.selectHighlighted({noFocus:!0}),d.close(),b.preventDefault(),b.stopPropagation())})),this.dropdown.prev()[0]!==f[0]&&this.dropdown.before(f),a("#select2-drop").removeAttr("id"),this.dropdown.attr("id","select2-drop"),f.show(),this.positionDropdown(),this.dropdown.show(),this.positionDropdown(),this.dropdown.addClass("select2-drop-active");var g=this;this.container.parents().add(window).each(function(){a(this).on(d+" "+c+" "+e,function(){g.opened()&&g.positionDropdown()})})},close:function(){if(this.opened()){var b=this.containerEventName,c="scroll."+b,d="resize."+b,e="orientationchange."+b;this.container.parents().add(window).each(function(){a(this).off(c).off(d).off(e)}),this.clearDropdownAlignmentPreference(),a("#select2-drop-mask").hide(),this.dropdown.removeAttr("id"),this.dropdown.hide(),this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"),this.results.empty(),j.off("mousemove.select2Event"),this.clearSearch(),this.search.removeClass("select2-active"),this.opts.element.trigger(a.Event("select2-close"))}},externalSearch:function(a){this.open(),this.search.val(a),this.updateResults(!1)},clearSearch:function(){},getMaximumSelectionSize:function(){return K(this.opts.maximumSelectionSize,this.opts.element)},ensureHighlightVisible:function(){var c,d,e,f,g,h,i,j,b=this.results;if(d=this.highlight(),!(0>d)){if(0==d)return b.scrollTop(0),void 0;c=this.findHighlightableChoices().find(".select2-result-label"),e=a(c[d]),j=(e.offset()||{}).top||0,f=j+e.outerHeight(!0),d===c.length-1&&(i=b.find("li.select2-more-results"),i.length>0&&(f=i.offset().top+i.outerHeight(!0))),g=b.offset().top+b.outerHeight(!0),f>g&&b.scrollTop(b.scrollTop()+(f-g)),h=j-b.offset().top,0>h&&"none"!=e.css("display")&&b.scrollTop(b.scrollTop()+h)}},findHighlightableChoices:function(){return this.results.find(".select2-result-selectable:not(.select2-disabled):not(.select2-selected)")},moveHighlight:function(b){for(var c=this.findHighlightableChoices(),d=this.highlight();d>-1&&d<c.length;){d+=b;var e=a(c[d]);if(e.hasClass("select2-result-selectable")&&!e.hasClass("select2-disabled")&&!e.hasClass("select2-selected")){this.highlight(d);
break}}},highlight:function(b){var d,e,c=this.findHighlightableChoices();return 0===arguments.length?p(c.filter(".select2-highlighted")[0],c.get()):(b>=c.length&&(b=c.length-1),0>b&&(b=0),this.removeHighlight(),d=a(c[b]),d.addClass("select2-highlighted"),this.search.attr("aria-activedescendant",d.find(".select2-result-label").attr("id")),this.ensureHighlightVisible(),this.liveRegion.text(d.text()),e=d.data("select2-data"),e&&this.opts.element.trigger({type:"select2-highlight",val:this.id(e),choice:e}),void 0)},removeHighlight:function(){this.results.find(".select2-highlighted").removeClass("select2-highlighted")},touchMoved:function(){this._touchMoved=!0},clearTouchMoved:function(){this._touchMoved=!1},countSelectableResults:function(){return this.findHighlightableChoices().length},highlightUnderEvent:function(b){var c=a(b.target).closest(".select2-result-selectable");if(c.length>0&&!c.is(".select2-highlighted")){var d=this.findHighlightableChoices();this.highlight(d.index(c))}else 0==c.length&&this.removeHighlight()},loadMoreIfNeeded:function(){var c,a=this.results,b=a.find("li.select2-more-results"),d=this.resultsPage+1,e=this,f=this.search.val(),g=this.context;0!==b.length&&(c=b.offset().top-a.offset().top-a.height(),c<=this.opts.loadMorePadding&&(b.addClass("select2-active"),this.opts.query({element:this.opts.element,term:f,page:d,context:g,matcher:this.opts.matcher,callback:this.bind(function(c){e.opened()&&(e.opts.populateResults.call(this,a,c.results,{term:f,page:d,context:g}),e.postprocessResults(c,!1,!1),c.more===!0?(b.detach().appendTo(a).text(K(e.opts.formatLoadMore,e.opts.element,d+1)),window.setTimeout(function(){e.loadMoreIfNeeded()},10)):b.remove(),e.positionDropdown(),e.resultsPage=d,e.context=c.context,this.opts.element.trigger({type:"select2-loaded",items:c}))})})))},tokenize:function(){},updateResults:function(c){function m(){d.removeClass("select2-active"),h.positionDropdown(),e.find(".select2-no-results,.select2-selection-limit,.select2-searching").length?h.liveRegion.text(e.text()):h.liveRegion.text(h.opts.formatMatches(e.find(".select2-result-selectable").length))}function n(a){e.html(a),m()}var g,i,l,d=this.search,e=this.results,f=this.opts,h=this,j=d.val(),k=a.data(this.container,"select2-last-term");if((c===!0||!k||!r(j,k))&&(a.data(this.container,"select2-last-term",j),c===!0||this.showSearchInput!==!1&&this.opened())){l=++this.queryCount;var o=this.getMaximumSelectionSize();if(o>=1&&(g=this.data(),a.isArray(g)&&g.length>=o&&J(f.formatSelectionTooBig,"formatSelectionTooBig")))return n("<li class='select2-selection-limit'>"+K(f.formatSelectionTooBig,f.element,o)+"</li>"),void 0;if(d.val().length<f.minimumInputLength)return J(f.formatInputTooShort,"formatInputTooShort")?n("<li class='select2-no-results'>"+K(f.formatInputTooShort,f.element,d.val(),f.minimumInputLength)+"</li>"):n(""),c&&this.showSearch&&this.showSearch(!0),void 0;if(f.maximumInputLength&&d.val().length>f.maximumInputLength)return J(f.formatInputTooLong,"formatInputTooLong")?n("<li class='select2-no-results'>"+K(f.formatInputTooLong,f.element,d.val(),f.maximumInputLength)+"</li>"):n(""),void 0;f.formatSearching&&0===this.findHighlightableChoices().length&&n("<li class='select2-searching'>"+K(f.formatSearching,f.element)+"</li>"),d.addClass("select2-active"),this.removeHighlight(),i=this.tokenize(),i!=b&&null!=i&&d.val(i),this.resultsPage=1,f.query({element:f.element,term:d.val(),page:this.resultsPage,context:null,matcher:f.matcher,callback:this.bind(function(g){var i;if(l==this.queryCount){if(!this.opened())return this.search.removeClass("select2-active"),void 0;if(g.hasError!==b&&J(f.formatAjaxError,"formatAjaxError"))return n("<li class='select2-ajax-error'>"+K(f.formatAjaxError,f.element,g.jqXHR,g.textStatus,g.errorThrown)+"</li>"),void 0;if(this.context=g.context===b?null:g.context,this.opts.createSearchChoice&&""!==d.val()&&(i=this.opts.createSearchChoice.call(h,d.val(),g.results),i!==b&&null!==i&&h.id(i)!==b&&null!==h.id(i)&&0===a(g.results).filter(function(){return r(h.id(this),h.id(i))}).length&&this.opts.createSearchChoicePosition(g.results,i)),0===g.results.length&&J(f.formatNoMatches,"formatNoMatches"))return n("<li class='select2-no-results'>"+K(f.formatNoMatches,f.element,d.val())+"</li>"),void 0;e.empty(),h.opts.populateResults.call(this,e,g.results,{term:d.val(),page:this.resultsPage,context:null}),g.more===!0&&J(f.formatLoadMore,"formatLoadMore")&&(e.append("<li class='select2-more-results'>"+f.escapeMarkup(K(f.formatLoadMore,f.element,this.resultsPage))+"</li>"),window.setTimeout(function(){h.loadMoreIfNeeded()},10)),this.postprocessResults(g,c),m(),this.opts.element.trigger({type:"select2-loaded",items:g})}})})}},cancel:function(){this.close()},blur:function(){this.opts.selectOnBlur&&this.selectHighlighted({noFocus:!0}),this.close(),this.container.removeClass("select2-container-active"),this.search[0]===document.activeElement&&this.search.blur(),this.clearSearch(),this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")},focusSearch:function(){y(this.search)},selectHighlighted:function(a){if(this._touchMoved)return this.clearTouchMoved(),void 0;var b=this.highlight(),c=this.results.find(".select2-highlighted"),d=c.closest(".select2-result").data("select2-data");d?(this.highlight(b),this.onSelect(d,a)):a&&a.noFocus&&this.close()},getPlaceholder:function(){var a;return this.opts.element.attr("placeholder")||this.opts.element.attr("data-placeholder")||this.opts.element.data("placeholder")||this.opts.placeholder||((a=this.getPlaceholderOption())!==b?a.text():b)},getPlaceholderOption:function(){if(this.select){var c=this.select.children("option").first();if(this.opts.placeholderOption!==b)return"first"===this.opts.placeholderOption&&c||"function"==typeof this.opts.placeholderOption&&this.opts.placeholderOption(this.select);if(""===a.trim(c.text())&&""===c.val())return c}},initContainerWidth:function(){function c(){var c,d,e,f,g,h;if("off"===this.opts.width)return null;if("element"===this.opts.width)return 0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px";if("copy"===this.opts.width||"resolve"===this.opts.width){if(c=this.opts.element.attr("style"),c!==b)for(d=c.split(";"),f=0,g=d.length;g>f;f+=1)if(h=d[f].replace(/\s/g,""),e=h.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i),null!==e&&e.length>=1)return e[1];return"resolve"===this.opts.width?(c=this.opts.element.css("width"),c.indexOf("%")>0?c:0===this.opts.element.outerWidth(!1)?"auto":this.opts.element.outerWidth(!1)+"px"):null}return a.isFunction(this.opts.width)?this.opts.width():this.opts.width}var d=c.call(this);null!==d&&this.container.css("width",d)}}),e=O(d,{createContainer:function(){var b=a(document.createElement("div")).attr({"class":"select2-container"}).html(["<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>","   <span class='select2-chosen'>&#160;</span><abbr class='select2-search-choice-close'></abbr>","   <span class='select2-arrow' role='presentation'><b role='presentation'></b></span>","</a>","<label for='' class='select2-offscreen'></label>","<input class='select2-focusser select2-offscreen' type='text' aria-haspopup='true' role='button' />","<div class='select2-drop select2-display-none'>","   <div class='select2-search'>","       <label for='' class='select2-offscreen'></label>","       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input' role='combobox' aria-expanded='true'","       aria-autocomplete='list' />","   </div>","   <ul class='select2-results' role='listbox'>","   </ul>","</div>"].join(""));return b},enableInterface:function(){this.parent.enableInterface.apply(this,arguments)&&this.focusser.prop("disabled",!this.isInterfaceEnabled())},opening:function(){var c,d,e;this.opts.minimumResultsForSearch>=0&&this.showSearch(!0),this.parent.opening.apply(this,arguments),this.showSearchInput!==!1&&this.search.val(this.focusser.val()),this.opts.shouldFocusInput(this)&&(this.search.focus(),c=this.search.get(0),c.createTextRange?(d=c.createTextRange(),d.collapse(!1),d.select()):c.setSelectionRange&&(e=this.search.val().length,c.setSelectionRange(e,e))),""===this.search.val()&&this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.search.select()),this.focusser.prop("disabled",!0).val(""),this.updateResults(!0),this.opts.element.trigger(a.Event("select2-open"))},close:function(){this.opened()&&(this.parent.close.apply(this,arguments),this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus())},focus:function(){this.opened()?this.close():(this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus())},isFocused:function(){return this.container.hasClass("select2-container-active")},cancel:function(){this.parent.cancel.apply(this,arguments),this.focusser.prop("disabled",!1),this.opts.shouldFocusInput(this)&&this.focusser.focus()},destroy:function(){a("label[for='"+this.focusser.attr("id")+"']").attr("for",this.opts.element.attr("id")),this.parent.destroy.apply(this,arguments),N.call(this,"selection","focusser")},initContainer:function(){var b,h,d=this.container,e=this.dropdown,f=g();this.opts.minimumResultsForSearch<0?this.showSearch(!1):this.showSearch(!0),this.selection=b=d.find(".select2-choice"),this.focusser=d.find(".select2-focusser"),b.find(".select2-chosen").attr("id","select2-chosen-"+f),this.focusser.attr("aria-labelledby","select2-chosen-"+f),this.results.attr("id","select2-results-"+f),this.search.attr("aria-owns","select2-results-"+f),this.focusser.attr("id","s2id_autogen"+f),h=a("label[for='"+this.opts.element.attr("id")+"']"),this.focusser.prev().text(h.text()).attr("for",this.focusser.attr("id"));var i=this.opts.element.attr("title");this.opts.element.attr("title",i||h.text()),this.focusser.attr("tabindex",this.elementTabIndex),this.search.attr("id",this.focusser.attr("id")+"_search"),this.search.prev().text(a("label[for='"+this.focusser.attr("id")+"']").text()).attr("for",this.search.attr("id")),this.search.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()&&229!=a.keyCode){if(a.which===c.PAGE_UP||a.which===c.PAGE_DOWN)return A(a),void 0;switch(a.which){case c.UP:case c.DOWN:return this.moveHighlight(a.which===c.UP?-1:1),A(a),void 0;case c.ENTER:return this.selectHighlighted(),A(a),void 0;case c.TAB:return this.selectHighlighted({noFocus:!0}),void 0;case c.ESC:return this.cancel(a),A(a),void 0}}})),this.search.on("blur",this.bind(function(){document.activeElement===this.body.get(0)&&window.setTimeout(this.bind(function(){this.opened()&&this.search.focus()}),0)})),this.focusser.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()&&a.which!==c.TAB&&!c.isControl(a)&&!c.isFunctionKey(a)&&a.which!==c.ESC){if(this.opts.openOnEnter===!1&&a.which===c.ENTER)return A(a),void 0;if(a.which==c.DOWN||a.which==c.UP||a.which==c.ENTER&&this.opts.openOnEnter){if(a.altKey||a.ctrlKey||a.shiftKey||a.metaKey)return;return this.open(),A(a),void 0}return a.which==c.DELETE||a.which==c.BACKSPACE?(this.opts.allowClear&&this.clear(),A(a),void 0):void 0}})),u(this.focusser),this.focusser.on("keyup-change input",this.bind(function(a){if(this.opts.minimumResultsForSearch>=0){if(a.stopPropagation(),this.opened())return;this.open()}})),b.on("mousedown touchstart","abbr",this.bind(function(a){this.isInterfaceEnabled()&&(this.clear(),B(a),this.close(),this.selection.focus())})),b.on("mousedown touchstart",this.bind(function(c){n(b),this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.opened()?this.close():this.isInterfaceEnabled()&&this.open(),A(c)})),e.on("mousedown touchstart",this.bind(function(){this.opts.shouldFocusInput(this)&&this.search.focus()})),b.on("focus",this.bind(function(a){A(a)})),this.focusser.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active")})).on("blur",this.bind(function(){this.opened()||(this.container.removeClass("select2-container-active"),this.opts.element.trigger(a.Event("select2-blur")))})),this.search.on("focus",this.bind(function(){this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active")})),this.initContainerWidth(),this.opts.element.addClass("select2-offscreen"),this.setPlaceholder()},clear:function(b){var c=this.selection.data("select2-data");if(c){var d=a.Event("select2-clearing");if(this.opts.element.trigger(d),d.isDefaultPrevented())return;var e=this.getPlaceholderOption();this.opts.element.val(e?e.val():""),this.selection.find(".select2-chosen").empty(),this.selection.removeData("select2-data"),this.setPlaceholder(),b!==!1&&(this.opts.element.trigger({type:"select2-removed",val:this.id(c),choice:c}),this.triggerChange({removed:c}))}},initSelection:function(){if(this.isPlaceholderOptionSelected())this.updateSelection(null),this.close(),this.setPlaceholder();else{var c=this;this.opts.initSelection.call(null,this.opts.element,function(a){a!==b&&null!==a&&(c.updateSelection(a),c.close(),c.setPlaceholder(),c.nextSearchTerm=c.opts.nextSearchTerm(a,c.search.val()))})}},isPlaceholderOptionSelected:function(){var a;return this.getPlaceholder()===b?!1:(a=this.getPlaceholderOption())!==b&&a.prop("selected")||""===this.opts.element.val()||this.opts.element.val()===b||null===this.opts.element.val()},prepareOpts:function(){var b=this.parent.prepareOpts.apply(this,arguments),c=this;return"select"===b.element.get(0).tagName.toLowerCase()?b.initSelection=function(a,b){var d=a.find("option").filter(function(){return this.selected&&!this.disabled});b(c.optionToData(d))}:"data"in b&&(b.initSelection=b.initSelection||function(c,d){var e=c.val(),f=null;b.query({matcher:function(a,c,d){var g=r(e,b.id(d));return g&&(f=d),g},callback:a.isFunction(d)?function(){d(f)}:a.noop})}),b},getPlaceholder:function(){return this.select&&this.getPlaceholderOption()===b?b:this.parent.getPlaceholder.apply(this,arguments)},setPlaceholder:function(){var a=this.getPlaceholder();if(this.isPlaceholderOptionSelected()&&a!==b){if(this.select&&this.getPlaceholderOption()===b)return;this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(a)),this.selection.addClass("select2-default"),this.container.removeClass("select2-allowclear")}},postprocessResults:function(a,b,c){var d=0,e=this;if(this.findHighlightableChoices().each2(function(a,b){return r(e.id(b.data("select2-data")),e.opts.element.val())?(d=a,!1):void 0}),c!==!1&&(b===!0&&d>=0?this.highlight(d):this.highlight(0)),b===!0){var g=this.opts.minimumResultsForSearch;g>=0&&this.showSearch(L(a.results)>=g)}},showSearch:function(b){this.showSearchInput!==b&&(this.showSearchInput=b,this.dropdown.find(".select2-search").toggleClass("select2-search-hidden",!b),this.dropdown.find(".select2-search").toggleClass("select2-offscreen",!b),a(this.dropdown,this.container).toggleClass("select2-with-searchbox",b))},onSelect:function(a,b){if(this.triggerSelect(a)){var c=this.opts.element.val(),d=this.data();this.opts.element.val(this.id(a)),this.updateSelection(a),this.opts.element.trigger({type:"select2-selected",val:this.id(a),choice:a}),this.nextSearchTerm=this.opts.nextSearchTerm(a,this.search.val()),this.close(),b&&b.noFocus||!this.opts.shouldFocusInput(this)||this.focusser.focus(),r(c,this.id(a))||this.triggerChange({added:a,removed:d})}},updateSelection:function(a){var d,e,c=this.selection.find(".select2-chosen");this.selection.data("select2-data",a),c.empty(),null!==a&&(d=this.opts.formatSelection(a,c,this.opts.escapeMarkup)),d!==b&&c.append(d),e=this.opts.formatSelectionCssClass(a,c),e!==b&&c.addClass(e),this.selection.removeClass("select2-default"),this.opts.allowClear&&this.getPlaceholder()!==b&&this.container.addClass("select2-allowclear")},val:function(){var a,c=!1,d=null,e=this,f=this.data();if(0===arguments.length)return this.opts.element.val();if(a=arguments[0],arguments.length>1&&(c=arguments[1]),this.select)this.select.val(a).find("option").filter(function(){return this.selected}).each2(function(a,b){return d=e.optionToData(b),!1}),this.updateSelection(d),this.setPlaceholder(),c&&this.triggerChange({added:d,removed:f});else{if(!a&&0!==a)return this.clear(c),void 0;if(this.opts.initSelection===b)throw new Error("cannot call val() if initSelection() is not defined");this.opts.element.val(a),this.opts.initSelection(this.opts.element,function(a){e.opts.element.val(a?e.id(a):""),e.updateSelection(a),e.setPlaceholder(),c&&e.triggerChange({added:a,removed:f})})}},clearSearch:function(){this.search.val(""),this.focusser.val("")},data:function(a){var c,d=!1;return 0===arguments.length?(c=this.selection.data("select2-data"),c==b&&(c=null),c):(arguments.length>1&&(d=arguments[1]),a?(c=this.data(),this.opts.element.val(a?this.id(a):""),this.updateSelection(a),d&&this.triggerChange({added:a,removed:c})):this.clear(d),void 0)}}),f=O(d,{createContainer:function(){var b=a(document.createElement("div")).attr({"class":"select2-container select2-container-multi"}).html(["<ul class='select2-choices'>","  <li class='select2-search-field'>","    <label for='' class='select2-offscreen'></label>","    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>","  </li>","</ul>","<div class='select2-drop select2-drop-multi select2-display-none'>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return b},prepareOpts:function(){var b=this.parent.prepareOpts.apply(this,arguments),c=this;return"select"===b.element.get(0).tagName.toLowerCase()?b.initSelection=function(a,b){var d=[];a.find("option").filter(function(){return this.selected&&!this.disabled}).each2(function(a,b){d.push(c.optionToData(b))}),b(d)}:"data"in b&&(b.initSelection=b.initSelection||function(c,d){var e=s(c.val(),b.separator),f=[];b.query({matcher:function(c,d,g){var h=a.grep(e,function(a){return r(a,b.id(g))}).length;return h&&f.push(g),h},callback:a.isFunction(d)?function(){for(var a=[],c=0;c<e.length;c++)for(var g=e[c],h=0;h<f.length;h++){var i=f[h];if(r(g,b.id(i))){a.push(i),f.splice(h,1);break}}d(a)}:a.noop})}),b},selectChoice:function(a){var b=this.container.find(".select2-search-choice-focus");b.length&&a&&a[0]==b[0]||(b.length&&this.opts.element.trigger("choice-deselected",b),b.removeClass("select2-search-choice-focus"),a&&a.length&&(this.close(),a.addClass("select2-search-choice-focus"),this.opts.element.trigger("choice-selected",a)))},destroy:function(){a("label[for='"+this.search.attr("id")+"']").attr("for",this.opts.element.attr("id")),this.parent.destroy.apply(this,arguments),N.call(this,"searchContainer","selection")},initContainer:function(){var d,b=".select2-choices";this.searchContainer=this.container.find(".select2-search-field"),this.selection=d=this.container.find(b);var e=this;this.selection.on("click",".select2-search-choice:not(.select2-locked)",function(){e.search[0].focus(),e.selectChoice(a(this))}),this.search.attr("id","s2id_autogen"+g()),this.search.prev().text(a("label[for='"+this.opts.element.attr("id")+"']").text()).attr("for",this.search.attr("id")),this.search.on("input paste",this.bind(function(){this.search.attr("placeholder")&&0==this.search.val().length||this.isInterfaceEnabled()&&(this.opened()||this.open())})),this.search.attr("tabindex",this.elementTabIndex),this.keydowns=0,this.search.on("keydown",this.bind(function(a){if(this.isInterfaceEnabled()){++this.keydowns;var b=d.find(".select2-search-choice-focus"),e=b.prev(".select2-search-choice:not(.select2-locked)"),f=b.next(".select2-search-choice:not(.select2-locked)"),g=z(this.search);if(b.length&&(a.which==c.LEFT||a.which==c.RIGHT||a.which==c.BACKSPACE||a.which==c.DELETE||a.which==c.ENTER)){var h=b;return a.which==c.LEFT&&e.length?h=e:a.which==c.RIGHT?h=f.length?f:null:a.which===c.BACKSPACE?this.unselect(b.first())&&(this.search.width(10),h=e.length?e:f):a.which==c.DELETE?this.unselect(b.first())&&(this.search.width(10),h=f.length?f:null):a.which==c.ENTER&&(h=null),this.selectChoice(h),A(a),h&&h.length||this.open(),void 0}if((a.which===c.BACKSPACE&&1==this.keydowns||a.which==c.LEFT)&&0==g.offset&&!g.length)return this.selectChoice(d.find(".select2-search-choice:not(.select2-locked)").last()),A(a),void 0;if(this.selectChoice(null),this.opened())switch(a.which){case c.UP:case c.DOWN:return this.moveHighlight(a.which===c.UP?-1:1),A(a),void 0;case c.ENTER:return this.selectHighlighted(),A(a),void 0;case c.TAB:return this.selectHighlighted({noFocus:!0}),this.close(),void 0;case c.ESC:return this.cancel(a),A(a),void 0}if(a.which!==c.TAB&&!c.isControl(a)&&!c.isFunctionKey(a)&&a.which!==c.BACKSPACE&&a.which!==c.ESC){if(a.which===c.ENTER){if(this.opts.openOnEnter===!1)return;if(a.altKey||a.ctrlKey||a.shiftKey||a.metaKey)return}this.open(),(a.which===c.PAGE_UP||a.which===c.PAGE_DOWN)&&A(a),a.which===c.ENTER&&A(a)}}})),this.search.on("keyup",this.bind(function(){this.keydowns=0,this.resizeSearch()})),this.search.on("blur",this.bind(function(b){this.container.removeClass("select2-container-active"),this.search.removeClass("select2-focused"),this.selectChoice(null),this.opened()||this.clearSearch(),b.stopImmediatePropagation(),this.opts.element.trigger(a.Event("select2-blur"))})),this.container.on("click",b,this.bind(function(b){this.isInterfaceEnabled()&&(a(b.target).closest(".select2-search-choice").length>0||(this.selectChoice(null),this.clearPlaceholder(),this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.open(),this.focusSearch(),b.preventDefault()))})),this.container.on("focus",b,this.bind(function(){this.isInterfaceEnabled()&&(this.container.hasClass("select2-container-active")||this.opts.element.trigger(a.Event("select2-focus")),this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"),this.clearPlaceholder())})),this.initContainerWidth(),this.opts.element.addClass("select2-offscreen"),this.clearSearch()},enableInterface:function(){this.parent.enableInterface.apply(this,arguments)&&this.search.prop("disabled",!this.isInterfaceEnabled())},initSelection:function(){if(""===this.opts.element.val()&&""===this.opts.element.text()&&(this.updateSelection([]),this.close(),this.clearSearch()),this.select||""!==this.opts.element.val()){var c=this;this.opts.initSelection.call(null,this.opts.element,function(a){a!==b&&null!==a&&(c.updateSelection(a),c.close(),c.clearSearch())})}},clearSearch:function(){var a=this.getPlaceholder(),c=this.getMaxSearchWidth();a!==b&&0===this.getVal().length&&this.search.hasClass("select2-focused")===!1?(this.search.val(a).addClass("select2-default"),this.search.width(c>0?c:this.container.css("width"))):this.search.val("").width(10)},clearPlaceholder:function(){this.search.hasClass("select2-default")&&this.search.val("").removeClass("select2-default")},opening:function(){this.clearPlaceholder(),this.resizeSearch(),this.parent.opening.apply(this,arguments),this.focusSearch(),""===this.search.val()&&this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.search.select()),this.updateResults(!0),this.opts.shouldFocusInput(this)&&this.search.focus(),this.opts.element.trigger(a.Event("select2-open"))},close:function(){this.opened()&&this.parent.close.apply(this,arguments)},focus:function(){this.close(),this.search.focus()},isFocused:function(){return this.search.hasClass("select2-focused")},updateSelection:function(b){var c=[],d=[],e=this;a(b).each(function(){p(e.id(this),c)<0&&(c.push(e.id(this)),d.push(this))}),b=d,this.selection.find(".select2-search-choice").remove(),a(b).each(function(){e.addSelectedChoice(this)}),e.postprocessResults()},tokenize:function(){var a=this.search.val();a=this.opts.tokenizer.call(this,a,this.data(),this.bind(this.onSelect),this.opts),null!=a&&a!=b&&(this.search.val(a),a.length>0&&this.open())},onSelect:function(a,c){this.triggerSelect(a)&&""!==a.text&&(this.addSelectedChoice(a),this.opts.element.trigger({type:"selected",val:this.id(a),choice:a}),this.nextSearchTerm=this.opts.nextSearchTerm(a,this.search.val()),this.clearSearch(),this.updateResults(),(this.select||!this.opts.closeOnSelect)&&this.postprocessResults(a,!1,this.opts.closeOnSelect===!0),this.opts.closeOnSelect?(this.close(),this.search.width(10)):this.countSelectableResults()>0?(this.search.width(10),this.resizeSearch(),this.getMaximumSelectionSize()>0&&this.val().length>=this.getMaximumSelectionSize()?this.updateResults(!0):this.nextSearchTerm!=b&&(this.search.val(this.nextSearchTerm),this.updateResults(),this.search.select()),this.positionDropdown()):(this.close(),this.search.width(10)),this.triggerChange({added:a}),c&&c.noFocus||this.focusSearch())},cancel:function(){this.close(),this.focusSearch()},addSelectedChoice:function(c){var j,k,d=!c.locked,e=a("<li class='select2-search-choice'>    <div></div>    <a href='#' class='select2-search-choice-close' tabindex='-1'></a></li>"),f=a("<li class='select2-search-choice select2-locked'><div></div></li>"),g=d?e:f,h=this.id(c),i=this.getVal();j=this.opts.formatSelection(c,g.find("div"),this.opts.escapeMarkup),j!=b&&g.find("div").replaceWith("<div>"+j+"</div>"),k=this.opts.formatSelectionCssClass(c,g.find("div")),k!=b&&g.addClass(k),d&&g.find(".select2-search-choice-close").on("mousedown",A).on("click dblclick",this.bind(function(b){this.isInterfaceEnabled()&&(this.unselect(a(b.target)),this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"),A(b),this.close(),this.focusSearch())})).on("focus",this.bind(function(){this.isInterfaceEnabled()&&(this.container.addClass("select2-container-active"),this.dropdown.addClass("select2-drop-active"))})),g.data("select2-data",c),g.insertBefore(this.searchContainer),i.push(h),this.setVal(i)},unselect:function(b){var d,e,c=this.getVal();if(b=b.closest(".select2-search-choice"),0===b.length)throw"Invalid argument: "+b+". Must be .select2-search-choice";if(d=b.data("select2-data")){var f=a.Event("select2-removing");if(f.val=this.id(d),f.choice=d,this.opts.element.trigger(f),f.isDefaultPrevented())return!1;for(;(e=p(this.id(d),c))>=0;)c.splice(e,1),this.setVal(c),this.select&&this.postprocessResults();return b.remove(),this.opts.element.trigger({type:"select2-removed",val:this.id(d),choice:d}),this.triggerChange({removed:d}),!0}},postprocessResults:function(a,b,c){var d=this.getVal(),e=this.results.find(".select2-result"),f=this.results.find(".select2-result-with-children"),g=this;e.each2(function(a,b){var c=g.id(b.data("select2-data"));p(c,d)>=0&&(b.addClass("select2-selected"),b.find(".select2-result-selectable").addClass("select2-selected"))}),f.each2(function(a,b){b.is(".select2-result-selectable")||0!==b.find(".select2-result-selectable:not(.select2-selected)").length||b.addClass("select2-selected")}),-1==this.highlight()&&c!==!1&&g.highlight(0),!this.opts.createSearchChoice&&!e.filter(".select2-result:not(.select2-selected)").length>0&&(!a||a&&!a.more&&0===this.results.find(".select2-no-results").length)&&J(g.opts.formatNoMatches,"formatNoMatches")&&this.results.append("<li class='select2-no-results'>"+K(g.opts.formatNoMatches,g.opts.element,g.search.val())+"</li>")},getMaxSearchWidth:function(){return this.selection.width()-t(this.search)},resizeSearch:function(){var a,b,c,d,e,f=t(this.search);a=C(this.search)+10,b=this.search.offset().left,c=this.selection.width(),d=this.selection.offset().left,e=c-(b-d)-f,a>e&&(e=c-f),40>e&&(e=c-f),0>=e&&(e=a),this.search.width(Math.floor(e))},getVal:function(){var a;return this.select?(a=this.select.val(),null===a?[]:a):(a=this.opts.element.val(),s(a,this.opts.separator))},setVal:function(b){var c;this.select?this.select.val(b):(c=[],a(b).each(function(){p(this,c)<0&&c.push(this)}),this.opts.element.val(0===c.length?"":c.join(this.opts.separator)))},buildChangeDetails:function(a,b){for(var b=b.slice(0),a=a.slice(0),c=0;c<b.length;c++)for(var d=0;d<a.length;d++)r(this.opts.id(b[c]),this.opts.id(a[d]))&&(b.splice(c,1),c>0&&c--,a.splice(d,1),d--);return{added:b,removed:a}},val:function(c,d){var e,f=this;if(0===arguments.length)return this.getVal();if(e=this.data(),e.length||(e=[]),!c&&0!==c)return this.opts.element.val(""),this.updateSelection([]),this.clearSearch(),d&&this.triggerChange({added:this.data(),removed:e}),void 0;if(this.setVal(c),this.select)this.opts.initSelection(this.select,this.bind(this.updateSelection)),d&&this.triggerChange(this.buildChangeDetails(e,this.data()));else{if(this.opts.initSelection===b)throw new Error("val() cannot be called if initSelection() is not defined");this.opts.initSelection(this.opts.element,function(b){var c=a.map(b,f.id);f.setVal(c),f.updateSelection(b),f.clearSearch(),d&&f.triggerChange(f.buildChangeDetails(e,f.data()))})}this.clearSearch()},onSortStart:function(){if(this.select)throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");this.search.width(0),this.searchContainer.hide()},onSortEnd:function(){var b=[],c=this;this.searchContainer.show(),this.searchContainer.appendTo(this.searchContainer.parent()),this.resizeSearch(),this.selection.find(".select2-search-choice").each(function(){b.push(c.opts.id(a(this).data("select2-data")))}),this.setVal(b),this.triggerChange()},data:function(b,c){var e,f,d=this;return 0===arguments.length?this.selection.children(".select2-search-choice").map(function(){return a(this).data("select2-data")}).get():(f=this.data(),b||(b=[]),e=a.map(b,function(a){return d.opts.id(a)}),this.setVal(e),this.updateSelection(b),this.clearSearch(),c&&this.triggerChange(this.buildChangeDetails(f,this.data())),void 0)}}),a.fn.select2=function(){var d,e,f,g,h,c=Array.prototype.slice.call(arguments,0),i=["val","destroy","opened","open","close","focus","isFocused","container","dropdown","onSortStart","onSortEnd","enable","disable","readonly","positionDropdown","data","search"],j=["opened","isFocused","container","dropdown"],k=["val","data"],l={search:"externalSearch"};return this.each(function(){if(0===c.length||"object"==typeof c[0])d=0===c.length?{}:a.extend({},c[0]),d.element=a(this),"select"===d.element.get(0).tagName.toLowerCase()?h=d.element.prop("multiple"):(h=d.multiple||!1,"tags"in d&&(d.multiple=h=!0)),e=h?new window.Select2["class"].multi:new window.Select2["class"].single,e.init(d);else{if("string"!=typeof c[0])throw"Invalid arguments to select2 plugin: "+c;if(p(c[0],i)<0)throw"Unknown method: "+c[0];if(g=b,e=a(this).data("select2"),e===b)return;if(f=c[0],"container"===f?g=e.container:"dropdown"===f?g=e.dropdown:(l[f]&&(f=l[f]),g=e[f].apply(e,c.slice(1))),p(c[0],j)>=0||p(c[0],k)>=0&&1==c.length)return!1}}),g===b?this:g},a.fn.select2.defaults={width:"copy",loadMorePadding:0,closeOnSelect:!0,openOnEnter:!0,containerCss:{},dropdownCss:{},containerCssClass:"",dropdownCssClass:"",formatResult:function(a,b,c,d){var e=[];return E(a.text,c.term,e,d),e.join("")},formatSelection:function(a,c,d){return a?d(a.text):b},sortResults:function(a){return a},formatResultCssClass:function(a){return a.css},formatSelectionCssClass:function(){return b},minimumResultsForSearch:0,minimumInputLength:0,maximumInputLength:null,maximumSelectionSize:0,id:function(a){return a==b?null:a.id},matcher:function(a,b){return o(""+b).toUpperCase().indexOf(o(""+a).toUpperCase())>=0},separator:",",tokenSeparators:[],tokenizer:M,escapeMarkup:F,blurOnChange:!1,selectOnBlur:!1,adaptContainerCssClass:function(a){return a},adaptDropdownCssClass:function(){return null},nextSearchTerm:function(){return b},searchInputPlaceholder:"",createSearchChoicePosition:"top",shouldFocusInput:function(a){var b="ontouchstart"in window||navigator.msMaxTouchPoints>0;return b?a.opts.minimumResultsForSearch<0?!1:!0:!0}},a.fn.select2.locales=[],a.fn.select2.locales.en={formatMatches:function(a){return 1===a?"One result is available, press enter to select it.":a+" results are available, use up and down arrow keys to navigate."
},formatNoMatches:function(){return"No matches found"},formatAjaxError:function(){return"Loading failed"},formatInputTooShort:function(a,b){var c=b-a.length;return"Please enter "+c+" or more character"+(1==c?"":"s")},formatInputTooLong:function(a,b){var c=a.length-b;return"Please delete "+c+" character"+(1==c?"":"s")},formatSelectionTooBig:function(a){return"You can only select "+a+" item"+(1==a?"":"s")},formatLoadMore:function(){return"Loading more results\u2026"},formatSearching:function(){return"Searching\u2026"}},a.extend(a.fn.select2.defaults,a.fn.select2.locales.en),a.fn.select2.ajaxDefaults={transport:a.ajax,params:{type:"GET",cache:!1,dataType:"json"}},window.Select2={query:{ajax:G,local:H,tags:I},util:{debounce:w,markMatch:E,escapeMarkup:F,stripDiacritics:o},"class":{"abstract":d,single:e,multi:f}}}}(jQuery);;
/*
 * This function is get from "http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"
 */

(function () {
    var h, k = this, l = function (a) { return void 0 !== a }, ba = function () { }, n = function (a) {
        var b = typeof a; if ("object" == b) if (a) {
            if (a instanceof Array) return "array"; if (a instanceof Object) return b; var c = Object.prototype.toString.call(a); if ("[object Window]" == c) return "object"; if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array"; if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable &&
            !a.propertyIsEnumerable("call")) return "function"
        } else return "null"; else if ("function" == b && "undefined" == typeof a.call) return "object"; return b
    }, p = function (a) { return "array" == n(a) }, ca = function (a) { var b = n(a); return "array" == b || "object" == b && "number" == typeof a.length }, q = function (a) { return "string" == typeof a }, r = function (a) { return "function" == n(a) }, da = function (a) { var b = typeof a; return "object" == b && null != a || "function" == b }, ea = function (a, b, c) { return a.call.apply(a.bind, arguments) }, fa = function (a, b, c) {
        if (!a) throw Error();
        if (2 < arguments.length) { var d = Array.prototype.slice.call(arguments, 2); return function () { var c = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(c, d); return a.apply(b, c) } } return function () { return a.apply(b, arguments) }
    }, t = function (a, b, c) { t = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? ea : fa; return t.apply(null, arguments) }, ga = function (a, b) {
        var c = Array.prototype.slice.call(arguments, 1); return function () {
            var b = c.slice(); b.push.apply(b, arguments);
            return a.apply(this, b)
        }
    }, ha = Date.now || function () { return +new Date }, ia = null, u = function (a, b) { var c = a.split("."), d = k; c[0] in d || !d.execScript || d.execScript("var " + c[0]); for (var e; c.length && (e = c.shift()) ;) !c.length && l(b) ? d[e] = b : d = d[e] ? d[e] : d[e] = {} }, v = function (a, b) { function c() { } c.prototype = b.prototype; a.superClass_ = b.prototype; a.prototype = new c; a.base = function (a, c, g) { for (var f = Array(arguments.length - 2), m = 2; m < arguments.length; m++) f[m - 2] = arguments[m]; return b.prototype[c].apply(a, f) } };
    Function.prototype.bind = Function.prototype.bind || function (a, b) { if (1 < arguments.length) { var c = Array.prototype.slice.call(arguments, 1); c.unshift(this, a); return t.apply(null, c) } return t(this, a) }; var w = {}; u("RecaptchaTemplates", w); w.VertHtml = '<table id="recaptcha_table" class="recaptchatable" > <tr> <td colspan="6" class=\'recaptcha_r1_c1\'></td> </tr> <tr> <td class=\'recaptcha_r2_c1\'></td> <td colspan="4" class=\'recaptcha_image_cell\'><center><div id="recaptcha_image"></div></center></td> <td class=\'recaptcha_r2_c2\'></td> </tr> <tr> <td rowspan="6" class=\'recaptcha_r3_c1\'></td> <td colspan="4" class=\'recaptcha_r3_c2\'></td> <td rowspan="6" class=\'recaptcha_r3_c3\'></td> </tr> <tr> <td rowspan="3" class=\'recaptcha_r4_c1\' height="49"> <div class="recaptcha_input_area"> <input name="recaptcha_response_field" id="recaptcha_response_field" type="text" autocorrect="off" autocapitalize="off" placeholder="" /> <span id="recaptcha_privacy" class="recaptcha_only_if_privacy"></span> </div> </td> <td rowspan="4" class=\'recaptcha_r4_c2\'></td> <td><a id=\'recaptcha_reload_btn\'><img id=\'recaptcha_reload\' width="25" height="17" /></a></td> <td rowspan="4" class=\'recaptcha_r4_c4\'></td> </tr> <tr> <td><a id=\'recaptcha_switch_audio_btn\' class="recaptcha_only_if_image"><img id=\'recaptcha_switch_audio\' width="25" height="16" alt="" /></a><a id=\'recaptcha_switch_img_btn\' class="recaptcha_only_if_audio"><img id=\'recaptcha_switch_img\' width="25" height="16" alt=""/></a></td> </tr> <tr> <td><a id=\'recaptcha_whatsthis_btn\'><img id=\'recaptcha_whatsthis\' width="25" height="16" /></a></td> </tr> <tr> <td class=\'recaptcha_r7_c1\'></td> <td class=\'recaptcha_r8_c1\'></td> </tr> </table> '; w.CleanCss = ".recaptchatable td img{display:block}.recaptchatable .recaptcha_image_cell center img{height:57px}.recaptchatable .recaptcha_image_cell center{height:57px}.recaptchatable .recaptcha_image_cell{background-color:white;height:57px;padding:7px!important}.recaptchatable,#recaptcha_area tr,#recaptcha_area td,#recaptcha_area th{margin:0!important;border:0!important;border-collapse:collapse!important;vertical-align:middle!important}.recaptchatable *{margin:0;padding:0;border:0;color:black;position:static;top:auto;left:auto;right:auto;bottom:auto}.recaptchatable #recaptcha_image{position:relative;margin:auto;border:1px solid #dfdfdf!important}.recaptchatable #recaptcha_image #recaptcha_challenge_image{display:block}.recaptchatable #recaptcha_image #recaptcha_ad_image{display:block;position:absolute;top:0}.recaptchatable a img{border:0}.recaptchatable a,.recaptchatable a:hover{cursor:pointer;outline:none;border:0!important;padding:0!important;text-decoration:none;color:blue;background:none!important;font-weight:normal}.recaptcha_input_area{position:relative!important;background:none!important}.recaptchatable label.recaptcha_input_area_text{border:1px solid #dfdfdf!important;margin:0!important;padding:0!important;position:static!important;top:auto!important;left:auto!important;right:auto!important;bottom:auto!important}.recaptcha_theme_red label.recaptcha_input_area_text,.recaptcha_theme_white label.recaptcha_input_area_text{color:black!important}.recaptcha_theme_blackglass label.recaptcha_input_area_text{color:white!important}.recaptchatable #recaptcha_response_field{font-size:11pt}.recaptcha_theme_blackglass #recaptcha_response_field,.recaptcha_theme_white #recaptcha_response_field{border:1px solid gray}.recaptcha_theme_red #recaptcha_response_field{border:1px solid #cca940}.recaptcha_audio_cant_hear_link{font-size:7pt;color:black}.recaptchatable{line-height:1em;border:1px solid #dfdfdf!important}.recaptcha_error_text{color:red}.recaptcha_only_if_privacy{float:right;text-align:right;margin-right:7px}#recaptcha-ad-choices{position:absolute;height:15px;top:0;right:0}#recaptcha-ad-choices img{height:15px}.recaptcha-ad-choices-collapsed{width:30px;height:15px;display:block}.recaptcha-ad-choices-expanded{width:75px;height:15px;display:none}#recaptcha-ad-choices:hover .recaptcha-ad-choices-collapsed{display:none}#recaptcha-ad-choices:hover .recaptcha-ad-choices-expanded{display:block}"; w.CleanHtml = '<table id="recaptcha_table" class="recaptchatable"> <tr height="73"> <td class=\'recaptcha_image_cell\' width="302"><center><div id="recaptcha_image"></div></center></td> <td style="padding: 10px 7px 7px 7px;"> <a id=\'recaptcha_reload_btn\'><img id=\'recaptcha_reload\' width="25" height="18" alt="" /></a> <a id=\'recaptcha_switch_audio_btn\' class="recaptcha_only_if_image"><img id=\'recaptcha_switch_audio\' width="25" height="15" alt="" /></a><a id=\'recaptcha_switch_img_btn\' class="recaptcha_only_if_audio"><img id=\'recaptcha_switch_img\' width="25" height="15" alt=""/></a> <a id=\'recaptcha_whatsthis_btn\'><img id=\'recaptcha_whatsthis\' width="25" height="16" /></a> </td> <td style="padding: 18px 7px 18px 7px;"> <img id=\'recaptcha_logo\' alt="" width="71" height="36" /> </td> </tr> <tr> <td style="padding-left: 7px;"> <div class="recaptcha_input_area" style="padding-top: 2px; padding-bottom: 7px;"> <input style="border: 1px solid #3c3c3c; width: 302px;" name="recaptcha_response_field" id="recaptcha_response_field" type="text" /> </div> </td> <td colspan=2><span id="recaptcha_privacy" class="recaptcha_only_if_privacy"></span></td> </tr> </table> '; w.VertCss = ".recaptchatable td img{display:block}.recaptchatable .recaptcha_r1_c1{background:url('IMGROOT/sprite.png') 0 -63px no-repeat;width:318px;height:9px}.recaptchatable .recaptcha_r2_c1{background:url('IMGROOT/sprite.png') -18px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r2_c2{background:url('IMGROOT/sprite.png') -27px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r3_c1{background:url('IMGROOT/sprite.png') 0 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r3_c2{background:url('IMGROOT/sprite.png') -18px -57px no-repeat;width:300px;height:6px}.recaptchatable .recaptcha_r3_c3{background:url('IMGROOT/sprite.png') -9px 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r4_c1{background:url('IMGROOT/sprite.png') -43px 0 no-repeat;width:171px;height:49px}.recaptchatable .recaptcha_r4_c2{background:url('IMGROOT/sprite.png') -36px 0 no-repeat;width:7px;height:57px}.recaptchatable .recaptcha_r4_c4{background:url('IMGROOT/sprite.png') -214px 0 no-repeat;width:97px;height:57px}.recaptchatable .recaptcha_r7_c1{background:url('IMGROOT/sprite.png') -43px -49px no-repeat;width:171px;height:8px}.recaptchatable .recaptcha_r8_c1{background:url('IMGROOT/sprite.png') -43px -49px no-repeat;width:25px;height:8px}.recaptchatable .recaptcha_image_cell center img{height:57px}.recaptchatable .recaptcha_image_cell center{height:57px}.recaptchatable .recaptcha_image_cell{background-color:white;height:57px}#recaptcha_area,#recaptcha_table{width:318px!important}.recaptchatable,#recaptcha_area tr,#recaptcha_area td,#recaptcha_area th{margin:0!important;border:0!important;padding:0!important;border-collapse:collapse!important;vertical-align:middle!important}.recaptchatable *{margin:0;padding:0;border:0;font-family:helvetica,sans-serif;font-size:8pt;color:black;position:static;top:auto;left:auto;right:auto;bottom:auto}.recaptchatable #recaptcha_image{position:relative;margin:auto}.recaptchatable #recaptcha_image #recaptcha_challenge_image{display:block}.recaptchatable #recaptcha_image #recaptcha_ad_image{display:block;position:absolute;top:0}.recaptchatable img{border:0!important;margin:0!important;padding:0!important}.recaptchatable a,.recaptchatable a:hover{cursor:pointer;outline:none;border:0!important;padding:0!important;text-decoration:none;color:blue;background:none!important;font-weight:normal}.recaptcha_input_area{position:relative!important;width:153px!important;height:45px!important;margin-left:7px!important;margin-right:7px!important;background:none!important}.recaptchatable label.recaptcha_input_area_text{margin:0!important;padding:0!important;position:static!important;top:auto!important;left:auto!important;right:auto!important;bottom:auto!important;background:none!important;height:auto!important;width:auto!important}.recaptcha_theme_red label.recaptcha_input_area_text,.recaptcha_theme_white label.recaptcha_input_area_text{color:black!important}.recaptcha_theme_blackglass label.recaptcha_input_area_text{color:white!important}.recaptchatable #recaptcha_response_field{width:153px!important;position:relative!important;bottom:7px!important;padding:0!important;margin:15px 0 0 0!important;font-size:10pt}.recaptcha_theme_blackglass #recaptcha_response_field,.recaptcha_theme_white #recaptcha_response_field{border:1px solid gray}.recaptcha_theme_red #recaptcha_response_field{border:1px solid #cca940}.recaptcha_audio_cant_hear_link{font-size:7pt;color:black}.recaptchatable{line-height:1!important}#recaptcha_instructions_error{color:red!important}.recaptcha_only_if_privacy{float:right;text-align:right}#recaptcha-ad-choices{position:absolute;height:15px;top:0;right:0}#recaptcha-ad-choices img{height:15px}.recaptcha-ad-choices-collapsed{width:30px;height:15px;display:block}.recaptcha-ad-choices-expanded{width:75px;height:15px;display:none}#recaptcha-ad-choices:hover .recaptcha-ad-choices-collapsed{display:none}#recaptcha-ad-choices:hover .recaptcha-ad-choices-expanded{display:block}"; var x = { visual_challenge: "Get a visual challenge", audio_challenge: "Get an audio challenge", refresh_btn: "Get a new challenge", instructions_visual: "Type the text:", instructions_audio: "Type what you hear:", help_btn: "Help", play_again: "Play sound again", cant_hear_this: "Download sound as MP3", incorrect_try_again: "Incorrect. Try again.", image_alt_text: "reCAPTCHA challenge image", privacy_and_terms: "Privacy & Terms" }, ja = {
        visual_challenge: "\u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u062f\u064d \u0645\u0631\u0626\u064a",
        audio_challenge: "\u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u062f\u064d \u0635\u0648\u062a\u064a", refresh_btn: "\u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u062f\u064d \u062c\u062f\u064a\u062f", instructions_visual: "\u064a\u0631\u062c\u0649 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0646\u0635:", instructions_audio: "\u0627\u0643\u062a\u0628 \u0645\u0627 \u062a\u0633\u0645\u0639\u0647:", help_btn: "\u0645\u0633\u0627\u0639\u062f\u0629", play_again: "\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0645\u0631\u0629 \u0623\u062e\u0631\u0649",
        cant_hear_this: "\u062a\u0646\u0632\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0628\u062a\u0646\u0633\u064a\u0642 MP3", incorrect_try_again: "\u063a\u064a\u0631 \u0635\u062d\u064a\u062d. \u0623\u0639\u062f \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629.", image_alt_text: "\u0635\u0648\u0631\u0629 \u0627\u0644\u062a\u062d\u062f\u064a \u0645\u0646 reCAPTCHA", privacy_and_terms: "\u0627\u0644\u062e\u0635\u0648\u0635\u064a\u0629 \u0648\u0627\u0644\u0628\u0646\u0648\u062f"
    }, ka = {
        visual_challenge: "Obtener una pista visual",
        audio_challenge: "Obtener una pista sonora", refresh_btn: "Obtener una pista nueva", instructions_visual: "Introduzca el texto:", instructions_audio: "Escribe lo que oigas:", help_btn: "Ayuda", play_again: "Volver a reproducir el sonido", cant_hear_this: "Descargar el sonido en MP3", incorrect_try_again: "Incorrecto. Vu\u00e9lvelo a intentar.", image_alt_text: "Pista de imagen reCAPTCHA", privacy_and_terms: "Privacidad y condiciones"
    }, la = {
        visual_challenge: "Kumuha ng pagsubok na visual", audio_challenge: "Kumuha ng pagsubok na audio",
        refresh_btn: "Kumuha ng bagong pagsubok", instructions_visual: "I-type ang teksto:", instructions_audio: "I-type ang iyong narinig", help_btn: "Tulong", play_again: "I-play muli ang tunog", cant_hear_this: "I-download ang tunog bilang MP3", incorrect_try_again: "Hindi wasto. Muling subukan.", image_alt_text: "larawang panghamon ng reCAPTCHA", privacy_and_terms: "Privacy at Mga Tuntunin"
    }, ma = {
        visual_challenge: "Test visuel", audio_challenge: "Test audio", refresh_btn: "Nouveau test", instructions_visual: "Saisissez le texte\u00a0:",
        instructions_audio: "Qu'entendez-vous ?", help_btn: "Aide", play_again: "R\u00e9\u00e9couter", cant_hear_this: "T\u00e9l\u00e9charger l'audio au format MP3", incorrect_try_again: "Incorrect. Veuillez r\u00e9essayer.", image_alt_text: "Image reCAPTCHA", privacy_and_terms: "Confidentialit\u00e9 et conditions d'utilisation"
    }, na = {
        visual_challenge: "Dapatkan kata pengujian berbentuk visual", audio_challenge: "Dapatkan kata pengujian berbentuk audio", refresh_btn: "Dapatkan kata pengujian baru", instructions_visual: "Ketik teks:",
        instructions_audio: "Ketik yang Anda dengar:", help_btn: "Bantuan", play_again: "Putar suara sekali lagi", cant_hear_this: "Unduh suara sebagai MP3", incorrect_try_again: "Salah. Coba lagi.", image_alt_text: "Gambar tantangan reCAPTCHA", privacy_and_terms: "Privasi & Persyaratan"
    }, oa = {
        visual_challenge: "\u05e7\u05d1\u05dc \u05d0\u05ea\u05d2\u05e8 \u05d7\u05d6\u05d5\u05ea\u05d9", audio_challenge: "\u05e7\u05d1\u05dc \u05d0\u05ea\u05d2\u05e8 \u05e9\u05de\u05e2", refresh_btn: "\u05e7\u05d1\u05dc \u05d0\u05ea\u05d2\u05e8 \u05d7\u05d3\u05e9",
        instructions_visual: "\u05d4\u05e7\u05dc\u05d3 \u05d0\u05ea \u05d4\u05d8\u05e7\u05e1\u05d8:", instructions_audio: "\u05d4\u05e7\u05dc\u05d3 \u05d0\u05ea \u05de\u05d4 \u05e9\u05d0\u05ea\u05d4 \u05e9\u05d5\u05de\u05e2:", help_btn: "\u05e2\u05d6\u05e8\u05d4", play_again: "\u05d4\u05e4\u05e2\u05dc \u05e9\u05d5\u05d1 \u05d0\u05ea \u05d4\u05e9\u05de\u05e2", cant_hear_this: "\u05d4\u05d5\u05e8\u05d3 \u05e9\u05de\u05e2 \u05db-3MP", incorrect_try_again: "\u05e9\u05d2\u05d5\u05d9. \u05e0\u05e1\u05d4 \u05e9\u05d5\u05d1.",
        image_alt_text: "\u05ea\u05de\u05d5\u05e0\u05ea \u05d0\u05ea\u05d2\u05e8 \u05e9\u05dc reCAPTCHA", privacy_and_terms: "\u05e4\u05e8\u05d8\u05d9\u05d5\u05ea \u05d5\u05ea\u05e0\u05d0\u05d9\u05dd"
    }, pa = {
        visual_challenge: "Obter um desafio visual", audio_challenge: "Obter um desafio de \u00e1udio", refresh_btn: "Obter um novo desafio", instructions_visual: "Digite o texto:", instructions_audio: "Digite o que voc\u00ea ouve:", help_btn: "Ajuda", play_again: "Reproduzir som novamente", cant_hear_this: "Fazer download do som no formato MP3",
        incorrect_try_again: "Incorreto. Tente novamente.", image_alt_text: "Imagem de desafio reCAPTCHA", privacy_and_terms: "Privacidade e Termos"
    }, qa = {
        visual_challenge: "Ob\u0163ine\u0163i un cod captcha vizual", audio_challenge: "Ob\u0163ine\u0163i un cod captcha audio", refresh_btn: "Ob\u0163ine\u0163i un nou cod captcha", instructions_visual: "Introduce\u021bi textul:", instructions_audio: "Introduce\u0163i ceea ce auzi\u0163i:", help_btn: "Ajutor", play_again: "Reda\u0163i sunetul din nou", cant_hear_this: "Desc\u0103rca\u0163i fi\u015fierul audio ca MP3",
        incorrect_try_again: "Incorect. \u00cencerca\u0163i din nou.", image_alt_text: "Imagine de verificare reCAPTCHA", privacy_and_terms: "Confiden\u0163ialitate \u015fi termeni"
    }, ra = {
        visual_challenge: "\u6536\u5230\u4e00\u4e2a\u89c6\u9891\u9080\u8bf7", audio_challenge: "\u6362\u4e00\u7ec4\u97f3\u9891\u9a8c\u8bc1\u7801", refresh_btn: "\u6362\u4e00\u7ec4\u9a8c\u8bc1\u7801", instructions_visual: "\u8f93\u5165\u6587\u5b57\uff1a", instructions_audio: "\u8bf7\u952e\u5165\u60a8\u542c\u5230\u7684\u5185\u5bb9\uff1a", help_btn: "\u5e2e\u52a9",
        play_again: "\u91cd\u65b0\u64ad\u653e", cant_hear_this: "\u4ee5 MP3 \u683c\u5f0f\u4e0b\u8f7d\u58f0\u97f3", incorrect_try_again: "\u4e0d\u6b63\u786e\uff0c\u8bf7\u91cd\u8bd5\u3002", image_alt_text: "reCAPTCHA \u9a8c\u8bc1\u56fe\u7247", privacy_and_terms: "\u9690\u79c1\u6743\u548c\u4f7f\u7528\u6761\u6b3e"
    }, sa = {
        en: x, af: {
            visual_challenge: "Kry 'n visuele verifi\u00ebring", audio_challenge: "Kry 'n klankverifi\u00ebring", refresh_btn: "Kry 'n nuwe verifi\u00ebring", instructions_visual: "", instructions_audio: "Tik wat jy hoor:",
            help_btn: "Hulp", play_again: "Speel geluid weer", cant_hear_this: "Laai die klank af as MP3", incorrect_try_again: "Verkeerd. Probeer weer.", image_alt_text: "reCAPTCHA-uitdagingprent", privacy_and_terms: "Privaatheid en bepalings"
        }, am: {
            visual_challenge: "\u12e8\u12a5\u12ed\u1273 \u1270\u130b\u1323\u121a \u12a0\u130d\u129d", audio_challenge: "\u120c\u120b \u12a0\u12f2\u1235 \u12e8\u12f5\u121d\u133d \u1325\u12eb\u1244 \u12ed\u1245\u1228\u1265", refresh_btn: "\u120c\u120b \u12a0\u12f2\u1235 \u1325\u12eb\u1244 \u12ed\u1245\u1228\u1265",
            instructions_visual: "", instructions_audio: "\u12e8\u121d\u1275\u1230\u121b\u12cd\u1295 \u1270\u12ed\u1265\u1361-", help_btn: "\u12a5\u1308\u12db", play_again: "\u12f5\u121d\u1339\u1295 \u12a5\u1295\u12f0\u1308\u1293 \u12a0\u132b\u12cd\u1275", cant_hear_this: "\u12f5\u121d\u1339\u1295 \u1260MP3 \u1245\u122d\u133d \u12a0\u12cd\u122d\u12f5", incorrect_try_again: "\u1275\u12ad\u12ad\u120d \u12a0\u12ed\u12f0\u1208\u121d\u1362 \u12a5\u1295\u12f0\u1308\u1293 \u121e\u12ad\u122d\u1362", image_alt_text: "reCAPTCHA \u121d\u1235\u120d \u130d\u1320\u121d",
            privacy_and_terms: "\u130d\u120b\u12ca\u1290\u1275 \u12a5\u1293 \u12cd\u120d"
        }, ar: ja, "ar-EG": ja, bg: {
            visual_challenge: "\u041f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0432\u0438\u0437\u0443\u0430\u043b\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430", audio_challenge: "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u0430\u0443\u0434\u0438\u043e\u0442\u0435\u0441\u0442", refresh_btn: "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043d\u0435 \u043d\u0430 \u043d\u043e\u0432 \u0442\u0435\u0441\u0442",
            instructions_visual: "\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0442\u0435\u043a\u0441\u0442\u0430:", instructions_audio: "\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0447\u0443\u0442\u043e\u0442\u043e:", help_btn: "\u041f\u043e\u043c\u043e\u0449", play_again: "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u0443\u0441\u043a\u0430\u043d\u0435 \u043d\u0430 \u0437\u0432\u0443\u043a\u0430", cant_hear_this: "\u0418\u0437\u0442\u0435\u0433\u043b\u044f\u043d\u0435 \u043d\u0430 \u0437\u0432\u0443\u043a\u0430 \u0432\u044a\u0432 \u0444\u043e\u0440\u043c\u0430\u0442 MP3",
            incorrect_try_again: "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u043d\u043e. \u041e\u043f\u0438\u0442\u0430\u0439\u0442\u0435 \u043e\u0442\u043d\u043e\u0432\u043e.", image_alt_text: "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u0442\u0430 \u0441 reCAPTCHA", privacy_and_terms: "\u041f\u043e\u0432\u0435\u0440\u0438\u0442\u0435\u043b\u043d\u043e\u0441\u0442 \u0438 \u041e\u0431\u0449\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f"
        },
        bn: {
            visual_challenge: "\u098f\u0995\u099f\u09bf \u09a6\u09c3\u09b6\u09cd\u09af\u09ae\u09be\u09a8 \u09aa\u09cd\u09b0\u09a4\u09bf\u09a6\u09cd\u09ac\u09a8\u09cd\u09a6\u09cd\u09ac\u09bf\u09a4\u09be \u09aa\u09be\u09a8", audio_challenge: "\u098f\u0995\u099f\u09bf \u0985\u09a1\u09bf\u0993 \u09aa\u09cd\u09b0\u09a4\u09bf\u09a6\u09cd\u09ac\u09a8\u09cd\u09a6\u09cd\u09ac\u09bf\u09a4\u09be  \u09aa\u09be\u09a8", refresh_btn: "\u098f\u0995\u099f\u09bf \u09a8\u09a4\u09c1\u09a8 \u09aa\u09cd\u09b0\u09a4\u09bf\u09a6\u09cd\u09ac\u09a8\u09cd\u09a6\u09cd\u09ac\u09bf\u09a4\u09be  \u09aa\u09be\u09a8",
            instructions_visual: "", instructions_audio: "\u0986\u09aa\u09a8\u09bf \u09af\u09be \u09b6\u09c1\u09a8\u099b\u09c7\u09a8 \u09a4\u09be \u09b2\u09bf\u0996\u09c1\u09a8:", help_btn: "\u09b8\u09b9\u09be\u09df\u09a4\u09be", play_again: "\u0986\u09ac\u09be\u09b0 \u09b8\u09be\u0989\u09a8\u09cd\u09a1 \u09aa\u09cd\u09b2\u09c7 \u0995\u09b0\u09c1\u09a8", cant_hear_this: "MP3 \u09b0\u09c2\u09aa\u09c7 \u09b6\u09ac\u09cd\u09a6 \u09a1\u09be\u0989\u09a8\u09b2\u09cb\u09a1 \u0995\u09b0\u09c1\u09a8", incorrect_try_again: "\u09ac\u09c7\u09a0\u09bf\u0995\u09f7 \u0986\u09ac\u09be\u09b0 \u099a\u09c7\u09b7\u09cd\u099f\u09be \u0995\u09b0\u09c1\u09a8\u09f7",
            image_alt_text: "reCAPTCHA \u099a\u09cd\u09af\u09be\u09b2\u09c7\u099e\u09cd\u099c \u099a\u09bf\u09a4\u09cd\u09b0", privacy_and_terms: "\u0997\u09cb\u09aa\u09a8\u09c0\u09af\u09bc\u09a4\u09be \u0993 \u09b6\u09b0\u09cd\u09a4\u09be\u09ac\u09b2\u09c0"
        }, ca: {
            visual_challenge: "Obt\u00e9n un repte visual", audio_challenge: "Obteniu una pista sonora", refresh_btn: "Obteniu una pista nova", instructions_visual: "Escriviu el text:", instructions_audio: "Escriviu el que escolteu:", help_btn: "Ajuda", play_again: "Torna a reproduir el so",
            cant_hear_this: "Baixa el so com a MP3", incorrect_try_again: "No \u00e9s correcte. Torna-ho a provar.", image_alt_text: "Imatge del repte de reCAPTCHA", privacy_and_terms: "Privadesa i condicions"
        }, cs: {
            visual_challenge: "Zobrazit vizu\u00e1ln\u00ed podobu v\u00fdrazu", audio_challenge: "P\u0159ehr\u00e1t zvukovou podobu v\u00fdrazu", refresh_btn: "Zobrazit nov\u00fd v\u00fdraz", instructions_visual: "Zadejte text:", instructions_audio: "Napi\u0161te, co jste sly\u0161eli:", help_btn: "N\u00e1pov\u011bda", play_again: "Znovu p\u0159ehr\u00e1t zvuk",
            cant_hear_this: "St\u00e1hnout zvuk ve form\u00e1tu MP3", incorrect_try_again: "\u0160patn\u011b. Zkuste to znovu.", image_alt_text: "Obr\u00e1zek reCAPTCHA", privacy_and_terms: "Ochrana soukrom\u00ed a smluvn\u00ed podm\u00ednky"
        }, da: {
            visual_challenge: "Hent en visuel udfordring", audio_challenge: "Hent en lydudfordring", refresh_btn: "Hent en ny udfordring", instructions_visual: "Indtast teksten:", instructions_audio: "Indtast det, du h\u00f8rer:", help_btn: "Hj\u00e6lp", play_again: "Afspil lyden igen", cant_hear_this: "Download lyd som MP3",
            incorrect_try_again: "Forkert. Pr\u00f8v igen.", image_alt_text: "reCAPTCHA-udfordringsbillede", privacy_and_terms: "Privatliv og vilk\u00e5r"
        }, de: {
            visual_challenge: "Captcha abrufen", audio_challenge: "Audio-Captcha abrufen", refresh_btn: "Neues Captcha abrufen", instructions_visual: "Geben Sie den angezeigten Text ein:", instructions_audio: "Geben Sie das Geh\u00f6rte ein:", help_btn: "Hilfe", play_again: "Wort erneut abspielen", cant_hear_this: "Wort als MP3 herunterladen", incorrect_try_again: "Falsch. Bitte versuchen Sie es erneut.",
            image_alt_text: "reCAPTCHA-Bild", privacy_and_terms: "Datenschutzerkl\u00e4rung & Nutzungsbedingungen"
        }, el: {
            visual_challenge: "\u039f\u03c0\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03ba\u03bb\u03b7\u03c3\u03b7", audio_challenge: "\u0397\u03c7\u03b7\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03ba\u03bb\u03b7\u03c3\u03b7", refresh_btn: "\u039d\u03ad\u03b1 \u03c0\u03c1\u03cc\u03ba\u03bb\u03b7\u03c3\u03b7", instructions_visual: "\u03a0\u03bb\u03b7\u03ba\u03c4\u03c1\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf:",
            instructions_audio: "\u03a0\u03bb\u03b7\u03ba\u03c4\u03c1\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03b1\u03ba\u03bf\u03cd\u03c4\u03b5:", help_btn: "\u0392\u03bf\u03ae\u03b8\u03b5\u03b9\u03b1", play_again: "\u0391\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03ae\u03c7\u03bf\u03c5 \u03be\u03b1\u03bd\u03ac", cant_hear_this: "\u039b\u03ae\u03c8\u03b7 \u03ae\u03c7\u03bf\u03c5 \u03c9\u03c2 \u039c\u03a13", incorrect_try_again: "\u039b\u03ac\u03b8\u03bf\u03c2. \u0394\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac.",
            image_alt_text: "\u0395\u03b9\u03ba\u03cc\u03bd\u03b1 \u03c0\u03c1\u03cc\u03ba\u03bb\u03b7\u03c3\u03b7\u03c2 reCAPTCHA", privacy_and_terms: "\u0391\u03c0\u03cc\u03c1\u03c1\u03b7\u03c4\u03bf \u03ba\u03b1\u03b9 \u03cc\u03c1\u03bf\u03b9"
        }, "en-GB": x, "en-US": x, es: ka, "es-419": {
            visual_challenge: "Enfrentar un desaf\u00edo visual", audio_challenge: "Enfrentar un desaf\u00edo de audio", refresh_btn: "Enfrentar un nuevo desaf\u00edo", instructions_visual: "Escriba el texto:", instructions_audio: "Escribe lo que escuchas:",
            help_btn: "Ayuda", play_again: "Reproducir sonido de nuevo", cant_hear_this: "Descargar sonido en formato MP3", incorrect_try_again: "Incorrecto. Vuelve a intentarlo.", image_alt_text: "Imagen del desaf\u00edo de la reCAPTCHA", privacy_and_terms: "Privacidad y condiciones"
        }, "es-ES": ka, et: {
            visual_challenge: "Kuva kuvap\u00f5hine robotil\u00f5ks", audio_challenge: "Kuva helip\u00f5hine robotil\u00f5ks", refresh_btn: "Kuva uus robotil\u00f5ks", instructions_visual: "Tippige tekst:", instructions_audio: "Tippige, mida kuulete.",
            help_btn: "Abi", play_again: "Esita heli uuesti", cant_hear_this: "Laadi heli alla MP3-vormingus", incorrect_try_again: "Vale. Proovige uuesti.", image_alt_text: "reCAPTCHA robotil\u00f5ksu kujutis", privacy_and_terms: "Privaatsus ja tingimused"
        }, eu: {
            visual_challenge: "Eskuratu ikusizko erronka", audio_challenge: "Eskuratu audio-erronka", refresh_btn: "Eskuratu erronka berria", instructions_visual: "", instructions_audio: "Idatzi entzuten duzuna:", help_btn: "Laguntza", play_again: "Erreproduzitu soinua berriro", cant_hear_this: "Deskargatu soinua MP3 gisa",
            incorrect_try_again: "Ez da zuzena. Saiatu berriro.", image_alt_text: "reCAPTCHA erronkaren irudia", privacy_and_terms: "Pribatutasuna eta baldintzak"
        }, fa: {
            visual_challenge: "\u062f\u0631\u06cc\u0627\u0641\u062a \u06cc\u06a9 \u0645\u0639\u0645\u0627\u06cc \u062f\u06cc\u062f\u0627\u0631\u06cc", audio_challenge: "\u062f\u0631\u06cc\u0627\u0641\u062a \u06cc\u06a9 \u0645\u0639\u0645\u0627\u06cc \u0635\u0648\u062a\u06cc", refresh_btn: "\u062f\u0631\u06cc\u0627\u0641\u062a \u06cc\u06a9 \u0645\u0639\u0645\u0627\u06cc \u062c\u062f\u06cc\u062f",
            instructions_visual: "", instructions_audio: "\u0622\u0646\u0686\u0647 \u0631\u0627 \u06a9\u0647 \u0645\u06cc\u200c\u0634\u0646\u0648\u06cc\u062f \u062a\u0627\u06cc\u067e \u06a9\u0646\u06cc\u062f:", help_btn: "\u0631\u0627\u0647\u0646\u0645\u0627\u06cc\u06cc", play_again: "\u067e\u062e\u0634 \u0645\u062c\u062f\u062f \u0635\u062f\u0627", cant_hear_this: "\u062f\u0627\u0646\u0644\u0648\u062f \u0635\u062f\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a MP3", incorrect_try_again: "\u0646\u0627\u062f\u0631\u0633\u062a. \u062f\u0648\u0628\u0627\u0631\u0647 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646\u06cc\u062f.",
            image_alt_text: "\u062a\u0635\u0648\u06cc\u0631 \u0686\u0627\u0644\u0634\u06cc reCAPTCHA", privacy_and_terms: "\u062d\u0631\u06cc\u0645 \u062e\u0635\u0648\u0635\u06cc \u0648 \u0634\u0631\u0627\u06cc\u0637"
        }, fi: {
            visual_challenge: "Kuvavahvistus", audio_challenge: "\u00c4\u00e4nivahvistus", refresh_btn: "Uusi kuva", instructions_visual: "Kirjoita teksti:", instructions_audio: "Kirjoita kuulemasi:", help_btn: "Ohje", play_again: "Toista \u00e4\u00e4ni uudelleen", cant_hear_this: "Lataa \u00e4\u00e4ni MP3-tiedostona",
            incorrect_try_again: "V\u00e4\u00e4rin. Yrit\u00e4 uudelleen.", image_alt_text: "reCAPTCHA-kuva", privacy_and_terms: "Tietosuoja ja k\u00e4ytt\u00f6ehdot"
        }, fil: la, fr: ma, "fr-CA": {
            visual_challenge: "Obtenir un test visuel", audio_challenge: "Obtenir un test audio", refresh_btn: "Obtenir un nouveau test", instructions_visual: "Saisissez le texte\u00a0:", instructions_audio: "Tapez ce que vous entendez\u00a0:", help_btn: "Aide", play_again: "Jouer le son de nouveau", cant_hear_this: "T\u00e9l\u00e9charger le son en format MP3",
            incorrect_try_again: "Erreur, essayez \u00e0 nouveau", image_alt_text: "Image reCAPTCHA", privacy_and_terms: "Confidentialit\u00e9 et conditions d'utilisation"
        }, "fr-FR": ma, gl: {
            visual_challenge: "Obter unha proba visual", audio_challenge: "Obter unha proba de audio", refresh_btn: "Obter unha proba nova", instructions_visual: "", instructions_audio: "Escribe o que escoitas:", help_btn: "Axuda", play_again: "Reproducir o son de novo", cant_hear_this: "Descargar son como MP3", incorrect_try_again: "Incorrecto. T\u00e9ntao de novo.",
            image_alt_text: "Imaxe de proba de reCAPTCHA", privacy_and_terms: "Privacidade e condici\u00f3ns"
        }, gu: {
            visual_challenge: "\u0a8f\u0a95 \u0aa6\u0ac3\u0ab6\u0acd\u0aaf\u0abe\u0aa4\u0acd\u0aae\u0a95 \u0aaa\u0aa1\u0a95\u0abe\u0ab0 \u0aae\u0ac7\u0ab3\u0ab5\u0acb", audio_challenge: "\u0a8f\u0a95 \u0a91\u0aa1\u0abf\u0a93 \u0aaa\u0aa1\u0a95\u0abe\u0ab0 \u0aae\u0ac7\u0ab3\u0ab5\u0acb", refresh_btn: "\u0a8f\u0a95 \u0aa8\u0ab5\u0acb \u0aaa\u0aa1\u0a95\u0abe\u0ab0 \u0aae\u0ac7\u0ab3\u0ab5\u0acb", instructions_visual: "",
            instructions_audio: "\u0aa4\u0aae\u0ac7 \u0a9c\u0ac7 \u0ab8\u0abe\u0a82\u0aad\u0ab3\u0acb \u0a9b\u0acb \u0aa4\u0ac7 \u0ab2\u0a96\u0acb:", help_btn: "\u0ab8\u0ab9\u0abe\u0aaf", play_again: "\u0aa7\u0acd\u0ab5\u0aa8\u0abf \u0aab\u0ab0\u0ac0\u0aa5\u0ac0 \u0a9a\u0ab2\u0abe\u0ab5\u0acb", cant_hear_this: "MP3 \u0aa4\u0ab0\u0ac0\u0a95\u0ac7 \u0aa7\u0acd\u0ab5\u0aa8\u0abf\u0aa8\u0ac7 \u0aa1\u0abe\u0a89\u0aa8\u0ab2\u0acb\u0aa1 \u0a95\u0ab0\u0acb", incorrect_try_again: "\u0a96\u0acb\u0a9f\u0ac1\u0a82. \u0aab\u0ab0\u0ac0 \u0aaa\u0acd\u0ab0\u0aaf\u0abe\u0ab8 \u0a95\u0ab0\u0acb.",
            image_alt_text: "reCAPTCHA \u0aaa\u0aa1\u0a95\u0abe\u0ab0 \u0a9b\u0aac\u0ac0", privacy_and_terms: "\u0a97\u0acb\u0aaa\u0aa8\u0ac0\u0aaf\u0aa4\u0abe \u0a85\u0aa8\u0ac7 \u0ab6\u0ab0\u0aa4\u0acb"
        }, hi: {
            visual_challenge: "\u0915\u094b\u0908 \u0935\u093f\u091c\u0941\u0905\u0932 \u091a\u0941\u0928\u094c\u0924\u0940 \u0932\u0947\u0902", audio_challenge: "\u0915\u094b\u0908 \u0911\u0921\u093f\u092f\u094b \u091a\u0941\u0928\u094c\u0924\u0940 \u0932\u0947\u0902", refresh_btn: "\u0915\u094b\u0908 \u0928\u0908 \u091a\u0941\u0928\u094c\u0924\u0940 \u0932\u0947\u0902",
            instructions_visual: "\u091f\u0947\u0915\u094d\u0938\u094d\u091f \u091f\u093e\u0907\u092a \u0915\u0930\u0947\u0902:", instructions_audio: "\u091c\u094b \u0906\u092a \u0938\u0941\u0928 \u0930\u0939\u0947 \u0939\u0948\u0902 \u0909\u0938\u0947 \u0932\u093f\u0916\u0947\u0902:", help_btn: "\u0938\u0939\u093e\u092f\u0924\u093e", play_again: "\u0927\u094d\u200d\u0935\u0928\u093f \u092a\u0941\u0928: \u091a\u0932\u093e\u090f\u0902", cant_hear_this: "\u0927\u094d\u200d\u0935\u0928\u093f \u0915\u094b MP3 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u0947\u0902",
            incorrect_try_again: "\u0917\u0932\u0924. \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902.", image_alt_text: "reCAPTCHA \u091a\u0941\u0928\u094c\u0924\u0940 \u091a\u093f\u0924\u094d\u0930", privacy_and_terms: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0914\u0930 \u0936\u0930\u094d\u0924\u0947\u0902"
        }, hr: {
            visual_challenge: "Dohvati vizualni upit", audio_challenge: "Dohvati zvu\u010dni upit", refresh_btn: "Dohvati novi upit", instructions_visual: "Unesite tekst:", instructions_audio: "Upi\u0161ite \u0161to \u010dujete:",
            help_btn: "Pomo\u0107", play_again: "Ponovi zvuk", cant_hear_this: "Preuzmi zvuk u MP3 formatu", incorrect_try_again: "Nije to\u010dno. Poku\u0161ajte ponovno.", image_alt_text: "Slikovni izazov reCAPTCHA", privacy_and_terms: "Privatnost i odredbe"
        }, hu: {
            visual_challenge: "Vizu\u00e1lis kih\u00edv\u00e1s k\u00e9r\u00e9se", audio_challenge: "Hangkih\u00edv\u00e1s k\u00e9r\u00e9se", refresh_btn: "\u00daj kih\u00edv\u00e1s k\u00e9r\u00e9se", instructions_visual: "\u00cdrja be a sz\u00f6veget:", instructions_audio: "\u00cdrja le, amit hall:",
            help_btn: "S\u00fag\u00f3", play_again: "Hang ism\u00e9telt lej\u00e1tsz\u00e1sa", cant_hear_this: "Hang let\u00f6lt\u00e9se MP3 form\u00e1tumban", incorrect_try_again: "Hib\u00e1s. Pr\u00f3b\u00e1lkozzon \u00fajra.", image_alt_text: "reCAPTCHA ellen\u0151rz\u0151 k\u00e9p", privacy_and_terms: "Adatv\u00e9delem \u00e9s Szerz\u0151d\u00e9si Felt\u00e9telek"
        }, hy: {
            visual_challenge: "\u054d\u057f\u0561\u0576\u0561\u056c \u057f\u0565\u057d\u0578\u0572\u0561\u056f\u0561\u0576 \u056d\u0576\u0564\u056b\u0580", audio_challenge: "\u054d\u057f\u0561\u0576\u0561\u056c \u0571\u0561\u0575\u0576\u0561\u0575\u056b\u0576 \u056d\u0576\u0564\u056b\u0580",
            refresh_btn: "\u054d\u057f\u0561\u0576\u0561\u056c \u0576\u0578\u0580 \u056d\u0576\u0564\u056b\u0580", instructions_visual: "\u0544\u0578\u0582\u057f\u0584\u0561\u0563\u0580\u0565\u0584 \u057f\u0565\u0584\u057d\u057f\u0568\u055d", instructions_audio: "\u0544\u0578\u0582\u057f\u0584\u0561\u0563\u0580\u0565\u0584 \u0561\u0575\u0576, \u056b\u0576\u0579 \u056c\u057d\u0578\u0582\u0574 \u0565\u0584\u055d", help_btn: "\u0555\u0563\u0576\u0578\u0582\u0569\u0575\u0578\u0582\u0576", play_again: "\u0546\u057e\u0561\u0563\u0561\u0580\u056f\u0565\u056c \u0571\u0561\u0575\u0576\u0568 \u056f\u0580\u056f\u056b\u0576",
            cant_hear_this: "\u0532\u0565\u057c\u0576\u0565\u056c \u0571\u0561\u0575\u0576\u0568 \u0578\u0580\u057a\u0565\u057d MP3", incorrect_try_again: "\u054d\u056d\u0561\u056c \u0567: \u0553\u0578\u0580\u0571\u0565\u0584 \u056f\u0580\u056f\u056b\u0576:", image_alt_text: "reCAPTCHA \u057a\u0561\u057f\u056f\u0565\u0580\u0578\u057e \u056d\u0576\u0564\u056b\u0580", privacy_and_terms: "\u0533\u0561\u0572\u057f\u0576\u056b\u0578\u0582\u0569\u0575\u0561\u0576 & \u057a\u0561\u0575\u0574\u0561\u0576\u0576\u0565\u0580"
        },
        id: na, is: {
            visual_challenge: "F\u00e1 a\u00f0gangspr\u00f3f sem mynd", audio_challenge: "F\u00e1 a\u00f0gangspr\u00f3f sem hlj\u00f3\u00f0skr\u00e1", refresh_btn: "F\u00e1 n\u00fdtt a\u00f0gangspr\u00f3f", instructions_visual: "", instructions_audio: "Sl\u00e1\u00f0u inn \u00fea\u00f0 sem \u00fe\u00fa heyrir:", help_btn: "Hj\u00e1lp", play_again: "Spila hlj\u00f3\u00f0 aftur", cant_hear_this: "S\u00e6kja hlj\u00f3\u00f0 sem MP3", incorrect_try_again: "Rangt. Reyndu aftur.", image_alt_text: "mynd reCAPTCHA a\u00f0gangspr\u00f3fs",
            privacy_and_terms: "Pers\u00f3nuvernd og skilm\u00e1lar"
        }, it: { visual_challenge: "Verifica visiva", audio_challenge: "Verifica audio", refresh_btn: "Nuova verifica", instructions_visual: "Digita il testo:", instructions_audio: "Digita ci\u00f2 che senti:", help_btn: "Guida", play_again: "Riproduci di nuovo audio", cant_hear_this: "Scarica audio in MP3", incorrect_try_again: "Sbagliato. Riprova.", image_alt_text: "Immagine di verifica reCAPTCHA", privacy_and_terms: "Privacy e Termini" }, iw: oa, ja: {
            visual_challenge: "\u753b\u50cf\u3067\u78ba\u8a8d\u3057\u307e\u3059",
            audio_challenge: "\u97f3\u58f0\u3067\u78ba\u8a8d\u3057\u307e\u3059", refresh_btn: "\u5225\u306e\u5358\u8a9e\u3067\u3084\u308a\u76f4\u3057\u307e\u3059", instructions_visual: "\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u529b:", instructions_audio: "\u805e\u3053\u3048\u305f\u5358\u8a9e\u3092\u5165\u529b\u3057\u307e\u3059:", help_btn: "\u30d8\u30eb\u30d7", play_again: "\u3082\u3046\u4e00\u5ea6\u805e\u304f", cant_hear_this: "MP3 \u3067\u97f3\u58f0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9", incorrect_try_again: "\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u3082\u3046\u4e00\u5ea6\u3084\u308a\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002",
            image_alt_text: "reCAPTCHA \u78ba\u8a8d\u7528\u753b\u50cf", privacy_and_terms: "\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u3068\u5229\u7528\u898f\u7d04"
        }, kn: {
            visual_challenge: "\u0ca6\u0cc3\u0cb6\u0ccd\u0caf \u0cb8\u0cb5\u0cbe\u0cb2\u0cca\u0c82\u0ca6\u0ca8\u0ccd\u0ca8\u0cc1 \u0cb8\u0ccd\u0cb5\u0cc0\u0c95\u0cb0\u0cbf\u0cb8\u0cbf", audio_challenge: "\u0c86\u0ca1\u0cbf\u0caf\u0ccb \u0cb8\u0cb5\u0cbe\u0cb2\u0cca\u0c82\u0ca6\u0ca8\u0ccd\u0ca8\u0cc1 \u0cb8\u0ccd\u0cb5\u0cc0\u0c95\u0cb0\u0cbf\u0cb8\u0cbf", refresh_btn: "\u0cb9\u0cca\u0cb8 \u0cb8\u0cb5\u0cbe\u0cb2\u0cca\u0c82\u0ca6\u0ca8\u0ccd\u0ca8\u0cc1 \u0caa\u0ca1\u0cc6\u0caf\u0cbf\u0cb0\u0cbf",
            instructions_visual: "", instructions_audio: "\u0ca8\u0cbf\u0cae\u0c97\u0cc6 \u0c95\u0cc7\u0cb3\u0cbf\u0cb8\u0cc1\u0cb5\u0cc1\u0ca6\u0ca8\u0ccd\u0ca8\u0cc1 \u0c9f\u0cc8\u0caa\u0ccd\u200c \u0cae\u0cbe\u0ca1\u0cbf:", help_btn: "\u0cb8\u0cb9\u0cbe\u0caf", play_again: "\u0ca7\u0ccd\u0cb5\u0ca8\u0cbf\u0caf\u0ca8\u0ccd\u0ca8\u0cc1 \u0cae\u0ca4\u0ccd\u0ca4\u0cc6 \u0caa\u0ccd\u0cb2\u0cc7 \u0cae\u0cbe\u0ca1\u0cbf", cant_hear_this: "\u0ca7\u0ccd\u0cb5\u0ca8\u0cbf\u0caf\u0ca8\u0ccd\u0ca8\u0cc1 MP3 \u0cb0\u0cc2\u0caa\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf \u0ca1\u0ccc\u0ca8\u0ccd\u200c\u0cb2\u0ccb\u0ca1\u0ccd \u0cae\u0cbe\u0ca1\u0cbf",
            incorrect_try_again: "\u0ca4\u0caa\u0ccd\u0caa\u0cbe\u0c97\u0cbf\u0ca6\u0cc6. \u0cae\u0ca4\u0ccd\u0ca4\u0cca\u0cae\u0ccd\u0cae\u0cc6 \u0caa\u0ccd\u0cb0\u0caf\u0ca4\u0ccd\u0ca8\u0cbf\u0cb8\u0cbf.", image_alt_text: "reCAPTCHA \u0cb8\u0cb5\u0cbe\u0cb2\u0cc1 \u0c9a\u0cbf\u0ca4\u0ccd\u0cb0", privacy_and_terms: "\u0c97\u0ccc\u0caa\u0ccd\u0caf\u0ca4\u0cc6 \u0cae\u0ca4\u0ccd\u0ca4\u0cc1 \u0ca8\u0cbf\u0caf\u0cae\u0c97\u0cb3\u0cc1"
        }, ko: {
            visual_challenge: "\uadf8\ub9bc\uc73c\ub85c \ubcf4\uc548\ubb38\uc790 \ubc1b\uae30",
            audio_challenge: "\uc74c\uc131\uc73c\ub85c \ubcf4\uc548\ubb38\uc790 \ubc1b\uae30", refresh_btn: "\ubcf4\uc548\ubb38\uc790 \uc0c8\ub85c \ubc1b\uae30", instructions_visual: "\ud14d\uc2a4\ud2b8 \uc785\ub825:", instructions_audio: "\uc74c\uc131 \ubcf4\uc548\ubb38\uc790 \uc785\ub825:", help_btn: "\ub3c4\uc6c0\ub9d0", play_again: "\uc74c\uc131 \ub2e4\uc2dc \ub4e3\uae30", cant_hear_this: "\uc74c\uc131\uc744 MP3\ub85c \ub2e4\uc6b4\ub85c\ub4dc", incorrect_try_again: "\ud2c0\ub838\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \uc8fc\uc138\uc694.",
            image_alt_text: "reCAPTCHA \ubcf4\uc548\ubb38\uc790 \uc774\ubbf8\uc9c0", privacy_and_terms: "\uac1c\uc778\uc815\ubcf4 \ubcf4\ud638 \ubc0f \uc57d\uad00"
        }, ln: ma, lt: {
            visual_challenge: "Gauti vaizdin\u012f atpa\u017einimo test\u0105", audio_challenge: "Gauti garso atpa\u017einimo test\u0105", refresh_btn: "Gauti nauj\u0105 atpa\u017einimo test\u0105", instructions_visual: "\u012eveskite tekst\u0105:", instructions_audio: "\u012eveskite tai, k\u0105 girdite:", help_btn: "Pagalba", play_again: "Dar kart\u0105 paleisti gars\u0105",
            cant_hear_this: "Atsisi\u0173sti gars\u0105 kaip MP3", incorrect_try_again: "Neteisingai. Bandykite dar kart\u0105.", image_alt_text: "Testo \u201ereCAPTCHA\u201c vaizdas", privacy_and_terms: "Privatumas ir s\u0105lygos"
        }, lv: {
            visual_challenge: "Sa\u0146emt vizu\u0101lu izaicin\u0101jumu", audio_challenge: "Sa\u0146emt audio izaicin\u0101jumu", refresh_btn: "Sa\u0146emt jaunu izaicin\u0101jumu", instructions_visual: "Ievadiet tekstu:", instructions_audio: "Ierakstiet dzirdamo:", help_btn: "Pal\u012bdz\u012bba", play_again: "V\u0113lreiz atska\u0146ot ska\u0146u",
            cant_hear_this: "Lejupiel\u0101d\u0113t ska\u0146u MP3\u00a0form\u0101t\u0101", incorrect_try_again: "Nepareizi. M\u0113\u0123iniet v\u0113lreiz.", image_alt_text: "reCAPTCHA izaicin\u0101juma att\u0113ls", privacy_and_terms: "Konfidencialit\u0101te un noteikumi"
        }, ml: {
            visual_challenge: "\u0d12\u0d30\u0d41 \u0d26\u0d43\u0d36\u0d4d\u0d2f \u0d1a\u0d32\u0d1e\u0d4d\u0d1a\u0d4d \u0d28\u0d47\u0d1f\u0d41\u0d15", audio_challenge: "\u0d12\u0d30\u0d41 \u0d13\u0d21\u0d3f\u0d2f\u0d4b \u0d1a\u0d32\u0d1e\u0d4d\u0d1a\u0d4d \u0d28\u0d47\u0d1f\u0d41\u0d15",
            refresh_btn: "\u0d12\u0d30\u0d41 \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d1a\u0d32\u0d1e\u0d4d\u0d1a\u0d4d \u0d28\u0d47\u0d1f\u0d41\u0d15", instructions_visual: "", instructions_audio: "\u0d15\u0d47\u0d7e\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d4d \u0d1f\u0d48\u0d2a\u0d4d\u0d2a\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d42:", help_btn: "\u0d38\u0d39\u0d3e\u0d2f\u0d02", play_again: "\u0d36\u0d2c\u0d4d\u200c\u0d26\u0d02 \u0d35\u0d40\u0d23\u0d4d\u0d1f\u0d41\u0d02 \u0d2a\u0d4d\u0d32\u0d47 \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15",
            cant_hear_this: "\u0d36\u0d2c\u0d4d\u200c\u0d26\u0d02 MP3 \u0d06\u0d2f\u0d3f \u0d21\u0d57\u0d7a\u0d32\u0d4b\u0d21\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15", incorrect_try_again: "\u0d24\u0d46\u0d31\u0d4d\u0d31\u0d3e\u0d23\u0d4d. \u0d35\u0d40\u0d23\u0d4d\u0d1f\u0d41\u0d02 \u0d36\u0d4d\u0d30\u0d2e\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15.", image_alt_text: "reCAPTCHA \u0d1a\u0d32\u0d1e\u0d4d\u0d1a\u0d4d \u0d07\u0d2e\u0d47\u0d1c\u0d4d", privacy_and_terms: "\u0d38\u0d4d\u0d35\u0d15\u0d3e\u0d30\u0d4d\u0d2f\u0d24\u0d2f\u0d41\u0d02 \u0d28\u0d3f\u0d2c\u0d28\u0d4d\u0d27\u0d28\u0d15\u0d33\u0d41\u0d02"
        },
        mr: {
            visual_challenge: "\u0926\u0943\u0936\u094d\u200d\u092f\u092e\u093e\u0928 \u0906\u0935\u094d\u0939\u093e\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u093e", audio_challenge: "\u0911\u0921\u0940\u0913 \u0906\u0935\u094d\u0939\u093e\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u093e", refresh_btn: "\u090f\u0915 \u0928\u0935\u0940\u0928 \u0906\u0935\u094d\u0939\u093e\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u093e", instructions_visual: "", instructions_audio: "\u0906\u092a\u0932\u094d\u092f\u093e\u0932\u093e \u091c\u0947 \u0910\u0915\u0942 \u092f\u0947\u0908\u0932 \u0924\u0947 \u091f\u093e\u0907\u092a \u0915\u0930\u093e:",
            help_btn: "\u092e\u0926\u0924", play_again: "\u0927\u094d\u200d\u0935\u0928\u0940 \u092a\u0941\u0928\u094d\u0939\u093e \u092a\u094d\u200d\u0932\u0947 \u0915\u0930\u093e", cant_hear_this: "MP3 \u0930\u0941\u092a\u093e\u0924 \u0927\u094d\u200d\u0935\u0928\u0940 \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u093e", incorrect_try_again: "\u0905\u092f\u094b\u0917\u094d\u200d\u092f. \u092a\u0941\u0928\u094d\u200d\u0939\u093e \u092a\u094d\u0930\u092f\u0924\u094d\u200d\u0928 \u0915\u0930\u093e.", image_alt_text: "reCAPTCHA \u0906\u0935\u094d\u200d\u0939\u093e\u0928 \u092a\u094d\u0930\u0924\u093f\u092e\u093e",
            privacy_and_terms: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0906\u0923\u093f \u0905\u091f\u0940"
        }, ms: {
            visual_challenge: "Dapatkan cabaran visual", audio_challenge: "Dapatkan cabaran audio", refresh_btn: "Dapatkan cabaran baru", instructions_visual: "Taipkan teksnya:", instructions_audio: "Taip apa yang didengari:", help_btn: "Bantuan", play_again: "Mainkan bunyi sekali lagi", cant_hear_this: "Muat turun bunyi sebagai MP3", incorrect_try_again: "Tidak betul. Cuba lagi.", image_alt_text: "Imej cabaran reCAPTCHA",
            privacy_and_terms: "Privasi & Syarat"
        }, nl: { visual_challenge: "Een visuele uitdaging proberen", audio_challenge: "Een audio-uitdaging proberen", refresh_btn: "Een nieuwe uitdaging proberen", instructions_visual: "Typ de tekst:", instructions_audio: "Typ wat u hoort:", help_btn: "Help", play_again: "Geluid opnieuw afspelen", cant_hear_this: "Geluid downloaden als MP3", incorrect_try_again: "Onjuist. Probeer het opnieuw.", image_alt_text: "reCAPTCHA-uitdagingsafbeelding", privacy_and_terms: "Privacy en voorwaarden" }, no: {
            visual_challenge: "F\u00e5 en bildeutfordring",
            audio_challenge: "F\u00e5 en lydutfordring", refresh_btn: "F\u00e5 en ny utfordring", instructions_visual: "Skriv inn teksten:", instructions_audio: "Skriv inn det du h\u00f8rer:", help_btn: "Hjelp", play_again: "Spill av lyd p\u00e5 nytt", cant_hear_this: "Last ned lyd som MP3", incorrect_try_again: "Feil. Pr\u00f8v p\u00e5 nytt.", image_alt_text: "reCAPTCHA-utfordringsbilde", privacy_and_terms: "Personvern og vilk\u00e5r"
        }, pl: {
            visual_challenge: "Poka\u017c podpowied\u017a wizualn\u0105", audio_challenge: "Odtw\u00f3rz podpowied\u017a d\u017awi\u0119kow\u0105",
            refresh_btn: "Nowa podpowied\u017a", instructions_visual: "Przepisz tekst:", instructions_audio: "Wpisz us\u0142yszane s\u0142owa:", help_btn: "Pomoc", play_again: "Odtw\u00f3rz d\u017awi\u0119k ponownie", cant_hear_this: "Pobierz d\u017awi\u0119k jako plik MP3", incorrect_try_again: "Nieprawid\u0142owo. Spr\u00f3buj ponownie.", image_alt_text: "Zadanie obrazkowe reCAPTCHA", privacy_and_terms: "Prywatno\u015b\u0107 i warunki"
        }, pt: pa, "pt-BR": pa, "pt-PT": {
            visual_challenge: "Obter um desafio visual", audio_challenge: "Obter um desafio de \u00e1udio",
            refresh_btn: "Obter um novo desafio", instructions_visual: "Introduza o texto:", instructions_audio: "Escreva o que ouvir:", help_btn: "Ajuda", play_again: "Reproduzir som novamente", cant_hear_this: "Transferir som como MP3", incorrect_try_again: "Incorreto. Tente novamente.", image_alt_text: "Imagem de teste reCAPTCHA", privacy_and_terms: "Privacidade e Termos de Utiliza\u00e7\u00e3o"
        }, ro: qa, ru: {
            visual_challenge: "\u0412\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430",
            audio_challenge: "\u0417\u0432\u0443\u043a\u043e\u0432\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430", refresh_btn: "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c", instructions_visual: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0435\u043a\u0441\u0442:", instructions_audio: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u043e, \u0447\u0442\u043e \u0441\u043b\u044b\u0448\u0438\u0442\u0435:", help_btn: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430", play_again: "\u041f\u0440\u043e\u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0435\u0449\u0435 \u0440\u0430\u0437",
            cant_hear_this: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c MP3-\u0444\u0430\u0439\u043b", incorrect_try_again: "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443.", image_alt_text: "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e \u0441\u043b\u043e\u0432\u0443 reCAPTCHA", privacy_and_terms: "\u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u0438 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b"
        },
        sk: { visual_challenge: "Zobrazi\u0165 vizu\u00e1lnu podobu", audio_challenge: "Prehra\u0165 zvukov\u00fa podobu", refresh_btn: "Zobrazi\u0165 nov\u00fd v\u00fdraz", instructions_visual: "Zadajte text:", instructions_audio: "Zadajte, \u010do po\u010dujete:", help_btn: "Pomocn\u00edk", play_again: "Znova prehra\u0165 zvuk", cant_hear_this: "Prevzia\u0165 zvuk v podobe s\u00faboru MP3", incorrect_try_again: "Nespr\u00e1vne. Sk\u00faste to znova.", image_alt_text: "Obr\u00e1zok zadania reCAPTCHA", privacy_and_terms: "Ochrana osobn\u00fdch \u00fadajov a Zmluvn\u00e9 podmienky" },
        sl: { visual_challenge: "Vizualni preskus", audio_challenge: "Zvo\u010dni preskus", refresh_btn: "Nov preskus", instructions_visual: "Vnesite besedilo:", instructions_audio: "Natipkajte, kaj sli\u0161ite:", help_btn: "Pomo\u010d", play_again: "Znova predvajaj zvok", cant_hear_this: "Prenesi zvok kot MP3", incorrect_try_again: "Napa\u010dno. Poskusite znova.", image_alt_text: "Slika izziva reCAPTCHA", privacy_and_terms: "Zasebnost in pogoji" }, sr: {
            visual_challenge: "\u041f\u0440\u0438\u043c\u0438\u0442\u0435 \u0432\u0438\u0437\u0443\u0435\u043b\u043d\u0438 \u0443\u043f\u0438\u0442",
            audio_challenge: "\u041f\u0440\u0438\u043c\u0438\u0442\u0435 \u0430\u0443\u0434\u0438\u043e \u0443\u043f\u0438\u0442", refresh_btn: "\u041f\u0440\u0438\u043c\u0438\u0442\u0435 \u043d\u043e\u0432\u0438 \u0443\u043f\u0438\u0442", instructions_visual: "\u0423\u043d\u0435\u0441\u0438\u0442\u0435 \u0442\u0435\u043a\u0441\u0442:", instructions_audio: "\u041e\u0442\u043a\u0443\u0446\u0430\u0458\u0442\u0435 \u043e\u043d\u043e \u0448\u0442\u043e \u0447\u0443\u0458\u0435\u0442\u0435:", help_btn: "\u041f\u043e\u043c\u043e\u045b",
            play_again: "\u041f\u043e\u043d\u043e\u0432\u043e \u043f\u0443\u0441\u0442\u0438 \u0437\u0432\u0443\u043a", cant_hear_this: "\u041f\u0440\u0435\u0443\u0437\u043c\u0438 \u0437\u0432\u0443\u043a \u043a\u0430\u043e MP3 \u0441\u043d\u0438\u043c\u0430\u043a", incorrect_try_again: "\u041d\u0435\u0442\u0430\u0447\u043d\u043e. \u041f\u043e\u043a\u0443\u0448\u0430\u0458\u0442\u0435 \u043f\u043e\u043d\u043e\u0432\u043e.", image_alt_text: "\u0421\u043b\u0438\u043a\u0430 reCAPTCHA \u043f\u0440\u043e\u0432\u0435\u0440\u0435",
            privacy_and_terms: "\u041f\u0440\u0438\u0432\u0430\u0442\u043d\u043e\u0441\u0442 \u0438 \u0443\u0441\u043b\u043e\u0432\u0438"
        }, sv: {
            visual_challenge: "H\u00e4mta captcha i bildformat", audio_challenge: "H\u00e4mta captcha i ljudformat", refresh_btn: "H\u00e4mta ny captcha", instructions_visual: "Skriv texten:", instructions_audio: "Skriv det du h\u00f6r:", help_btn: "Hj\u00e4lp", play_again: "Spela upp ljudet igen", cant_hear_this: "H\u00e4mta ljud som MP3", incorrect_try_again: "Fel. F\u00f6rs\u00f6k igen.", image_alt_text: "reCAPTCHA-bild",
            privacy_and_terms: "Sekretess och villkor"
        }, sw: { visual_challenge: "Pata herufi za kusoma", audio_challenge: "Pata herufi za kusikiliza", refresh_btn: "Pata herufi mpya", instructions_visual: "", instructions_audio: "Charaza unachosikia:", help_btn: "Usaidizi", play_again: "Cheza sauti tena", cant_hear_this: "Pakua sauti kama MP3", incorrect_try_again: "Sio sahihi. Jaribu tena.", image_alt_text: "picha ya changamoto ya reCAPTCHA", privacy_and_terms: "Faragha & Masharti" }, ta: {
            visual_challenge: "\u0baa\u0bbe\u0bb0\u0bcd\u0bb5\u0bc8 \u0b9a\u0bc7\u0bb2\u0b9e\u0bcd\u0b9a\u0bc8\u0baa\u0bcd \u0baa\u0bc6\u0bb1\u0bc1\u0b95",
            audio_challenge: "\u0b86\u0b9f\u0bbf\u0baf\u0bcb \u0b9a\u0bc7\u0bb2\u0b9e\u0bcd\u0b9a\u0bc8\u0baa\u0bcd \u0baa\u0bc6\u0bb1\u0bc1\u0b95", refresh_btn: "\u0baa\u0bc1\u0ba4\u0bbf\u0baf \u0b9a\u0bc7\u0bb2\u0b9e\u0bcd\u0b9a\u0bc8\u0baa\u0bcd \u0baa\u0bc6\u0bb1\u0bc1\u0b95", instructions_visual: "", instructions_audio: "\u0b95\u0bc7\u0b9f\u0bcd\u0baa\u0ba4\u0bc8 \u0b9f\u0bc8\u0baa\u0bcd \u0b9a\u0bc6\u0baf\u0bcd\u0b95:", help_btn: "\u0b89\u0ba4\u0bb5\u0bbf", play_again: "\u0b92\u0bb2\u0bbf\u0baf\u0bc8 \u0bae\u0bc0\u0ba3\u0bcd\u0b9f\u0bc1\u0bae\u0bcd \u0b87\u0baf\u0b95\u0bcd\u0b95\u0bc1",
            cant_hear_this: "\u0b92\u0bb2\u0bbf\u0baf\u0bc8 MP3 \u0b86\u0b95 \u0baa\u0ba4\u0bbf\u0bb5\u0bbf\u0bb1\u0b95\u0bcd\u0b95\u0bc1\u0b95", incorrect_try_again: "\u0ba4\u0bb5\u0bb1\u0bbe\u0ba9\u0ba4\u0bc1. \u0bae\u0bc0\u0ba3\u0bcd\u0b9f\u0bc1\u0bae\u0bcd \u0bae\u0bc1\u0baf\u0bb2\u0bb5\u0bc1\u0bae\u0bcd.", image_alt_text: "reCAPTCHA \u0b9a\u0bc7\u0bb2\u0b9e\u0bcd\u0b9a\u0bcd \u0baa\u0b9f\u0bae\u0bcd", privacy_and_terms: "\u0ba4\u0ba9\u0bbf\u0baf\u0bc1\u0bb0\u0bbf\u0bae\u0bc8 & \u0bb5\u0bbf\u0ba4\u0bbf\u0bae\u0bc1\u0bb1\u0bc8\u0b95\u0bb3\u0bcd"
        },
        te: {
            visual_challenge: "\u0c12\u0c15 \u0c26\u0c43\u0c36\u0c4d\u0c2f\u0c2e\u0c3e\u0c28 \u0c38\u0c35\u0c3e\u0c32\u0c41\u0c28\u0c41 \u0c38\u0c4d\u0c35\u0c40\u0c15\u0c30\u0c3f\u0c02\u0c1a\u0c02\u0c21\u0c3f", audio_challenge: "\u0c12\u0c15 \u0c06\u0c21\u0c3f\u0c2f\u0c4b \u0c38\u0c35\u0c3e\u0c32\u0c41\u0c28\u0c41 \u0c38\u0c4d\u0c35\u0c40\u0c15\u0c30\u0c3f\u0c02\u0c1a\u0c02\u0c21\u0c3f", refresh_btn: "\u0c15\u0c4d\u0c30\u0c4a\u0c24\u0c4d\u0c24 \u0c38\u0c35\u0c3e\u0c32\u0c41\u0c28\u0c41 \u0c38\u0c4d\u0c35\u0c40\u0c15\u0c30\u0c3f\u0c02\u0c1a\u0c02\u0c21\u0c3f",
            instructions_visual: "", instructions_audio: "\u0c2e\u0c40\u0c30\u0c41 \u0c35\u0c3f\u0c28\u0c4d\u0c28\u0c26\u0c3f \u0c1f\u0c48\u0c2a\u0c4d \u0c1a\u0c47\u0c2f\u0c02\u0c21\u0c3f:", help_btn: "\u0c38\u0c39\u0c3e\u0c2f\u0c02", play_again: "\u0c27\u0c4d\u0c35\u0c28\u0c3f\u0c28\u0c3f \u0c2e\u0c33\u0c4d\u0c32\u0c40 \u0c2a\u0c4d\u0c32\u0c47 \u0c1a\u0c47\u0c2f\u0c3f", cant_hear_this: "\u0c27\u0c4d\u0c35\u0c28\u0c3f\u0c28\u0c3f MP3 \u0c35\u0c32\u0c46 \u0c21\u0c4c\u0c28\u0c4d\u200c\u0c32\u0c4b\u0c21\u0c4d \u0c1a\u0c47\u0c2f\u0c3f",
            incorrect_try_again: "\u0c24\u0c2a\u0c4d\u0c2a\u0c41. \u0c2e\u0c33\u0c4d\u0c32\u0c40 \u0c2a\u0c4d\u0c30\u0c2f\u0c24\u0c4d\u0c28\u0c3f\u0c02\u0c1a\u0c02\u0c21\u0c3f.", image_alt_text: "reCAPTCHA \u0c38\u0c35\u0c3e\u0c32\u0c41 \u0c1a\u0c3f\u0c24\u0c4d\u0c30\u0c02", privacy_and_terms: "\u0c17\u0c4b\u0c2a\u0c4d\u0c2f\u0c24 & \u0c28\u0c3f\u0c2c\u0c02\u0c27\u0c28\u0c32\u0c41"
        }, th: {
            visual_challenge: "\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\u0e14\u0e49\u0e32\u0e19\u0e20\u0e32\u0e1e",
            audio_challenge: "\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\u0e14\u0e49\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07", refresh_btn: "\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\u0e43\u0e2b\u0e21\u0e48", instructions_visual: "\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e19\u0e35\u0e49:", instructions_audio: "\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e44\u0e14\u0e49\u0e22\u0e34\u0e19:",
            help_btn: "\u0e04\u0e27\u0e32\u0e21\u0e0a\u0e48\u0e27\u0e22\u0e40\u0e2b\u0e25\u0e37\u0e2d", play_again: "\u0e40\u0e25\u0e48\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07", cant_hear_this: "\u0e14\u0e32\u0e27\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e40\u0e1b\u0e47\u0e19 MP3", incorrect_try_again: "\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 \u0e25\u0e2d\u0e07\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07", image_alt_text: "\u0e23\u0e2b\u0e31\u0e2a\u0e20\u0e32\u0e1e reCAPTCHA",
            privacy_and_terms: "\u0e19\u0e42\u0e22\u0e1a\u0e32\u0e22\u0e2a\u0e48\u0e27\u0e19\u0e1a\u0e38\u0e04\u0e04\u0e25\u0e41\u0e25\u0e30\u0e02\u0e49\u0e2d\u0e01\u0e33\u0e2b\u0e19\u0e14"
        }, tr: {
            visual_challenge: "G\u00f6rsel sorgu al", audio_challenge: "Sesli sorgu al", refresh_btn: "Yeniden y\u00fckle", instructions_visual: "Metni yaz\u0131n:", instructions_audio: "Duydu\u011funuzu yaz\u0131n:", help_btn: "Yard\u0131m", play_again: "Sesi tekrar \u00e7al", cant_hear_this: "Sesi MP3 olarak indir", incorrect_try_again: "Yanl\u0131\u015f. Tekrar deneyin.",
            image_alt_text: "reCAPTCHA sorusu resmi", privacy_and_terms: "Gizlilik ve \u015eartlar"
        }, uk: {
            visual_challenge: "\u041e\u0442\u0440\u0438\u043c\u0430\u0442\u0438 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0439 \u0442\u0435\u043a\u0441\u0442", audio_challenge: "\u041e\u0442\u0440\u0438\u043c\u0430\u0442\u0438 \u0430\u0443\u0434\u0456\u043e\u0437\u0430\u043f\u0438\u0441", refresh_btn: "\u041e\u043d\u043e\u0432\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442", instructions_visual: "\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0442\u0435\u043a\u0441\u0442:",
            instructions_audio: "\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043f\u043e\u0447\u0443\u0442\u0435:", help_btn: "\u0414\u043e\u0432\u0456\u0434\u043a\u0430", play_again: "\u0412\u0456\u0434\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0437\u0430\u043f\u0438\u0441 \u0449\u0435 \u0440\u0430\u0437", cant_hear_this: "\u0417\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0438\u0442\u0438 \u0437\u0430\u043f\u0438\u0441 \u044f\u043a MP3", incorrect_try_again: "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e. \u0421\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0449\u0435 \u0440\u0430\u0437.",
            image_alt_text: "\u0417\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0437\u0430\u0432\u0434\u0430\u043d\u043d\u044f reCAPTCHA", privacy_and_terms: "\u041a\u043e\u043d\u0444\u0456\u0434\u0435\u043d\u0446\u0456\u0439\u043d\u0456\u0441\u0442\u044c \u0456 \u0443\u043c\u043e\u0432\u0438"
        }, ur: {
            visual_challenge: "\u0627\u06cc\u06a9 \u0645\u0631\u0626\u06cc \u0686\u06cc\u0644\u0646\u062c \u062d\u0627\u0635\u0644 \u06a9\u0631\u06cc\u06ba", audio_challenge: "\u0627\u06cc\u06a9 \u0622\u0688\u06cc\u0648 \u0686\u06cc\u0644\u0646\u062c \u062d\u0627\u0635\u0644 \u06a9\u0631\u06cc\u06ba",
            refresh_btn: "\u0627\u06cc\u06a9 \u0646\u06cc\u0627 \u0686\u06cc\u0644\u0646\u062c \u062d\u0627\u0635\u0644 \u06a9\u0631\u06cc\u06ba", instructions_visual: "", instructions_audio: "\u062c\u0648 \u0633\u0646\u0627\u0626\u06cc \u062f\u06cc\u062a\u0627 \u06c1\u06d2 \u0648\u06c1 \u0679\u0627\u0626\u067e \u06a9\u0631\u06cc\u06ba:", help_btn: "\u0645\u062f\u062f", play_again: "\u0622\u0648\u0627\u0632 \u062f\u0648\u0628\u0627\u0631\u06c1 \u0686\u0644\u0627\u0626\u06cc\u06ba", cant_hear_this: "\u0622\u0648\u0627\u0632 \u06a9\u0648 MP3 \u06a9\u06d2 \u0628\u0637\u0648\u0631 \u0688\u0627\u0624\u0646 \u0644\u0648\u0688 \u06a9\u0631\u06cc\u06ba",
            incorrect_try_again: "\u063a\u0644\u0637\u06d4 \u062f\u0648\u0628\u0627\u0631\u06c1 \u06a9\u0648\u0634\u0634 \u06a9\u0631\u06cc\u06ba\u06d4", image_alt_text: "reCAPTCHA \u0686\u06cc\u0644\u0646\u062c \u0648\u0627\u0644\u06cc \u0634\u0628\u06cc\u06c1", privacy_and_terms: "\u0631\u0627\u0632\u062f\u0627\u0631\u06cc \u0648 \u0634\u0631\u0627\u0626\u0637"
        }, vi: {
            visual_challenge: "Nh\u1eadn th\u1eed th\u00e1ch h\u00ecnh \u1ea3nh", audio_challenge: "Nh\u1eadn th\u1eed th\u00e1ch \u00e2m thanh", refresh_btn: "Nh\u1eadn th\u1eed th\u00e1ch m\u1edbi",
            instructions_visual: "Nh\u1eadp v\u0103n b\u1ea3n:", instructions_audio: "Nh\u1eadp n\u1ed9i dung b\u1ea1n nghe th\u1ea5y:", help_btn: "Tr\u1ee3 gi\u00fap", play_again: "Ph\u00e1t l\u1ea1i \u00e2m thanh", cant_hear_this: "T\u1ea3i \u00e2m thanh xu\u1ed1ng d\u01b0\u1edbi d\u1ea1ng MP3", incorrect_try_again: "Kh\u00f4ng ch\u00ednh x\u00e1c. H\u00e3y th\u1eed l\u1ea1i.", image_alt_text: "H\u00ecnh x\u00e1c th\u1ef1c reCAPTCHA", privacy_and_terms: "B\u1ea3o m\u1eadt v\u00e0 \u0111i\u1ec1u kho\u1ea3n"
        }, "zh-CN": ra, "zh-HK": {
            visual_challenge: "\u56de\u7b54\u5716\u50cf\u9a57\u8b49\u554f\u984c",
            audio_challenge: "\u53d6\u5f97\u8a9e\u97f3\u9a57\u8b49\u554f\u984c", refresh_btn: "\u63db\u4e00\u500b\u9a57\u8b49\u554f\u984c", instructions_visual: "\u8f38\u5165\u6587\u5b57\uff1a", instructions_audio: "\u9375\u5165\u60a8\u6240\u807d\u5230\u7684\uff1a", help_btn: "\u8aaa\u660e", play_again: "\u518d\u6b21\u64ad\u653e\u8072\u97f3", cant_hear_this: "\u5c07\u8072\u97f3\u4e0b\u8f09\u70ba MP3", incorrect_try_again: "\u4e0d\u6b63\u78ba\uff0c\u518d\u8a66\u4e00\u6b21\u3002", image_alt_text: "reCAPTCHA \u9a57\u8b49\u6587\u5b57\u5716\u7247",
            privacy_and_terms: "\u79c1\u96b1\u6b0a\u8207\u689d\u6b3e"
        }, "zh-TW": {
            visual_challenge: "\u53d6\u5f97\u5716\u7247\u9a57\u8b49\u554f\u984c", audio_challenge: "\u53d6\u5f97\u8a9e\u97f3\u9a57\u8b49\u554f\u984c", refresh_btn: "\u53d6\u5f97\u65b0\u7684\u9a57\u8b49\u554f\u984c", instructions_visual: "\u8acb\u8f38\u5165\u5716\u7247\u4e2d\u7684\u6587\u5b57\uff1a", instructions_audio: "\u8acb\u8f38\u5165\u8a9e\u97f3\u5167\u5bb9\uff1a", help_btn: "\u8aaa\u660e", play_again: "\u518d\u6b21\u64ad\u653e", cant_hear_this: "\u4ee5 MP3 \u683c\u5f0f\u4e0b\u8f09\u8072\u97f3",
            incorrect_try_again: "\u9a57\u8b49\u78bc\u6709\u8aa4\uff0c\u8acb\u518d\u8a66\u4e00\u6b21\u3002", image_alt_text: "reCAPTCHA \u9a57\u8b49\u6587\u5b57\u5716\u7247", privacy_and_terms: "\u96b1\u79c1\u6b0a\u8207\u689d\u6b3e"
        }, zu: {
            visual_challenge: "Thola inselelo ebonakalayo", audio_challenge: "Thola inselelo yokulalelwayo", refresh_btn: "Thola inselelo entsha", instructions_visual: "", instructions_audio: "Bhala okuzwayo:", help_btn: "Usizo", play_again: "Phinda udlale okulalelwayo futhi", cant_hear_this: "Layisha umsindo njenge-MP3",
            incorrect_try_again: "Akulungile. Zama futhi.", image_alt_text: "umfanekiso oyinselelo we-reCAPTCHA", privacy_and_terms: "Okwangasese kanye nemigomo"
        }, tl: la, he: oa, "in": na, mo: qa, zh: ra
    }; var y = function (a) { if (Error.captureStackTrace) Error.captureStackTrace(this, y); else { var b = Error().stack; b && (this.stack = b) } a && (this.message = String(a)) }; v(y, Error); y.prototype.name = "CustomError"; var ta; var ua = function (a, b) { for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1) ; e.length && 1 < c.length;) d += c.shift() + e.shift(); return d + c.join("%s") }, va = String.prototype.trim ? function (a) { return a.trim() } : function (a) { return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "") }, Da = function (a) {
        if (!wa.test(a)) return a; -1 != a.indexOf("&") && (a = a.replace(xa, "&amp;")); -1 != a.indexOf("<") && (a = a.replace(ya, "&lt;")); -1 != a.indexOf(">") && (a = a.replace(za, "&gt;")); -1 != a.indexOf('"') && (a = a.replace(Aa, "&quot;")); -1 != a.indexOf("'") &&
        (a = a.replace(Ba, "&#39;")); -1 != a.indexOf("\x00") && (a = a.replace(Ca, "&#0;")); return a
    }, xa = /&/g, ya = /</g, za = />/g, Aa = /"/g, Ba = /'/g, Ca = /\x00/g, wa = /[\x00&<>"']/, Ea = function (a, b) { return a < b ? -1 : a > b ? 1 : 0 }, Fa = function (a) { return String(a).replace(/\-([a-z])/g, function (a, c) { return c.toUpperCase() }) }, Ga = function (a) { var b = q(void 0) ? "undefined".replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08") : "\\s"; return a.replace(new RegExp("(^" + (b ? "|[" + b + "]+" : "") + ")([a-z])", "g"), function (a, b, e) { return b + e.toUpperCase() }) }; var Ha = function (a, b) { b.unshift(a); y.call(this, ua.apply(null, b)); b.shift() }; v(Ha, y); Ha.prototype.name = "AssertionError";
    var Ia = function (a, b, c, d) { var e = "Assertion failed"; if (c) var e = e + (": " + c), g = d; else a && (e += ": " + a, g = b); throw new Ha("" + e, g || []); }, z = function (a, b, c) { a || Ia("", null, b, Array.prototype.slice.call(arguments, 2)) }, Ja = function (a, b) { throw new Ha("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)); }, Ka = function (a, b, c) { q(a) || Ia("Expected string but got %s: %s.", [n(a), a], b, Array.prototype.slice.call(arguments, 2)); return a }, La = function (a, b, c) {
        r(a) || Ia("Expected function but got %s: %s.", [n(a), a], b, Array.prototype.slice.call(arguments,
        2))
    }; var A = Array.prototype, Ma = A.indexOf ? function (a, b, c) { z(null != a.length); return A.indexOf.call(a, b, c) } : function (a, b, c) { c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c; if (q(a)) return q(b) && 1 == b.length ? a.indexOf(b, c) : -1; for (; c < a.length; c++) if (c in a && a[c] === b) return c; return -1 }, Na = A.forEach ? function (a, b, c) { z(null != a.length); A.forEach.call(a, b, c) } : function (a, b, c) { for (var d = a.length, e = q(a) ? a.split("") : a, g = 0; g < d; g++) g in e && b.call(c, e[g], g, a) }, Oa = A.map ? function (a, b, c) { z(null != a.length); return A.map.call(a, b, c) } :
    function (a, b, c) { for (var d = a.length, e = Array(d), g = q(a) ? a.split("") : a, f = 0; f < d; f++) f in g && (e[f] = b.call(c, g[f], f, a)); return e }, Pa = A.some ? function (a, b, c) { z(null != a.length); return A.some.call(a, b, c) } : function (a, b, c) { for (var d = a.length, e = q(a) ? a.split("") : a, g = 0; g < d; g++) if (g in e && b.call(c, e[g], g, a)) return !0; return !1 }, Qa = function (a, b) { var c = Ma(a, b), d; if (d = 0 <= c) z(null != a.length), A.splice.call(a, c, 1); return d }, Ra = function (a) { var b = a.length; if (0 < b) { for (var c = Array(b), d = 0; d < b; d++) c[d] = a[d]; return c } return [] },
    Sa = function (a, b, c) { z(null != a.length); return 2 >= arguments.length ? A.slice.call(a, b) : A.slice.call(a, b, c) }; var Ta = function (a, b) { for (var c in a) b.call(void 0, a[c], c, a) }, Ua = function (a) { var b = [], c = 0, d; for (d in a) b[c++] = d; return b }, Va = function (a) { for (var b in a) return !1; return !0 }, Xa = function () { var a = Wa() ? k.google_ad : null, b = {}, c; for (c in a) b[c] = a[c]; return b }, Ya = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "), Za = function (a, b) {
        for (var c, d, e = 1; e < arguments.length; e++) {
            d = arguments[e]; for (c in d) a[c] = d[c]; for (var g = 0; g < Ya.length; g++) c = Ya[g], Object.prototype.hasOwnProperty.call(d,
            c) && (a[c] = d[c])
        }
    }, $a = function (a) { var b = arguments.length; if (1 == b && p(arguments[0])) return $a.apply(null, arguments[0]); for (var c = {}, d = 0; d < b; d++) c[arguments[d]] = !0; return c }; var B; t: { var ab = k.navigator; if (ab) { var bb = ab.userAgent; if (bb) { B = bb; break t } } B = "" }; var cb = -1 != B.indexOf("Opera") || -1 != B.indexOf("OPR"), C = -1 != B.indexOf("Trident") || -1 != B.indexOf("MSIE"), E = -1 != B.indexOf("Gecko") && -1 == B.toLowerCase().indexOf("webkit") && !(-1 != B.indexOf("Trident") || -1 != B.indexOf("MSIE")), F = -1 != B.toLowerCase().indexOf("webkit"), db = function () { var a = k.document; return a ? a.documentMode : void 0 }, eb = function () {
        var a = "", b; if (cb && k.opera) return a = k.opera.version, r(a) ? a() : a; E ? b = /rv\:([^\);]+)(\)|;)/ : C ? b = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/ : F && (b = /WebKit\/(\S+)/); b && (a = (a = b.exec(B)) ?
        a[1] : ""); return C && (b = db(), b > parseFloat(a)) ? String(b) : a
    }(), fb = {}, G = function (a) {
        var b; if (!(b = fb[a])) {
            b = 0; for (var c = va(String(eb)).split("."), d = va(String(a)).split("."), e = Math.max(c.length, d.length), g = 0; 0 == b && g < e; g++) {
                var f = c[g] || "", m = d[g] || "", D = RegExp("(\\d*)(\\D*)", "g"), M = RegExp("(\\d*)(\\D*)", "g"); do {
                    var I = D.exec(f) || ["", "", ""], aa = M.exec(m) || ["", "", ""]; if (0 == I[0].length && 0 == aa[0].length) break; b = Ea(0 == I[1].length ? 0 : parseInt(I[1], 10), 0 == aa[1].length ? 0 : parseInt(aa[1], 10)) || Ea(0 == I[2].length, 0 == aa[2].length) ||
                    Ea(I[2], aa[2])
                } while (0 == b)
            } b = fb[a] = 0 <= b
        } return b
    }, gb = k.document, hb = gb && C ? db() || ("CSS1Compat" == gb.compatMode ? parseInt(eb, 10) : 5) : void 0; var ib = function (a) { if (8192 > a.length) return String.fromCharCode.apply(null, a); for (var b = "", c = 0; c < a.length; c += 8192) var d = Sa(a, c, c + 8192), b = b + String.fromCharCode.apply(null, d); return b }, jb = function (a) { return Oa(a, function (a) { a = a.toString(16); return 1 < a.length ? a : "0" + a }).join("") }; var kb = null, lb = null, mb = function (a) {
        if (!kb) { kb = {}; lb = {}; for (var b = 0; 65 > b; b++) kb[b] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(b), lb[kb[b]] = b, 62 <= b && (lb["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(b)] = b) } for (var b = lb, c = [], d = 0; d < a.length;) {
            var e = b[a.charAt(d++)], g = d < a.length ? b[a.charAt(d)] : 0; ++d; var f = d < a.length ? b[a.charAt(d)] : 64; ++d; var m = d < a.length ? b[a.charAt(d)] : 64; ++d; if (null == e || null == g || null == f || null == m) throw Error(); c.push(e << 2 | g >>
            4); 64 != f && (c.push(g << 4 & 240 | f >> 2), 64 != m && c.push(f << 6 & 192 | m))
        } return c
    }; var H = function () { this.disposed_ = this.disposed_; this.onDisposeCallbacks_ = this.onDisposeCallbacks_ }; H.prototype.disposed_ = !1; H.prototype.dispose = function () { this.disposed_ || (this.disposed_ = !0, this.disposeInternal()) }; var nb = function (a, b) { a.disposed_ ? b.call(void 0) : (a.onDisposeCallbacks_ || (a.onDisposeCallbacks_ = []), a.onDisposeCallbacks_.push(l(void 0) ? t(b, void 0) : b)) }; H.prototype.disposeInternal = function () { if (this.onDisposeCallbacks_) for (; this.onDisposeCallbacks_.length;) this.onDisposeCallbacks_.shift()() };
    var ob = function (a) { a && "function" == typeof a.dispose && a.dispose() }; $a("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")); $a("action", "cite", "data", "formaction", "href", "manifest", "poster", "src"); $a("embed", "iframe", "link", "object", "script", "style", "template"); var pb = !C || C && 9 <= hb; !E && !C || C && C && 9 <= hb || E && G("1.9.1"); C && G("9"); var sb = function (a) { return a ? new qb(rb(a)) : ta || (ta = new qb) }, tb = function (a, b) { return q(b) ? a.getElementById(b) : b }, vb = function (a, b) { Ta(b, function (b, d) { "style" == d ? a.style.cssText = b : "class" == d ? a.className = b : "for" == d ? a.htmlFor = b : d in ub ? a.setAttribute(ub[d], b) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, b) : a[d] = b }) }, ub = {
        cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", frameborder: "frameBorder", height: "height", maxlength: "maxLength", role: "role", rowspan: "rowSpan",
        type: "type", usemap: "useMap", valign: "vAlign", width: "width"
    }, xb = function (a, b, c) { return wb(document, arguments) }, wb = function (a, b) { var c = b[0], d = b[1]; if (!pb && d && (d.name || d.type)) { c = ["<", c]; d.name && c.push(' name="', Da(d.name), '"'); if (d.type) { c.push(' type="', Da(d.type), '"'); var e = {}; Za(e, d); delete e.type; d = e } c.push(">"); c = c.join("") } c = a.createElement(c); d && (q(d) ? c.className = d : p(d) ? c.className = d.join(" ") : vb(c, d)); 2 < b.length && yb(a, c, b); return c }, yb = function (a, b, c) {
        function d(c) {
            c && b.appendChild(q(c) ? a.createTextNode(c) :
            c)
        } for (var e = 2; e < c.length; e++) { var g = c[e]; !ca(g) || da(g) && 0 < g.nodeType ? d(g) : Na(zb(g) ? Ra(g) : g, d) }
    }, Ab = function (a) { for (var b; b = a.firstChild;) a.removeChild(b) }, Bb = function (a) { a && a.parentNode && a.parentNode.removeChild(a) }, rb = function (a) { z(a, "Node cannot be null or undefined."); return 9 == a.nodeType ? a : a.ownerDocument || a.document }, zb = function (a) { if (a && "number" == typeof a.length) { if (da(a)) return "function" == typeof a.item || "string" == typeof a.item; if (r(a)) return "function" == typeof a.item } return !1 }, qb = function (a) {
        this.document_ =
        a || k.document || document
    }; h = qb.prototype; h.getDomHelper = sb; h.getElement = function (a) { return tb(this.document_, a) }; h.$ = qb.prototype.getElement; h.createDom = function (a, b, c) { return wb(this.document_, arguments) }; h.createElement = function (a) { return this.document_.createElement(a) }; h.createTextNode = function (a) { return this.document_.createTextNode(String(a)) }; h.appendChild = function (a, b) { a.appendChild(b) }; var Cb = function (a) { k.setTimeout(function () { throw a; }, 0) }, Db, Eb = function () {
        var a = k.MessageChannel; "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && (a = function () {
            var a = document.createElement("iframe"); a.style.display = "none"; a.src = ""; document.documentElement.appendChild(a); var b = a.contentWindow, a = b.document; a.open(); a.write(""); a.close(); var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host, a = t(function (a) {
                if (("*" ==
                d || a.origin == d) && a.data == c) this.port1.onmessage()
            }, this); b.addEventListener("message", a, !1); this.port1 = {}; this.port2 = { postMessage: function () { b.postMessage(c, d) } }
        }); if ("undefined" !== typeof a && -1 == B.indexOf("Trident") && -1 == B.indexOf("MSIE")) { var b = new a, c = {}, d = c; b.port1.onmessage = function () { if (l(c.next)) { c = c.next; var a = c.cb; c.cb = null; a() } }; return function (a) { d.next = { cb: a }; d = d.next; b.port2.postMessage(0) } } return "undefined" !== typeof document && "onreadystatechange" in document.createElement("script") ? function (a) {
            var b =
            document.createElement("script"); b.onreadystatechange = function () { b.onreadystatechange = null; b.parentNode.removeChild(b); b = null; a(); a = null }; document.documentElement.appendChild(b)
        } : function (a) { k.setTimeout(a, 0) }
    }; var Kb = function (a, b) { Fb || Gb(); Hb || (Fb(), Hb = !0); Ib.push(new Jb(a, b)) }, Fb, Gb = function () { if (k.Promise && k.Promise.resolve) { var a = k.Promise.resolve(); Fb = function () { a.then(Lb) } } else Fb = function () { var a = Lb; !r(k.setImmediate) || k.Window && k.Window.prototype.setImmediate == k.setImmediate ? (Db || (Db = Eb()), Db(a)) : k.setImmediate(a) } }, Hb = !1, Ib = [], Lb = function () { for (; Ib.length;) { var a = Ib; Ib = []; for (var b = 0; b < a.length; b++) { var c = a[b]; try { c.fn.call(c.scope) } catch (d) { Cb(d) } } } Hb = !1 }, Jb = function (a, b) {
        this.fn = a; this.scope =
        b
    }; var Mb = function (a) { a.prototype.then = a.prototype.then; a.prototype.$goog_Thenable = !0 }, Nb = function (a) { if (!a) return !1; try { return !!a.$goog_Thenable } catch (b) { return !1 } }; var L = function (a, b) { this.state_ = 0; this.result_ = void 0; this.callbackEntries_ = this.parent_ = null; this.hadUnhandledRejection_ = this.executing_ = !1; try { var c = this; a.call(b, function (a) { J(c, 2, a) }, function (a) { if (!(a instanceof K)) try { if (a instanceof Error) throw a; throw Error("Promise rejected."); } catch (b) { } J(c, 3, a) }) } catch (d) { J(this, 3, d) } };
    L.prototype.then = function (a, b, c) { null != a && La(a, "opt_onFulfilled should be a function."); null != b && La(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"); return Ob(this, r(a) ? a : null, r(b) ? b : null, c) }; Mb(L); L.prototype.cancel = function (a) { 0 == this.state_ && Kb(function () { var b = new K(a); Pb(this, b) }, this) };
    var Pb = function (a, b) { if (0 == a.state_) if (a.parent_) { var c = a.parent_; if (c.callbackEntries_) { for (var d = 0, e = -1, g = 0, f; f = c.callbackEntries_[g]; g++) if (f = f.child) if (d++, f == a && (e = g), 0 <= e && 1 < d) break; 0 <= e && (0 == c.state_ && 1 == d ? Pb(c, b) : (d = c.callbackEntries_.splice(e, 1)[0], Qb(c, d, 3, b))) } } else J(a, 3, b) }, Sb = function (a, b) { a.callbackEntries_ && a.callbackEntries_.length || 2 != a.state_ && 3 != a.state_ || Rb(a); a.callbackEntries_ || (a.callbackEntries_ = []); a.callbackEntries_.push(b) }, Ob = function (a, b, c, d) {
        var e = {
            child: null, onFulfilled: null,
            onRejected: null
        }; e.child = new L(function (a, f) { e.onFulfilled = b ? function (c) { try { var e = b.call(d, c); a(e) } catch (M) { f(M) } } : a; e.onRejected = c ? function (b) { try { var e = c.call(d, b); !l(e) && b instanceof K ? f(b) : a(e) } catch (M) { f(M) } } : f }); e.child.parent_ = a; Sb(a, e); return e.child
    }; L.prototype.unblockAndFulfill_ = function (a) { z(1 == this.state_); this.state_ = 0; J(this, 2, a) }; L.prototype.unblockAndReject_ = function (a) { z(1 == this.state_); this.state_ = 0; J(this, 3, a) };
    var J = function (a, b, c) { if (0 == a.state_) { if (a == c) b = 3, c = new TypeError("Promise cannot resolve to itself"); else { if (Nb(c)) { a.state_ = 1; c.then(a.unblockAndFulfill_, a.unblockAndReject_, a); return } if (da(c)) try { var d = c.then; if (r(d)) { Tb(a, c, d); return } } catch (e) { b = 3, c = e } } a.result_ = c; a.state_ = b; Rb(a); 3 != b || c instanceof K || Ub(a, c) } }, Tb = function (a, b, c) { a.state_ = 1; var d = !1, e = function (b) { d || (d = !0, a.unblockAndFulfill_(b)) }, g = function (b) { d || (d = !0, a.unblockAndReject_(b)) }; try { c.call(b, e, g) } catch (f) { g(f) } }, Rb = function (a) {
        a.executing_ ||
        (a.executing_ = !0, Kb(a.executeCallbacks_, a))
    }; L.prototype.executeCallbacks_ = function () { for (; this.callbackEntries_ && this.callbackEntries_.length;) { var a = this.callbackEntries_; this.callbackEntries_ = []; for (var b = 0; b < a.length; b++) Qb(this, a[b], this.state_, this.result_) } this.executing_ = !1 };
    var Qb = function (a, b, c, d) { if (2 == c) b.onFulfilled(d); else { if (b.child) for (; a && a.hadUnhandledRejection_; a = a.parent_) a.hadUnhandledRejection_ = !1; b.onRejected(d) } }, Ub = function (a, b) { a.hadUnhandledRejection_ = !0; Kb(function () { a.hadUnhandledRejection_ && Vb.call(null, b) }) }, Vb = Cb, K = function (a) { y.call(this, a) }; v(K, y); K.prototype.name = "cancel";/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
    var N = function (a, b) { this.sequence_ = []; this.onCancelFunction_ = a; this.defaultScope_ = b || null; this.hadError_ = this.fired_ = !1; this.result_ = void 0; this.silentlyCanceled_ = this.blocking_ = this.blocked_ = !1; this.unhandledErrorId_ = 0; this.parent_ = null; this.branches_ = 0 };
    N.prototype.cancel = function (a) { if (this.fired_) this.result_ instanceof N && this.result_.cancel(); else { if (this.parent_) { var b = this.parent_; delete this.parent_; a ? b.cancel(a) : (b.branches_--, 0 >= b.branches_ && b.cancel()) } this.onCancelFunction_ ? this.onCancelFunction_.call(this.defaultScope_, this) : this.silentlyCanceled_ = !0; this.fired_ || Wb(this, new Xb) } }; N.prototype.continue_ = function (a, b) { this.blocked_ = !1; Yb(this, a, b) };
    var Yb = function (a, b, c) { a.fired_ = !0; a.result_ = c; a.hadError_ = !b; Zb(a) }, ac = function (a) { if (a.fired_) { if (!a.silentlyCanceled_) throw new $b; a.silentlyCanceled_ = !1 } }; N.prototype.callback = function (a) { ac(this); bc(a); Yb(this, !0, a) }; var Wb = function (a, b) { ac(a); bc(b); Yb(a, !1, b) }, bc = function (a) { z(!(a instanceof N), "An execution sequence may not be initiated with a blocking Deferred.") }, cc = function (a, b, c, d) { z(!a.blocking_, "Blocking Deferreds can not be re-used"); a.sequence_.push([b, c, d]); a.fired_ && Zb(a) };
    N.prototype.then = function (a, b, c) { var d, e, g = new L(function (a, b) { d = a; e = b }); cc(this, d, function (a) { a instanceof Xb ? g.cancel() : e(a) }); return g.then(a, b, c) }; Mb(N);
    var dc = function (a) { return Pa(a.sequence_, function (a) { return r(a[1]) }) }, Zb = function (a) {
        if (a.unhandledErrorId_ && a.fired_ && dc(a)) { var b = a.unhandledErrorId_, c = ec[b]; c && (k.clearTimeout(c.id_), delete ec[b]); a.unhandledErrorId_ = 0 } a.parent_ && (a.parent_.branches_--, delete a.parent_); for (var b = a.result_, d = c = !1; a.sequence_.length && !a.blocked_;) {
            var e = a.sequence_.shift(), g = e[0], f = e[1], e = e[2]; if (g = a.hadError_ ? f : g) try {
                var m = g.call(e || a.defaultScope_, b); l(m) && (a.hadError_ = a.hadError_ && (m == b || m instanceof Error),
                a.result_ = b = m); Nb(b) && (d = !0, a.blocked_ = !0)
            } catch (D) { b = D, a.hadError_ = !0, dc(a) || (c = !0) }
        } a.result_ = b; d && (m = t(a.continue_, a, !0), d = t(a.continue_, a, !1), b instanceof N ? (cc(b, m, d), b.blocking_ = !0) : b.then(m, d)); c && (b = new fc(b), ec[b.id_] = b, a.unhandledErrorId_ = b.id_)
    }, $b = function () { y.call(this) }; v($b, y); $b.prototype.message = "Deferred has already fired"; $b.prototype.name = "AlreadyCalledError"; var Xb = function () { y.call(this) }; v(Xb, y); Xb.prototype.message = "Deferred was canceled"; Xb.prototype.name = "CanceledError";
    var fc = function (a) { this.id_ = k.setTimeout(t(this.throwError, this), 0); this.error_ = a }; fc.prototype.throwError = function () { z(ec[this.id_], "Cannot throw an error that is not scheduled."); delete ec[this.id_]; throw this.error_; }; var ec = {}; var kc = function (a) {
        var b = {}, c = b.document || document, d = document.createElement("SCRIPT"), e = { script_: d, timeout_: void 0 }, g = new N(gc, e), f = null, m = null != b.timeout ? b.timeout : 5E3; 0 < m && (f = window.setTimeout(function () { hc(d, !0); Wb(g, new ic(1, "Timeout reached for loading script " + a)) }, m), e.timeout_ = f); d.onload = d.onreadystatechange = function () { d.readyState && "loaded" != d.readyState && "complete" != d.readyState || (hc(d, b.cleanupWhenDone || !1, f), g.callback(null)) }; d.onerror = function () {
            hc(d, !0, f); Wb(g, new ic(0, "Error while loading script " +
            a))
        }; vb(d, { type: "text/javascript", charset: "UTF-8", src: a }); jc(c).appendChild(d); return g
    }, jc = function (a) { var b = a.getElementsByTagName("HEAD"); return b && 0 != b.length ? b[0] : a.documentElement }, gc = function () { if (this && this.script_) { var a = this.script_; a && "SCRIPT" == a.tagName && hc(a, !0, this.timeout_) } }, hc = function (a, b, c) { null != c && k.clearTimeout(c); a.onload = ba; a.onerror = ba; a.onreadystatechange = ba; b && window.setTimeout(function () { Bb(a) }, 0) }, ic = function (a, b) {
        var c = "Jsloader error (code #" + a + ")"; b && (c += ": " + b); y.call(this,
        c); this.code = a
    }; v(ic, y); var lc = function (a) { lc[" "](a); return a }; lc[" "] = ba; var mc = !C || C && 9 <= hb, nc = C && !G("9"); !F || G("528"); E && G("1.9b") || C && G("8") || cb && G("9.5") || F && G("528"); E && !G("8") || C && G("9"); var O = function (a, b) { this.type = a; this.currentTarget = this.target = b; this.defaultPrevented = this.propagationStopped_ = !1; this.returnValue_ = !0 }; O.prototype.disposeInternal = function () { }; O.prototype.dispose = function () { }; O.prototype.preventDefault = function () { this.defaultPrevented = !0; this.returnValue_ = !1 }; var oc = function (a, b) {
        O.call(this, a ? a.type : ""); this.relatedTarget = this.currentTarget = this.target = null; this.charCode = this.keyCode = this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0; this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1; this.event_ = this.state = null; if (a) {
            this.event_ = a; var c = this.type = a.type; this.target = a.target || a.srcElement; this.currentTarget = b; var d = a.relatedTarget; if (d) { if (E) { var e; t: { try { lc(d.nodeName); e = !0; break t } catch (g) { } e = !1 } e || (d = null) } } else "mouseover" ==
            c ? d = a.fromElement : "mouseout" == c && (d = a.toElement); this.relatedTarget = d; Object.defineProperties ? Object.defineProperties(this, { offsetX: { configurable: !0, enumerable: !0, get: this.getOffsetX_, set: this.setOffsetX_ }, offsetY: { configurable: !0, enumerable: !0, get: this.getOffsetY_, set: this.setOffsetY_ } }) : (this.offsetX = this.getOffsetX_(), this.offsetY = this.getOffsetY_()); this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX; this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY; this.screenX = a.screenX || 0; this.screenY = a.screenY ||
            0; this.button = a.button; this.keyCode = a.keyCode || 0; this.charCode = a.charCode || ("keypress" == c ? a.keyCode : 0); this.ctrlKey = a.ctrlKey; this.altKey = a.altKey; this.shiftKey = a.shiftKey; this.metaKey = a.metaKey; this.state = a.state; a.defaultPrevented && this.preventDefault()
        }
    }; v(oc, O); h = oc.prototype; h.preventDefault = function () { oc.superClass_.preventDefault.call(this); var a = this.event_; if (a.preventDefault) a.preventDefault(); else if (a.returnValue = !1, nc) try { if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1 } catch (b) { } };
    h.disposeInternal = function () { }; h.getOffsetX_ = function () { return F || void 0 !== this.event_.offsetX ? this.event_.offsetX : this.event_.layerX }; h.setOffsetX_ = function (a) { Object.defineProperties(this, { offsetX: { writable: !0, enumerable: !0, configurable: !0, value: a } }) }; h.getOffsetY_ = function () { return F || void 0 !== this.event_.offsetY ? this.event_.offsetY : this.event_.layerY }; h.setOffsetY_ = function (a) { Object.defineProperties(this, { offsetY: { writable: !0, enumerable: !0, configurable: !0, value: a } }) }; var pc = "closure_listenable_" + (1E6 * Math.random() | 0), qc = 0; var rc = function (a, b, c, d, e) { this.listener = a; this.proxy = null; this.src = b; this.type = c; this.capture = !!d; this.handler = e; this.key = ++qc; this.removed = this.callOnce = !1 }, sc = function (a) { a.removed = !0; a.listener = null; a.proxy = null; a.src = null; a.handler = null }; var P = function (a) { this.src = a; this.listeners = {}; this.typeCount_ = 0 }; P.prototype.add = function (a, b, c, d, e) { var g = a.toString(); a = this.listeners[g]; a || (a = this.listeners[g] = [], this.typeCount_++); var f = tc(a, b, d, e); -1 < f ? (b = a[f], c || (b.callOnce = !1)) : (b = new rc(b, this.src, g, !!d, e), b.callOnce = c, a.push(b)); return b };
    P.prototype.remove = function (a, b, c, d) { a = a.toString(); if (!(a in this.listeners)) return !1; var e = this.listeners[a]; b = tc(e, b, c, d); return -1 < b ? (sc(e[b]), z(null != e.length), A.splice.call(e, b, 1), 0 == e.length && (delete this.listeners[a], this.typeCount_--), !0) : !1 }; var uc = function (a, b) { var c = b.type; if (!(c in a.listeners)) return !1; var d = Qa(a.listeners[c], b); d && (sc(b), 0 == a.listeners[c].length && (delete a.listeners[c], a.typeCount_--)); return d };
    P.prototype.removeAll = function (a) { a = a && a.toString(); var b = 0, c; for (c in this.listeners) if (!a || c == a) { for (var d = this.listeners[c], e = 0; e < d.length; e++)++b, sc(d[e]); delete this.listeners[c]; this.typeCount_-- } return b }; P.prototype.getListener = function (a, b, c, d) { a = this.listeners[a.toString()]; var e = -1; a && (e = tc(a, b, c, d)); return -1 < e ? a[e] : null }; var tc = function (a, b, c, d) { for (var e = 0; e < a.length; ++e) { var g = a[e]; if (!g.removed && g.listener == b && g.capture == !!c && g.handler == d) return e } return -1 }; var vc = "closure_lm_" + (1E6 * Math.random() | 0), wc = {}, xc = 0, yc = function (a, b, c, d, e) { if (p(b)) { for (var g = 0; g < b.length; g++) yc(a, b[g], c, d, e); return null } c = zc(c); if (a && a[pc]) a = a.listen(b, c, d, e); else { if (!b) throw Error("Invalid event type"); var g = !!d, f = Ac(a); f || (a[vc] = f = new P(a)); c = f.add(b, c, !1, d, e); c.proxy || (d = Bc(), c.proxy = d, d.src = a, d.listener = c, a.addEventListener ? a.addEventListener(b.toString(), d, g) : a.attachEvent(Cc(b.toString()), d), xc++); a = c } return a }, Bc = function () {
        var a = Dc, b = mc ? function (c) {
            return a.call(b.src,
            b.listener, c)
        } : function (c) { c = a.call(b.src, b.listener, c); if (!c) return c }; return b
    }, Ec = function (a, b, c, d, e) { if (p(b)) for (var g = 0; g < b.length; g++) Ec(a, b[g], c, d, e); else c = zc(c), a && a[pc] ? a.unlisten(b, c, d, e) : a && (a = Ac(a)) && (b = a.getListener(b, c, !!d, e)) && Fc(b) }, Fc = function (a) {
        if ("number" == typeof a || !a || a.removed) return !1; var b = a.src; if (b && b[pc]) return uc(b.eventTargetListeners_, a); var c = a.type, d = a.proxy; b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(Cc(c), d); xc--; (c = Ac(b)) ?
        (uc(c, a), 0 == c.typeCount_ && (c.src = null, b[vc] = null)) : sc(a); return !0
    }, Cc = function (a) { return a in wc ? wc[a] : wc[a] = "on" + a }, Hc = function (a, b, c, d) { var e = !0; if (a = Ac(a)) if (b = a.listeners[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) { var g = b[a]; g && g.capture == c && !g.removed && (g = Gc(g, d), e = e && !1 !== g) } return e }, Gc = function (a, b) { var c = a.listener, d = a.handler || a.src; a.callOnce && Fc(a); return c.call(d, b) }, Dc = function (a, b) {
        if (a.removed) return !0; if (!mc) {
            var c; if (!(c = b)) t: {
                c = ["window", "event"]; for (var d = k, e; e = c.shift() ;) if (null !=
                d[e]) d = d[e]; else { c = null; break t } c = d
            } e = c; c = new oc(e, this); d = !0; if (!(0 > e.keyCode || void 0 != e.returnValue)) { t: { var g = !1; if (0 == e.keyCode) try { e.keyCode = -1; break t } catch (f) { g = !0 } if (g || void 0 == e.returnValue) e.returnValue = !0 } e = []; for (g = c.currentTarget; g; g = g.parentNode) e.push(g); for (var g = a.type, m = e.length - 1; !c.propagationStopped_ && 0 <= m; m--) { c.currentTarget = e[m]; var D = Hc(e[m], g, !0, c), d = d && D } for (m = 0; !c.propagationStopped_ && m < e.length; m++) c.currentTarget = e[m], D = Hc(e[m], g, !1, c), d = d && D } return d
        } return Gc(a, new oc(b,
        this))
    }, Ac = function (a) { a = a[vc]; return a instanceof P ? a : null }, Ic = "__closure_events_fn_" + (1E9 * Math.random() >>> 0), zc = function (a) { z(a, "Listener can not be null."); if (r(a)) return a; z(a.handleEvent, "An object listener must have handleEvent method."); a[Ic] || (a[Ic] = function (b) { return a.handleEvent(b) }); return a[Ic] }; var Q = function (a) { H.call(this); this.handler_ = a; this.keys_ = {} }; v(Q, H); var Jc = []; h = Q.prototype; h.listen = function (a, b, c, d) { p(b) || (b && (Jc[0] = b.toString()), b = Jc); for (var e = 0; e < b.length; e++) { var g = yc(a, b[e], c || this.handleEvent, d || !1, this.handler_ || this); if (!g) break; this.keys_[g.key] = g } return this };
    h.unlisten = function (a, b, c, d, e) { if (p(b)) for (var g = 0; g < b.length; g++) this.unlisten(a, b[g], c, d, e); else c = c || this.handleEvent, e = e || this.handler_ || this, c = zc(c), d = !!d, b = a && a[pc] ? a.getListener(b, c, d, e) : a ? (a = Ac(a)) ? a.getListener(b, c, d, e) : null : null, b && (Fc(b), delete this.keys_[b.key]); return this }; h.removeAll = function () { Ta(this.keys_, Fc); this.keys_ = {} }; h.disposeInternal = function () { Q.superClass_.disposeInternal.call(this); this.removeAll() };
    h.handleEvent = function () { throw Error("EventHandler.handleEvent not implemented"); }; var R = function () { H.call(this); this.eventTargetListeners_ = new P(this); this.actualEventTarget_ = this; this.parentEventTarget_ = null }; v(R, H); R.prototype[pc] = !0; h = R.prototype; h.setParentEventTarget = function (a) { this.parentEventTarget_ = a }; h.addEventListener = function (a, b, c, d) { yc(this, a, b, c, d) }; h.removeEventListener = function (a, b, c, d) { Ec(this, a, b, c, d) };
    h.dispatchEvent = function (a) {
        Kc(this); var b, c = this.parentEventTarget_; if (c) { b = []; for (var d = 1; c; c = c.parentEventTarget_) b.push(c), z(1E3 > ++d, "infinite loop") } c = this.actualEventTarget_; d = a.type || a; if (q(a)) a = new O(a, c); else if (a instanceof O) a.target = a.target || c; else { var e = a; a = new O(d, c); Za(a, e) } var e = !0, g; if (b) for (var f = b.length - 1; !a.propagationStopped_ && 0 <= f; f--) g = a.currentTarget = b[f], e = Lc(g, d, !0, a) && e; a.propagationStopped_ || (g = a.currentTarget = c, e = Lc(g, d, !0, a) && e, a.propagationStopped_ || (e = Lc(g, d, !1, a) &&
        e)); if (b) for (f = 0; !a.propagationStopped_ && f < b.length; f++) g = a.currentTarget = b[f], e = Lc(g, d, !1, a) && e; return e
    }; h.disposeInternal = function () { R.superClass_.disposeInternal.call(this); this.eventTargetListeners_ && this.eventTargetListeners_.removeAll(void 0); this.parentEventTarget_ = null }; h.listen = function (a, b, c, d) { Kc(this); return this.eventTargetListeners_.add(String(a), b, !1, c, d) }; h.unlisten = function (a, b, c, d) { return this.eventTargetListeners_.remove(String(a), b, c, d) };
    var Lc = function (a, b, c, d) { b = a.eventTargetListeners_.listeners[String(b)]; if (!b) return !0; b = b.concat(); for (var e = !0, g = 0; g < b.length; ++g) { var f = b[g]; if (f && !f.removed && f.capture == c) { var m = f.listener, D = f.handler || f.src; f.callOnce && uc(a.eventTargetListeners_, f); e = !1 !== m.call(D, d) && e } } return e && 0 != d.returnValue_ }; R.prototype.getListener = function (a, b, c, d) { return this.eventTargetListeners_.getListener(String(a), b, c, d) }; var Kc = function (a) { z(a.eventTargetListeners_, "Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?") }; var S = function (a) { R.call(this); this.imageIdToRequestMap_ = {}; this.imageIdToImageMap_ = {}; this.handler_ = new Q(this); this.parent_ = a }; v(S, R); var Mc = [C && !G("11") ? "readystatechange" : "load", "abort", "error"], Nc = function (a, b, c) { (c = q(c) ? c : c.src) && (a.imageIdToRequestMap_[b] = { src: c, corsRequestType: l(void 0) ? void 0 : null }) };
    S.prototype.start = function () { var a = this.imageIdToRequestMap_; Na(Ua(a), function (b) { var c = a[b]; if (c && (delete a[b], !this.disposed_)) { var d; d = this.parent_ ? sb(this.parent_).createDom("img") : new Image; c.corsRequestType && (d.crossOrigin = c.corsRequestType); this.handler_.listen(d, Mc, this.onNetworkEvent_); this.imageIdToImageMap_[b] = d; d.id = b; d.src = c.src } }, this) };
    S.prototype.onNetworkEvent_ = function (a) {
        var b = a.currentTarget; if (b) {
            if ("readystatechange" == a.type) if ("complete" == b.readyState) a.type = "load"; else return; "undefined" == typeof b.naturalWidth && ("load" == a.type ? (b.naturalWidth = b.width, b.naturalHeight = b.height) : (b.naturalWidth = 0, b.naturalHeight = 0)); this.dispatchEvent({ type: a.type, target: b }); !this.disposed_ && (a = b.id, delete this.imageIdToRequestMap_[a], b = this.imageIdToImageMap_[a]) && (delete this.imageIdToImageMap_[a], this.handler_.unlisten(b, Mc, this.onNetworkEvent_),
            Va(this.imageIdToImageMap_) && Va(this.imageIdToRequestMap_) && this.dispatchEvent("complete"))
        }
    }; S.prototype.disposeInternal = function () { delete this.imageIdToRequestMap_; delete this.imageIdToImageMap_; ob(this.handler_); S.superClass_.disposeInternal.call(this) }; var Oc = {}; var T = function () { }; T.getInstance = function () { return T.instance_ ? T.instance_ : T.instance_ = new T }; T.prototype.nextId_ = 0; var U = function (a) { R.call(this); this.dom_ = a || sb(); this.id_ = null; this.inDocument_ = !1; this.element_ = null; this.googUiComponentHandler_ = void 0; this.childIndex_ = this.children_ = this.parent_ = null; this.wasDecorated_ = !1 }; v(U, R); h = U.prototype; h.idGenerator_ = T.getInstance(); h.getElement = function () { return this.element_ }; h.setParentEventTarget = function (a) { if (this.parent_ && this.parent_ != a) throw Error("Method not supported"); U.superClass_.setParentEventTarget.call(this, a) }; h.getDomHelper = function () { return this.dom_ };
    h.createDom = function () { this.element_ = this.dom_.createElement("div") };
    var Qc = function (a, b) { if (a.inDocument_) throw Error("Component already rendered"); a.element_ || a.createDom(); b ? b.insertBefore(a.element_, null) : a.dom_.document_.body.appendChild(a.element_); a.parent_ && !a.parent_.inDocument_ || Pc(a) }, Pc = function (a) { a.inDocument_ = !0; Rc(a, function (a) { !a.inDocument_ && a.getElement() && Pc(a) }) }, Sc = function (a) { Rc(a, function (a) { a.inDocument_ && Sc(a) }); a.googUiComponentHandler_ && a.googUiComponentHandler_.removeAll(); a.inDocument_ = !1 };
    U.prototype.disposeInternal = function () { this.inDocument_ && Sc(this); this.googUiComponentHandler_ && (this.googUiComponentHandler_.dispose(), delete this.googUiComponentHandler_); Rc(this, function (a) { a.dispose() }); !this.wasDecorated_ && this.element_ && Bb(this.element_); this.parent_ = this.element_ = this.childIndex_ = this.children_ = null; U.superClass_.disposeInternal.call(this) }; var Rc = function (a, b) { a.children_ && Na(a.children_, b, void 0) };
    U.prototype.removeChild = function (a, b) { if (a) { var c = q(a) ? a : a.id_ || (a.id_ = ":" + (a.idGenerator_.nextId_++).toString(36)), d; this.childIndex_ && c ? (d = this.childIndex_, d = (c in d ? d[c] : void 0) || null) : d = null; a = d; if (c && a) { d = this.childIndex_; c in d && delete d[c]; Qa(this.children_, a); b && (Sc(a), a.element_ && Bb(a.element_)); c = a; if (null == c) throw Error("Unable to set parent component"); c.parent_ = null; U.superClass_.setParentEventTarget.call(c, null) } } if (!a) throw Error("Child is not in parent component"); return a }; var V = function (a, b, c) { U.call(this, c); this.captchaImage_ = a; this.adImage_ = b && 300 == b.naturalWidth && 57 == b.naturalHeight ? b : null }; v(V, U); V.prototype.createDom = function () { V.superClass_.createDom.call(this); var a = this.getElement(); this.captchaImage_.alt = W.image_alt_text; this.getDomHelper().appendChild(a, this.captchaImage_); this.adImage_ && (this.adImage_.alt = W.image_alt_text, this.getDomHelper().appendChild(a, this.adImage_), this.adImage_ && Tc(this.adImage_) && (a.innerHTML += '<div id="recaptcha-ad-choices"><div class="recaptcha-ad-choices-collapsed"><img height="15" width="30" alt="AdChoices" border="0" src="//www.gstatic.com/recaptcha/api/img/adicon.png"/></div><div class="recaptcha-ad-choices-expanded"><a href="https://support.google.com/adsense/troubleshooter/1631343" target="_blank"><img height="15" width="75" alt="AdChoices" border="0" src="//www.gstatic.com/recaptcha/api/img/adchoices.png"/></a></div></div>')) };
    var Tc = function (a) { var b = Uc(a, "visibility"); a = Uc(a, "display"); return "hidden" != b && "none" != a }, Uc = function (a, b) {
        var c; t: { c = rb(a); if (c.defaultView && c.defaultView.getComputedStyle && (c = c.defaultView.getComputedStyle(a, null))) { c = c[b] || c.getPropertyValue(b) || ""; break t } c = "" } if (!(c = c || (a.currentStyle ? a.currentStyle[b] : null)) && (c = a.style[Fa(b)], "undefined" === typeof c)) {
            c = a.style; var d = Oc[b]; if (!d) {
                var e = Fa(b), d = e; void 0 === a.style[e] && (e = (F ? "Webkit" : E ? "Moz" : C ? "ms" : cb ? "O" : null) + Ga(e), void 0 !== a.style[e] && (d =
                e)); Oc[b] = d
            } c = c[d] || ""
        } return c
    }; V.prototype.disposeInternal = function () { delete this.captchaImage_; delete this.adImage_; V.superClass_.disposeInternal.call(this) }; var Vc = function (a, b, c) { H.call(this); this.listener_ = a; this.interval_ = b || 0; this.handler_ = c; this.callback_ = t(this.doAction_, this) }; v(Vc, H); h = Vc.prototype; h.id_ = 0; h.disposeInternal = function () { Vc.superClass_.disposeInternal.call(this); this.stop(); delete this.listener_; delete this.handler_ };
    h.start = function (a) { this.stop(); var b = this.callback_; a = l(a) ? a : this.interval_; if (!r(b)) if (b && "function" == typeof b.handleEvent) b = t(b.handleEvent, b); else throw Error("Invalid listener argument"); this.id_ = 2147483647 < a ? -1 : k.setTimeout(b, a || 0) }; h.stop = function () { this.isActive() && k.clearTimeout(this.id_); this.id_ = 0 }; h.isActive = function () { return 0 != this.id_ }; h.doAction_ = function () { this.id_ = 0; this.listener_ && this.listener_.call(this.handler_) }; var Wc = function (a, b) { H.call(this); this.listener_ = a; this.handler_ = b; this.delay_ = new Vc(t(this.onTick_, this), 0, this) }; v(Wc, H); h = Wc.prototype; h.interval_ = 0; h.runUntil_ = 0; h.disposeInternal = function () { this.delay_.dispose(); delete this.listener_; delete this.handler_; Wc.superClass_.disposeInternal.call(this) }; h.start = function (a, b) { this.stop(); var c = b || 0; this.interval_ = Math.max(a || 0, 0); this.runUntil_ = 0 > c ? -1 : ha() + c; this.delay_.start(0 > c ? this.interval_ : Math.min(this.interval_, c)) }; h.stop = function () { this.delay_.stop() };
    h.isActive = function () { return this.delay_.isActive() }; h.onSuccess = function () { }; h.onFailure = function () { }; h.onTick_ = function () { if (this.listener_.call(this.handler_)) this.onSuccess(); else if (0 > this.runUntil_) this.delay_.start(this.interval_); else { var a = this.runUntil_ - ha(); if (0 >= a) this.onFailure(); else this.delay_.start(Math.min(this.interval_, a)) } }; var Xc = { sanitizedContentKindHtml: !0 }, Yc = { sanitizedContentKindText: !0 }, Zc = function () { throw Error("Do not instantiate directly"); }; Zc.prototype.contentDir = null; Zc.prototype.toString = function () { return this.content }; var dd = function (a) { var b = $c; z(b, "Soy template may not be null."); var c = sb().createElement("DIV"); a = ad(b(a || bd, void 0, void 0)); b = a.match(cd); z(!b, "This template starts with a %s, which cannot be a child of a <div>, as required by soy internals. Consider using goog.soy.renderElement instead.\nTemplate output: %s", b && b[0], a); c.innerHTML = a; return 1 == c.childNodes.length && (a = c.firstChild, 1 == a.nodeType) ? a : c }, ad = function (a) {
        if (!da(a)) return String(a); if (a instanceof Zc) {
            if (a.contentKind === Xc) return Ka(a.content);
            if (a.contentKind === Yc) return Da(a.content)
        } Ja("Soy template output is unsafe for use as HTML: " + a); return "zSoyz"
    }, cd = /^<(body|caption|col|colgroup|head|html|tr|td|tbody|thead|tfoot)>/i, bd = {}; C && G(8); var ed = function () { Zc.call(this) }; v(ed, Zc); ed.prototype.contentKind = Xc; var fd = function (a) { function b(a) { this.content = a } b.prototype = a.prototype; return function (a, d) { var e = new b(String(a)); void 0 !== d && (e.contentDir = d); return e } }(ed); (function (a) { function b(a) { this.content = a } b.prototype = a.prototype; return function (a, d) { var e = String(a); if (!e) return ""; e = new b(e); void 0 !== d && (e.contentDir = d); return e } })(ed);
    var gd = { "\x00": "\\x00", "\b": "\\x08", "\t": "\\t", "\n": "\\n", "\x0B": "\\x0b", "\f": "\\f", "\r": "\\r", '"': "\\x22", $: "\\x24", "&": "\\x26", "'": "\\x27", "(": "\\x28", ")": "\\x29", "*": "\\x2a", "+": "\\x2b", ",": "\\x2c", "-": "\\x2d", ".": "\\x2e", "/": "\\/", ":": "\\x3a", "<": "\\x3c", "=": "\\x3d", ">": "\\x3e", "?": "\\x3f", "[": "\\x5b", "\\": "\\\\", "]": "\\x5d", "^": "\\x5e", "{": "\\x7b", "|": "\\x7c", "}": "\\x7d", "\u0085": "\\x85", "\u2028": "\\u2028", "\u2029": "\\u2029" }, hd = function (a) { return gd[a] }, id = /[\x00\x08-\x0d\x22\x26\x27\/\x3c-\x3e\\\x85\u2028\u2029]/g; var $c = function (a) { return fd('<script type="text/javascript">var challenge = \'' + String(a.challenge).replace(id, hd) + "'; var publisherId = '" + String(a.publisherId).replace(id, hd) + "';" + ("ca-mongoogle" == a.publisherId ? 'google_page_url = "3pcerttesting.com/dab/recaptcha.html";' : "") + "\n    google_ad_client = publisherId;\n    google_ad_type = 'html';\n    google_ad_output = 'js';\n    google_image_size = '300x57';\n    google_captcha_token = challenge;\n    google_ad_request_done = function(ad) {\n      window.parent.recaptcha.ads.adutils.googleAdRequestDone(ad);\n    };\n    \x3c/script><script type=\"text/javascript\" src=\"//pagead2.googlesyndication.com/pagead/show_ads.js\">\x3c/script>") };
    $c.soyTemplateName = "recaptcha.soy.ads.iframeAdsLoader.main"; var Wa = function () { var a = k.google_ad; return !!(a && a.token && a.imageAdUrl && a.hashedAnswer && a.salt && a.delayedImpressionUrl && a.engagementUrl) }, jd = function () { k.google_ad && (k.google_ad = null) }, kd = function (a) { a = a || document.body; var b = k.google_ad; b && b.searchUpliftUrl && (b = xb("iframe", { src: 'data:text/html;charset=utf-8,<body><img src="https://' + b.searchUpliftUrl + '"></img></body>', style: "display:none" }), a.appendChild(b)) }, ld = 0, md = function (a) { var b = new S; Nc(b, "recaptcha-url-" + ld++, a); b.start() }, nd = function (a, b) {
        var c =
        RecaptchaState.publisher_id; jd(); var d = xb("iframe", { id: "recaptcha-loader-" + ld++, style: "display: none" }); document.body.appendChild(d); var e = d.contentWindow ? d.contentWindow.document : d.contentDocument; e.open("text/html", "replace"); e.write(dd({ challenge: a, publisherId: c }).innerHTML); e.close(); c = new Wc(function () { return !!k.google_ad }); c.onSuccess = function () { Bb(d); b() }; c.onFailure = function () { Bb(d); b() }; c.start(50, 2E3)
    }; u("recaptcha.ads.adutils.googleAdRequestDone", function (a) { k.google_ad = a }); var od = function () { this.blockSize = -1 }; var pd = function () { this.blockSize = -1; this.blockSize = 64; this.chain_ = Array(4); this.block_ = Array(this.blockSize); this.totalLength_ = this.blockLength_ = 0; this.reset() }; v(pd, od); pd.prototype.reset = function () { this.chain_[0] = 1732584193; this.chain_[1] = 4023233417; this.chain_[2] = 2562383102; this.chain_[3] = 271733878; this.totalLength_ = this.blockLength_ = 0 };
    var qd = function (a, b, c) {
        c || (c = 0); var d = Array(16); if (q(b)) for (var e = 0; 16 > e; ++e) d[e] = b.charCodeAt(c++) | b.charCodeAt(c++) << 8 | b.charCodeAt(c++) << 16 | b.charCodeAt(c++) << 24; else for (e = 0; 16 > e; ++e) d[e] = b[c++] | b[c++] << 8 | b[c++] << 16 | b[c++] << 24; b = a.chain_[0]; c = a.chain_[1]; var e = a.chain_[2], g = a.chain_[3], f = 0, f = b + (g ^ c & (e ^ g)) + d[0] + 3614090360 & 4294967295; b = c + (f << 7 & 4294967295 | f >>> 25); f = g + (e ^ b & (c ^ e)) + d[1] + 3905402710 & 4294967295; g = b + (f << 12 & 4294967295 | f >>> 20); f = e + (c ^ g & (b ^ c)) + d[2] + 606105819 & 4294967295; e = g + (f << 17 & 4294967295 |
        f >>> 15); f = c + (b ^ e & (g ^ b)) + d[3] + 3250441966 & 4294967295; c = e + (f << 22 & 4294967295 | f >>> 10); f = b + (g ^ c & (e ^ g)) + d[4] + 4118548399 & 4294967295; b = c + (f << 7 & 4294967295 | f >>> 25); f = g + (e ^ b & (c ^ e)) + d[5] + 1200080426 & 4294967295; g = b + (f << 12 & 4294967295 | f >>> 20); f = e + (c ^ g & (b ^ c)) + d[6] + 2821735955 & 4294967295; e = g + (f << 17 & 4294967295 | f >>> 15); f = c + (b ^ e & (g ^ b)) + d[7] + 4249261313 & 4294967295; c = e + (f << 22 & 4294967295 | f >>> 10); f = b + (g ^ c & (e ^ g)) + d[8] + 1770035416 & 4294967295; b = c + (f << 7 & 4294967295 | f >>> 25); f = g + (e ^ b & (c ^ e)) + d[9] + 2336552879 & 4294967295; g = b + (f << 12 & 4294967295 |
        f >>> 20); f = e + (c ^ g & (b ^ c)) + d[10] + 4294925233 & 4294967295; e = g + (f << 17 & 4294967295 | f >>> 15); f = c + (b ^ e & (g ^ b)) + d[11] + 2304563134 & 4294967295; c = e + (f << 22 & 4294967295 | f >>> 10); f = b + (g ^ c & (e ^ g)) + d[12] + 1804603682 & 4294967295; b = c + (f << 7 & 4294967295 | f >>> 25); f = g + (e ^ b & (c ^ e)) + d[13] + 4254626195 & 4294967295; g = b + (f << 12 & 4294967295 | f >>> 20); f = e + (c ^ g & (b ^ c)) + d[14] + 2792965006 & 4294967295; e = g + (f << 17 & 4294967295 | f >>> 15); f = c + (b ^ e & (g ^ b)) + d[15] + 1236535329 & 4294967295; c = e + (f << 22 & 4294967295 | f >>> 10); f = b + (e ^ g & (c ^ e)) + d[1] + 4129170786 & 4294967295; b = c + (f <<
        5 & 4294967295 | f >>> 27); f = g + (c ^ e & (b ^ c)) + d[6] + 3225465664 & 4294967295; g = b + (f << 9 & 4294967295 | f >>> 23); f = e + (b ^ c & (g ^ b)) + d[11] + 643717713 & 4294967295; e = g + (f << 14 & 4294967295 | f >>> 18); f = c + (g ^ b & (e ^ g)) + d[0] + 3921069994 & 4294967295; c = e + (f << 20 & 4294967295 | f >>> 12); f = b + (e ^ g & (c ^ e)) + d[5] + 3593408605 & 4294967295; b = c + (f << 5 & 4294967295 | f >>> 27); f = g + (c ^ e & (b ^ c)) + d[10] + 38016083 & 4294967295; g = b + (f << 9 & 4294967295 | f >>> 23); f = e + (b ^ c & (g ^ b)) + d[15] + 3634488961 & 4294967295; e = g + (f << 14 & 4294967295 | f >>> 18); f = c + (g ^ b & (e ^ g)) + d[4] + 3889429448 & 4294967295; c =
        e + (f << 20 & 4294967295 | f >>> 12); f = b + (e ^ g & (c ^ e)) + d[9] + 568446438 & 4294967295; b = c + (f << 5 & 4294967295 | f >>> 27); f = g + (c ^ e & (b ^ c)) + d[14] + 3275163606 & 4294967295; g = b + (f << 9 & 4294967295 | f >>> 23); f = e + (b ^ c & (g ^ b)) + d[3] + 4107603335 & 4294967295; e = g + (f << 14 & 4294967295 | f >>> 18); f = c + (g ^ b & (e ^ g)) + d[8] + 1163531501 & 4294967295; c = e + (f << 20 & 4294967295 | f >>> 12); f = b + (e ^ g & (c ^ e)) + d[13] + 2850285829 & 4294967295; b = c + (f << 5 & 4294967295 | f >>> 27); f = g + (c ^ e & (b ^ c)) + d[2] + 4243563512 & 4294967295; g = b + (f << 9 & 4294967295 | f >>> 23); f = e + (b ^ c & (g ^ b)) + d[7] + 1735328473 & 4294967295;
        e = g + (f << 14 & 4294967295 | f >>> 18); f = c + (g ^ b & (e ^ g)) + d[12] + 2368359562 & 4294967295; c = e + (f << 20 & 4294967295 | f >>> 12); f = b + (c ^ e ^ g) + d[5] + 4294588738 & 4294967295; b = c + (f << 4 & 4294967295 | f >>> 28); f = g + (b ^ c ^ e) + d[8] + 2272392833 & 4294967295; g = b + (f << 11 & 4294967295 | f >>> 21); f = e + (g ^ b ^ c) + d[11] + 1839030562 & 4294967295; e = g + (f << 16 & 4294967295 | f >>> 16); f = c + (e ^ g ^ b) + d[14] + 4259657740 & 4294967295; c = e + (f << 23 & 4294967295 | f >>> 9); f = b + (c ^ e ^ g) + d[1] + 2763975236 & 4294967295; b = c + (f << 4 & 4294967295 | f >>> 28); f = g + (b ^ c ^ e) + d[4] + 1272893353 & 4294967295; g = b + (f << 11 & 4294967295 |
        f >>> 21); f = e + (g ^ b ^ c) + d[7] + 4139469664 & 4294967295; e = g + (f << 16 & 4294967295 | f >>> 16); f = c + (e ^ g ^ b) + d[10] + 3200236656 & 4294967295; c = e + (f << 23 & 4294967295 | f >>> 9); f = b + (c ^ e ^ g) + d[13] + 681279174 & 4294967295; b = c + (f << 4 & 4294967295 | f >>> 28); f = g + (b ^ c ^ e) + d[0] + 3936430074 & 4294967295; g = b + (f << 11 & 4294967295 | f >>> 21); f = e + (g ^ b ^ c) + d[3] + 3572445317 & 4294967295; e = g + (f << 16 & 4294967295 | f >>> 16); f = c + (e ^ g ^ b) + d[6] + 76029189 & 4294967295; c = e + (f << 23 & 4294967295 | f >>> 9); f = b + (c ^ e ^ g) + d[9] + 3654602809 & 4294967295; b = c + (f << 4 & 4294967295 | f >>> 28); f = g + (b ^ c ^ e) + d[12] +
        3873151461 & 4294967295; g = b + (f << 11 & 4294967295 | f >>> 21); f = e + (g ^ b ^ c) + d[15] + 530742520 & 4294967295; e = g + (f << 16 & 4294967295 | f >>> 16); f = c + (e ^ g ^ b) + d[2] + 3299628645 & 4294967295; c = e + (f << 23 & 4294967295 | f >>> 9); f = b + (e ^ (c | ~g)) + d[0] + 4096336452 & 4294967295; b = c + (f << 6 & 4294967295 | f >>> 26); f = g + (c ^ (b | ~e)) + d[7] + 1126891415 & 4294967295; g = b + (f << 10 & 4294967295 | f >>> 22); f = e + (b ^ (g | ~c)) + d[14] + 2878612391 & 4294967295; e = g + (f << 15 & 4294967295 | f >>> 17); f = c + (g ^ (e | ~b)) + d[5] + 4237533241 & 4294967295; c = e + (f << 21 & 4294967295 | f >>> 11); f = b + (e ^ (c | ~g)) + d[12] + 1700485571 &
        4294967295; b = c + (f << 6 & 4294967295 | f >>> 26); f = g + (c ^ (b | ~e)) + d[3] + 2399980690 & 4294967295; g = b + (f << 10 & 4294967295 | f >>> 22); f = e + (b ^ (g | ~c)) + d[10] + 4293915773 & 4294967295; e = g + (f << 15 & 4294967295 | f >>> 17); f = c + (g ^ (e | ~b)) + d[1] + 2240044497 & 4294967295; c = e + (f << 21 & 4294967295 | f >>> 11); f = b + (e ^ (c | ~g)) + d[8] + 1873313359 & 4294967295; b = c + (f << 6 & 4294967295 | f >>> 26); f = g + (c ^ (b | ~e)) + d[15] + 4264355552 & 4294967295; g = b + (f << 10 & 4294967295 | f >>> 22); f = e + (b ^ (g | ~c)) + d[6] + 2734768916 & 4294967295; e = g + (f << 15 & 4294967295 | f >>> 17); f = c + (g ^ (e | ~b)) + d[13] + 1309151649 &
        4294967295; c = e + (f << 21 & 4294967295 | f >>> 11); f = b + (e ^ (c | ~g)) + d[4] + 4149444226 & 4294967295; b = c + (f << 6 & 4294967295 | f >>> 26); f = g + (c ^ (b | ~e)) + d[11] + 3174756917 & 4294967295; g = b + (f << 10 & 4294967295 | f >>> 22); f = e + (b ^ (g | ~c)) + d[2] + 718787259 & 4294967295; e = g + (f << 15 & 4294967295 | f >>> 17); f = c + (g ^ (e | ~b)) + d[9] + 3951481745 & 4294967295; a.chain_[0] = a.chain_[0] + b & 4294967295; a.chain_[1] = a.chain_[1] + (e + (f << 21 & 4294967295 | f >>> 11)) & 4294967295; a.chain_[2] = a.chain_[2] + e & 4294967295; a.chain_[3] = a.chain_[3] + g & 4294967295
    };
    pd.prototype.update = function (a, b) { l(b) || (b = a.length); for (var c = b - this.blockSize, d = this.block_, e = this.blockLength_, g = 0; g < b;) { if (0 == e) for (; g <= c;) qd(this, a, g), g += this.blockSize; if (q(a)) for (; g < b;) { if (d[e++] = a.charCodeAt(g++), e == this.blockSize) { qd(this, d); e = 0; break } } else for (; g < b;) if (d[e++] = a[g++], e == this.blockSize) { qd(this, d); e = 0; break } } this.blockLength_ = e; this.totalLength_ += b }; var X = function () { Q.call(this); this.callback_ = this.element_ = null; this.md5_ = new pd }; v(X, Q); var rd = function (a, b, c, d, e) { a.unwatch(); a.element_ = b; a.callback_ = e; a.listen(b, "keyup", t(a.onChanged_, a, c, d)) }; X.prototype.unwatch = function () { this.element_ && this.callback_ && (this.removeAll(), this.callback_ = this.element_ = null) };
    X.prototype.onChanged_ = function (a, b) { var c; c = (c = this.element_.value) ? c.replace(/[\s\xa0]+/g, "").toLowerCase() : ""; this.md5_.reset(); this.md5_.update(c + "." + b); c = this.md5_; var d = Array((56 > c.blockLength_ ? c.blockSize : 2 * c.blockSize) - c.blockLength_); d[0] = 128; for (var e = 1; e < d.length - 8; ++e) d[e] = 0; for (var g = 8 * c.totalLength_, e = d.length - 8; e < d.length; ++e) d[e] = g & 255, g /= 256; c.update(d); d = Array(16); for (e = g = 0; 4 > e; ++e) for (var f = 0; 32 > f; f += 8) d[g++] = c.chain_[e] >>> f & 255; jb(d).toLowerCase() == a.toLowerCase() && this.callback_() };
    X.prototype.disposeInternal = function () { this.element_ = null; X.superClass_.disposeInternal.call(this) }; var td = function (a, b, c) { this.adObject_ = a; this.captchaImageUrl_ = b; this.opt_successCallback_ = c || null; sd(this) }; v(td, H); var sd = function (a) { var b = new S; nb(a, ga(ob, b)); Nc(b, "recaptcha_challenge_image", a.captchaImageUrl_); Nc(b, "recaptcha_ad_image", a.adObject_.imageAdUrl); var c = {}; yc(b, "load", t(function (a, b) { a[b.target.id] = b.target }, a, c)); yc(b, "complete", t(a.handleImagesLoaded_, a, c)); b.start() };
    td.prototype.handleImagesLoaded_ = function (a) { a = new V(a.recaptcha_challenge_image, a.recaptcha_ad_image); nb(this, ga(ob, a)); var b = tb(document, "recaptcha_image"); Ab(b); Qc(a, b); a.adImage_ && Tc(a.adImage_) && (md(this.adObject_.delayedImpressionUrl), a = new X, nb(this, ga(ob, a)), rd(a, tb(document, "recaptcha_response_field"), this.adObject_.hashedAnswer, this.adObject_.salt, t(function (a, b) { a.unwatch(); md(b) }, this, a, this.adObject_.engagementUrl)), this.opt_successCallback_ && this.opt_successCallback_("04" + this.adObject_.token)) }; var W = x; u("RecaptchaStr", W); var Y = k.RecaptchaOptions; u("RecaptchaOptions", Y); var ud = { tabindex: 0, theme: "red", callback: null, lang: null, custom_theme_widget: null, custom_translations: null }; u("RecaptchaDefaultOptions", ud);
    var Z = {
        widget: null, timer_id: -1, style_set: !1, theme: null, type: "image", ajax_verify_cb: null, th1: null, th2: null, th3: null, element: "", ad_captcha_plugin: null, reload_timeout: -1, force_reload: !1, $: function (a) { return "string" == typeof a ? document.getElementById(a) : a }, attachEvent: function (a, b, c) { a && a.addEventListener ? a.addEventListener(b, c, !1) : a && a.attachEvent && a.attachEvent("on" + b, c) }, create: function (a, b, c) { Z.destroy(); b && (Z.widget = Z.$(b), Z.element = b); Z._init_options(c); Z._call_challenge(a) }, destroy: function () {
            var a =
            Z.$("recaptcha_challenge_field"); a && a.parentNode.removeChild(a); -1 != Z.timer_id && clearInterval(Z.timer_id); Z.timer_id = -1; if (a = Z.$("recaptcha_image")) a.innerHTML = ""; Z.update_widget(); Z.widget && ("custom" != Z.theme ? Z.widget.innerHTML = "" : Z.widget.style.display = "none", Z.widget = null)
        }, focus_response_field: function () { var a = Z.$("recaptcha_response_field"); a && a.focus() }, get_challenge: function () { return "undefined" == typeof RecaptchaState ? null : RecaptchaState.challenge }, get_response: function () {
            var a = Z.$("recaptcha_response_field");
            return a ? a.value : null
        }, ajax_verify: function (a) { Z.ajax_verify_cb = a; a = Z.get_challenge() || ""; var b = Z.get_response() || ""; a = Z._get_api_server() + "/ajaxverify?c=" + encodeURIComponent(a) + "&response=" + encodeURIComponent(b); Z._add_script(a) }, _ajax_verify_callback: function (a) { Z.ajax_verify_cb(a) }, _get_overridable_url: function (a) {
            var b = window.location.protocol; if ("undefined" != typeof _RecaptchaOverrideApiServer) a = _RecaptchaOverrideApiServer; else if ("undefined" != typeof RecaptchaState && "string" == typeof RecaptchaState.server &&
            0 < RecaptchaState.server.length) return RecaptchaState.server.replace(/\/+$/, ""); return b + "//" + a
        }, _get_api_server: function () { return Z._get_overridable_url("www.google.com/recaptcha/api") }, _get_static_url_root: function () { return Z._get_overridable_url("www.gstatic.com/recaptcha/api") }, _call_challenge: function (a) {
            a = Z._get_api_server() + "/challenge?k=" + a + "&ajax=1&cachestop=" + Math.random(); Z.getLang_() && (a += "&lang=" + Z.getLang_()); "undefined" != typeof Y.extra_challenge_params && (a += "&" + Y.extra_challenge_params);
            Z._add_script(a)
        }, _add_script: function (a) { var b = document.createElement("script"); b.type = "text/javascript"; b.src = a; Z._get_script_area().appendChild(b) }, _get_script_area: function () { var a = document.getElementsByTagName("head"); return a = !a || 1 > a.length ? document.body : a[0] }, _hash_merge: function (a) { for (var b = {}, c = 0; c < a.length; c++) for (var d in a[c]) b[d] = a[c][d]; return b }, _init_options: function (a) { Y = Z._hash_merge([ud, a || {}]) }, challenge_callback_internal: function () {
            Z.update_widget(); Z._reset_timer(); W = Z._hash_merge([x,
            sa[Z.getLang_()] || {}, Y.custom_translations || {}]); window.addEventListener && window.addEventListener("unload", function () { Z.destroy() }, !1); Z._is_ie() && window.attachEvent && window.attachEvent("onbeforeunload", function () { }); if (0 < navigator.userAgent.indexOf("KHTML")) {
                var a = document.createElement("iframe"); a.src = "about:blank"; a.style.height = "0px"; a.style.width = "0px"; a.style.visibility = "hidden"; a.style.border = "none"; a.style.display = "none"; a.appendChild(document.createTextNode("This frame prevents back/forward cache problems in Safari."));
                document.body.appendChild(a)
            } Z._finish_widget()
        }, _add_css: function (a) { if (-1 != navigator.appVersion.indexOf("MSIE 5")) document.write('<style type="text/css">' + a + "</style>"); else { var b = document.createElement("style"); b.type = "text/css"; b.styleSheet ? b.styleSheet.cssText = a : b.appendChild(document.createTextNode(a)); Z._get_script_area().appendChild(b) } }, _set_style: function (a) { Z.style_set || (Z.style_set = !0, Z._add_css(a + "\n\n.recaptcha_is_showing_audio .recaptcha_only_if_image,.recaptcha_isnot_showing_audio .recaptcha_only_if_audio,.recaptcha_had_incorrect_sol .recaptcha_only_if_no_incorrect_sol,.recaptcha_nothad_incorrect_sol .recaptcha_only_if_incorrect_sol{display:none !important}")) },
        _init_builtin_theme: function () {
            var a = Z.$, b = Z._get_static_url_root(), c = w.VertCss, d = w.VertHtml, e = b + "/img/" + Z.theme, g = "gif", b = Z.theme; "clean" == b && (c = w.CleanCss, d = w.CleanHtml, g = "png"); c = c.replace(/IMGROOT/g, e); Z._set_style(c); Z.update_widget(); Z.widget.innerHTML = '<div id="recaptcha_area">' + d + "</div>"; c = Z.getLang_(); a("recaptcha_privacy") && null != c && "en" == c.substring(0, 2).toLowerCase() && null != W.privacy_and_terms && 0 < W.privacy_and_terms.length && (c = document.createElement("a"), c.href = "http://www.google.com/intl/en/policies/",
            c.target = "_blank", c.innerHTML = W.privacy_and_terms, a("recaptcha_privacy").appendChild(c)); c = function (b, c, d, M) { var I = a(b); I.src = e + "/" + c + "." + g; c = W[d]; I.alt = c; b = a(b + "_btn"); b.title = c; Z.attachEvent(b, "click", M) }; c("recaptcha_reload", "refresh", "refresh_btn", function () { Z.reload_internal("r") }); c("recaptcha_switch_audio", "audio", "audio_challenge", function () { Z.switch_type("audio") }); c("recaptcha_switch_img", "text", "visual_challenge", function () { Z.switch_type("image") }); c("recaptcha_whatsthis", "help", "help_btn",
            Z.showhelp); "clean" == b && (a("recaptcha_logo").src = e + "/logo." + g); a("recaptcha_table").className = "recaptchatable recaptcha_theme_" + Z.theme; b = function (b, c) { var d = a(b); d && (RecaptchaState.rtl && "span" == d.tagName.toLowerCase() && (d.dir = "rtl"), d.appendChild(document.createTextNode(W[c]))) }; b("recaptcha_instructions_image", "instructions_visual"); b("recaptcha_instructions_audio", "instructions_audio"); b("recaptcha_instructions_error", "incorrect_try_again"); a("recaptcha_instructions_image") || a("recaptcha_instructions_audio") ||
            (b = "audio" == Z.type ? W.instructions_audio : W.instructions_visual, b = b.replace(/:$/, ""), a("recaptcha_response_field").setAttribute("placeholder", b))
        }, _finish_widget: function () {
            var a = Z.$, b = Y, c = b.theme; c in { blackglass: 1, clean: 1, custom: 1, red: 1, white: 1 } || (c = "red"); Z.theme || (Z.theme = c); "custom" != Z.theme ? Z._init_builtin_theme() : Z._set_style(""); c = document.createElement("span"); c.id = "recaptcha_challenge_field_holder"; c.style.display = "none"; a("recaptcha_response_field").parentNode.insertBefore(c, a("recaptcha_response_field"));
            a("recaptcha_response_field").setAttribute("autocomplete", "off"); a("recaptcha_image").style.width = "300px"; a("recaptcha_image").style.height = "57px"; a("recaptcha_challenge_field_holder").innerHTML = '<input type="hidden" name="recaptcha_challenge_field" id="recaptcha_challenge_field" value=""/>'; Z.th_init(); Z.should_focus = !1; Z.th3 || Z.force_reload ? (Z._set_challenge(RecaptchaState.challenge, "image", !0), setTimeout(function () { Z.reload_internal("i") }, 100)) : Z._set_challenge(RecaptchaState.challenge, "image",
            !1); Z.updateTabIndexes_(); Z.update_widget(); Z.widget && (Z.widget.style.display = ""); b.callback && b.callback()
        }, updateTabIndexes_: function () {
            var a = Z.$, b = Y; b.tabindex && (b = b.tabindex, a("recaptcha_response_field").tabIndex = b++, "audio" == Z.type && a("recaptcha_audio_play_again") && (a("recaptcha_audio_play_again").tabIndex = b++, a("recaptcha_audio_download"), a("recaptcha_audio_download").tabIndex = b++), "custom" != Z.theme && (a("recaptcha_reload_btn").tabIndex = b++, a("recaptcha_switch_audio_btn").tabIndex = b++, a("recaptcha_switch_img_btn").tabIndex =
            b++, a("recaptcha_whatsthis_btn").tabIndex = b, a("recaptcha_privacy").tabIndex = b++))
        }, switch_type: function (a) { if (!((new Date).getTime() < Z.reload_timeout) && (Z.type = a, Z.reload_internal("audio" == Z.type ? "a" : "v"), "custom" != Z.theme)) { a = Z.$; var b = "audio" == Z.type ? W.instructions_audio : W.instructions_visual, b = b.replace(/:$/, ""); a("recaptcha_response_field").setAttribute("placeholder", b) } }, reload: function () { Z.reload_internal("r") }, reload_internal: function (a) {
            var b = Y, c = RecaptchaState, d = (new Date).getTime(); d < Z.reload_timeout ||
            (Z.reload_timeout = d + 1E3, "undefined" == typeof a && (a = "r"), d = Z._get_api_server() + "/reload?c=" + c.challenge + "&k=" + c.site + "&reason=" + a + "&type=" + Z.type, Z.getLang_() && (d += "&lang=" + Z.getLang_()), "undefined" != typeof b.extra_challenge_params && (d += "&" + b.extra_challenge_params), Z.th_callback_invoke(), Z.th1 && (d += "&th=" + Z.th1, Z.th1 = ""), "audio" == Z.type && (d = b.audio_beta_12_08 ? d + "&audio_beta_12_08=1" : d + "&new_audio_default=1"), Z.should_focus = "t" != a && "i" != a, Z._add_script(d), ob(Z.ad_captcha_plugin), c.publisher_id = null)
        },
        th_callback_invoke: function () { if (Z.th3) try { var a = Z.th3.exec(); a && 1600 > a.length && (Z.th1 = a) } catch (b) { Z.th1 = "" } }, finish_reload: function (a, b, c, d) { RecaptchaState.payload_url = c; RecaptchaState.is_incorrect = !1; RecaptchaState.publisher_id = d; Z._set_challenge(a, b, !1); Z.updateTabIndexes_() }, _set_challenge: function (a, b, c) { "image" == b && RecaptchaState.publisher_id ? nd(a, function () { Z._set_challenge_internal(a, b, c) }) : Z._set_challenge_internal(a, b, c) }, _set_challenge_internal: function (a, b, c) {
            var d = Z.$, e = RecaptchaState;
            e.challenge = a; Z.type = b; d("recaptcha_challenge_field").value = e.challenge; c || ("audio" == b ? (d("recaptcha_image").innerHTML = Z.getAudioCaptchaHtml(), Z._loop_playback()) : "image" == b && (a = e.payload_url, a || (a = Z._get_api_server() + "/image?c=" + e.challenge, Z.th_callback_invoke(), Z.th1 && (a += "&th=" + Z.th1, Z.th1 = "")), kd(d("recaptcha_widget_div")), Wa() ? Z.ad_captcha_plugin = new td(Xa(), a, function (a) { RecaptchaState.challenge = a; d("recaptcha_challenge_field").value = a }) : d("recaptcha_image").innerHTML = '<img id="recaptcha_challenge_image" alt="' +
            W.image_alt_text + '" height="57" width="300" src="' + a + '" />', jd())); Z._css_toggle("recaptcha_had_incorrect_sol", "recaptcha_nothad_incorrect_sol", e.is_incorrect); Z._css_toggle("recaptcha_is_showing_audio", "recaptcha_isnot_showing_audio", "audio" == b); Z._clear_input(); Z.should_focus && Z.focus_response_field(); Z._reset_timer()
        }, _reset_timer: function () { clearInterval(Z.timer_id); var a = Math.max(1E3 * (RecaptchaState.timeout - 60), 6E4); Z.timer_id = setInterval(function () { Z.reload_internal("t") }, a); return a }, showhelp: function () {
            window.open(Z._get_help_link(),
            "recaptcha_popup", "width=460,height=580,location=no,menubar=no,status=no,toolbar=no,scrollbars=yes,resizable=yes")
        }, _clear_input: function () { Z.$("recaptcha_response_field").value = "" }, _displayerror: function (a) { var b = Z.$; b("recaptcha_image").innerHTML = ""; b("recaptcha_image").appendChild(document.createTextNode(a)) }, reloaderror: function (a) { Z._displayerror(a) }, _is_ie: function () { return 0 < navigator.userAgent.indexOf("MSIE") && !window.opera }, _css_toggle: function (a, b, c) {
            Z.update_widget(); var d = Z.widget; d ||
            (d = document.body); var e = d.className, e = e.replace(new RegExp("(^|\\s+)" + a + "(\\s+|$)"), " "), e = e.replace(new RegExp("(^|\\s+)" + b + "(\\s+|$)"), " "); d.className = e + (" " + (c ? a : b))
        }, _get_help_link: function () { var a = "https://support.google.com/recaptcha/"; Z.getLang_() && (a += "?hl=" + Z.getLang_()); return a }, playAgain: function () { Z.$("recaptcha_image").innerHTML = Z.getAudioCaptchaHtml(); Z._loop_playback() }, _loop_playback: function () {
            var a = Z.$("recaptcha_audio_play_again"); a && Z.attachEvent(a, "click", function () {
                Z.playAgain();
                return !1
            })
        }, getAudioCaptchaHtml: function () {
            var a = RecaptchaState.payload_url; a || (a = Z._get_api_server() + "/audio.mp3?c=" + RecaptchaState.challenge, Z.th_callback_invoke(), Z.th1 && (a += "&th=" + Z.th1, Z.th1 = "")); var b = Z._get_api_server() + "/swf/audiocaptcha.swf?v2", b = Z._is_ie() ? '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="audiocaptcha" width="0" height="0" codebase="https://fpdownload.macromedia.com/get/flashplayer/current/swflash.cab"><param name="movie" value="' + b + '" /><param name="quality" value="high" /><param name="bgcolor" value="#869ca7" /><param name="allowScriptAccess" value="always" /></object><br/>' :
            '<embed src="' + b + '" quality="high" bgcolor="#869ca7" width="0" height="0" name="audiocaptcha" align="middle" play="true" loop="false" quality="high" allowScriptAccess="always" type="application/x-shockwave-flash" pluginspage="http://www.adobe.com/go/getflashplayer" /></embed>', c = ""; Z.checkFlashVer() && (c = "<br/>" + Z.getSpan_('<a id="recaptcha_audio_play_again" class="recaptcha_audio_cant_hear_link">' + W.play_again + "</a>")); c += "<br/>" + Z.getSpan_('<a id="recaptcha_audio_download" class="recaptcha_audio_cant_hear_link" target="_blank" href="' +
            a + '">' + W.cant_hear_this + "</a>"); return b + c
        }, getSpan_: function (a) { return "<span" + (RecaptchaState && RecaptchaState.rtl ? ' dir="rtl"' : "") + ">" + a + "</span>" }, gethttpwavurl: function () { if ("audio" != Z.type) return ""; var a = RecaptchaState.payload_url; a || (a = Z._get_api_server() + "/image?c=" + RecaptchaState.challenge, Z.th_callback_invoke(), Z.th1 && (a += "&th=" + Z.th1, Z.th1 = "")); return a }, checkFlashVer: function () {
            var a = -1 != navigator.appVersion.indexOf("MSIE"), b = -1 != navigator.appVersion.toLowerCase().indexOf("win"), c = -1 != navigator.userAgent.indexOf("Opera"),
            d = -1; if (null != navigator.plugins && 0 < navigator.plugins.length) { if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) d = navigator.plugins["Shockwave Flash" + (navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "")].description.split(" ")[2].split(".")[0] } else if (a && b && !c) try { d = (new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7")).GetVariable("$version").split(" ")[1].split(",")[0] } catch (e) { } return 9 <= d
        }, getLang_: function () {
            return Y.lang ? Y.lang : "undefined" != typeof RecaptchaState &&
            RecaptchaState.lang ? RecaptchaState.lang : null
        }, challenge_callback: function () {
            Z.force_reload = !!RecaptchaState.force_reload; if (RecaptchaState.t3) {
                var a = RecaptchaState.t1 ? ib(mb(RecaptchaState.t1)) : "", b = RecaptchaState.t2 ? ib(mb(RecaptchaState.t2)) : "", c = RecaptchaState.t3 ? ib(mb(RecaptchaState.t3)) : ""; Z.th2 = c; if (a) b = kc(a), cc(b, Z.challenge_callback_internal, null, void 0), cc(b, null, Z.challenge_callback_internal, void 0); else {
                    if (k.execScript) k.execScript(b, "JavaScript"); else if (k.eval) null == ia && (k.eval("var _et_ = 1;"),
                    "undefined" != typeof k._et_ ? (delete k._et_, ia = !0) : ia = !1), ia ? k.eval(b) : (a = k.document, c = a.createElement("script"), c.type = "text/javascript", c.defer = !1, c.appendChild(a.createTextNode(b)), a.body.appendChild(c), a.body.removeChild(c)); else throw Error("goog.globalEval not available"); Z.challenge_callback_internal()
                }
            } else Z.challenge_callback_internal()
        }, th_init: function () { try { k.thintinel && k.thintinel.th && (Z.th3 = new k.thintinel.th(Z.th2), Z.th2 = "") } catch (a) { } }, update_widget: function () {
            Z.element && (Z.widget =
            Z.$(Z.element))
        }
    }; u("Recaptcha", Z);
})();
/* Magnific Popup - v0.9.9 - 2013-12-27
* http://dimsemenov.com/plugins/magnific-popup/
* Copyright (c) 2013 Dmitry Semenov; */
(function(e){var t,n,i,o,r,a,s,l="Close",c="BeforeClose",d="AfterClose",u="BeforeAppend",p="MarkupParse",f="Open",m="Change",g="mfp",h="."+g,v="mfp-ready",C="mfp-removing",y="mfp-prevent-close",w=function(){},b=!!window.jQuery,I=e(window),x=function(e,n){t.ev.on(g+e+h,n)},k=function(t,n,i,o){var r=document.createElement("div");return r.className="mfp-"+t,i&&(r.innerHTML=i),o?n&&n.appendChild(r):(r=e(r),n&&r.appendTo(n)),r},T=function(n,i){t.ev.triggerHandler(g+n,i),t.st.callbacks&&(n=n.charAt(0).toLowerCase()+n.slice(1),t.st.callbacks[n]&&t.st.callbacks[n].apply(t,e.isArray(i)?i:[i]))},E=function(n){return n===s&&t.currTemplate.closeBtn||(t.currTemplate.closeBtn=e(t.st.closeMarkup.replace("%title%",t.st.tClose)),s=n),t.currTemplate.closeBtn},_=function(){e.magnificPopup.instance||(t=new w,t.init(),e.magnificPopup.instance=t)},S=function(){var e=document.createElement("p").style,t=["ms","O","Moz","Webkit"];if(void 0!==e.transition)return!0;for(;t.length;)if(t.pop()+"Transition"in e)return!0;return!1};w.prototype={constructor:w,init:function(){var n=navigator.appVersion;t.isIE7=-1!==n.indexOf("MSIE 7."),t.isIE8=-1!==n.indexOf("MSIE 8."),t.isLowIE=t.isIE7||t.isIE8,t.isAndroid=/android/gi.test(n),t.isIOS=/iphone|ipad|ipod/gi.test(n),t.supportsTransition=S(),t.probablyMobile=t.isAndroid||t.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),o=e(document),t.popupsCache={}},open:function(n){i||(i=e(document.body));var r;if(n.isObj===!1){t.items=n.items.toArray(),t.index=0;var s,l=n.items;for(r=0;l.length>r;r++)if(s=l[r],s.parsed&&(s=s.el[0]),s===n.el[0]){t.index=r;break}}else t.items=e.isArray(n.items)?n.items:[n.items],t.index=n.index||0;if(t.isOpen)return t.updateItemHTML(),void 0;t.types=[],a="",t.ev=n.mainEl&&n.mainEl.length?n.mainEl.eq(0):o,n.key?(t.popupsCache[n.key]||(t.popupsCache[n.key]={}),t.currTemplate=t.popupsCache[n.key]):t.currTemplate={},t.st=e.extend(!0,{},e.magnificPopup.defaults,n),t.fixedContentPos="auto"===t.st.fixedContentPos?!t.probablyMobile:t.st.fixedContentPos,t.st.modal&&(t.st.closeOnContentClick=!1,t.st.closeOnBgClick=!1,t.st.showCloseBtn=!1,t.st.enableEscapeKey=!1),t.bgOverlay||(t.bgOverlay=k("bg").on("click"+h,function(){t.close()}),t.wrap=k("wrap").attr("tabindex",-1).on("click"+h,function(e){t._checkIfClose(e.target)&&t.close()}),t.container=k("container",t.wrap)),t.contentContainer=k("content"),t.st.preloader&&(t.preloader=k("preloader",t.container,t.st.tLoading));var c=e.magnificPopup.modules;for(r=0;c.length>r;r++){var d=c[r];d=d.charAt(0).toUpperCase()+d.slice(1),t["init"+d].call(t)}T("BeforeOpen"),t.st.showCloseBtn&&(t.st.closeBtnInside?(x(p,function(e,t,n,i){n.close_replaceWith=E(i.type)}),a+=" mfp-close-btn-in"):t.wrap.append(E())),t.st.alignTop&&(a+=" mfp-align-top"),t.fixedContentPos?t.wrap.css({overflow:t.st.overflowY,overflowX:"hidden",overflowY:t.st.overflowY}):t.wrap.css({top:I.scrollTop(),position:"absolute"}),(t.st.fixedBgPos===!1||"auto"===t.st.fixedBgPos&&!t.fixedContentPos)&&t.bgOverlay.css({height:o.height(),position:"absolute"}),t.st.enableEscapeKey&&o.on("keyup"+h,function(e){27===e.keyCode&&t.close()}),I.on("resize"+h,function(){t.updateSize()}),t.st.closeOnContentClick||(a+=" mfp-auto-cursor"),a&&t.wrap.addClass(a);var u=t.wH=I.height(),m={};if(t.fixedContentPos&&t._hasScrollBar(u)){var g=t._getScrollbarSize();g&&(m.marginRight=g)}t.fixedContentPos&&(t.isIE7?e("body, html").css("overflow","hidden"):m.overflow="hidden");var C=t.st.mainClass;return t.isIE7&&(C+=" mfp-ie7"),C&&t._addClassToMFP(C),t.updateItemHTML(),T("BuildControls"),e("html").css(m),t.bgOverlay.add(t.wrap).prependTo(t.st.prependTo||i),t._lastFocusedEl=document.activeElement,setTimeout(function(){t.content?(t._addClassToMFP(v),t._setFocus()):t.bgOverlay.addClass(v),o.on("focusin"+h,t._onFocusIn)},16),t.isOpen=!0,t.updateSize(u),T(f),n},close:function(){t.isOpen&&(T(c),t.isOpen=!1,t.st.removalDelay&&!t.isLowIE&&t.supportsTransition?(t._addClassToMFP(C),setTimeout(function(){t._close()},t.st.removalDelay)):t._close())},_close:function(){T(l);var n=C+" "+v+" ";if(t.bgOverlay.detach(),t.wrap.detach(),t.container.empty(),t.st.mainClass&&(n+=t.st.mainClass+" "),t._removeClassFromMFP(n),t.fixedContentPos){var i={marginRight:""};t.isIE7?e("body, html").css("overflow",""):i.overflow="",e("html").css(i)}o.off("keyup"+h+" focusin"+h),t.ev.off(h),t.wrap.attr("class","mfp-wrap").removeAttr("style"),t.bgOverlay.attr("class","mfp-bg"),t.container.attr("class","mfp-container"),!t.st.showCloseBtn||t.st.closeBtnInside&&t.currTemplate[t.currItem.type]!==!0||t.currTemplate.closeBtn&&t.currTemplate.closeBtn.detach(),t._lastFocusedEl&&e(t._lastFocusedEl).focus(),t.currItem=null,t.content=null,t.currTemplate=null,t.prevHeight=0,T(d)},updateSize:function(e){if(t.isIOS){var n=document.documentElement.clientWidth/window.innerWidth,i=window.innerHeight*n;t.wrap.css("height",i),t.wH=i}else t.wH=e||I.height();t.fixedContentPos||t.wrap.css("height",t.wH),T("Resize")},updateItemHTML:function(){var n=t.items[t.index];t.contentContainer.detach(),t.content&&t.content.detach(),n.parsed||(n=t.parseEl(t.index));var i=n.type;if(T("BeforeChange",[t.currItem?t.currItem.type:"",i]),t.currItem=n,!t.currTemplate[i]){var o=t.st[i]?t.st[i].markup:!1;T("FirstMarkupParse",o),t.currTemplate[i]=o?e(o):!0}r&&r!==n.type&&t.container.removeClass("mfp-"+r+"-holder");var a=t["get"+i.charAt(0).toUpperCase()+i.slice(1)](n,t.currTemplate[i]);t.appendContent(a,i),n.preloaded=!0,T(m,n),r=n.type,t.container.prepend(t.contentContainer),T("AfterChange")},appendContent:function(e,n){t.content=e,e?t.st.showCloseBtn&&t.st.closeBtnInside&&t.currTemplate[n]===!0?t.content.find(".mfp-close").length||t.content.append(E()):t.content=e:t.content="",T(u),t.container.addClass("mfp-"+n+"-holder"),t.contentContainer.append(t.content)},parseEl:function(n){var i,o=t.items[n];if(o.tagName?o={el:e(o)}:(i=o.type,o={data:o,src:o.src}),o.el){for(var r=t.types,a=0;r.length>a;a++)if(o.el.hasClass("mfp-"+r[a])){i=r[a];break}o.src=o.el.attr("data-mfp-src"),o.src||(o.src=o.el.attr("href"))}return o.type=i||t.st.type||"inline",o.index=n,o.parsed=!0,t.items[n]=o,T("ElementParse",o),t.items[n]},addGroup:function(e,n){var i=function(i){i.mfpEl=this,t._openClick(i,e,n)};n||(n={});var o="click.magnificPopup";n.mainEl=e,n.items?(n.isObj=!0,e.off(o).on(o,i)):(n.isObj=!1,n.delegate?e.off(o).on(o,n.delegate,i):(n.items=e,e.off(o).on(o,i)))},_openClick:function(n,i,o){var r=void 0!==o.midClick?o.midClick:e.magnificPopup.defaults.midClick;if(r||2!==n.which&&!n.ctrlKey&&!n.metaKey){var a=void 0!==o.disableOn?o.disableOn:e.magnificPopup.defaults.disableOn;if(a)if(e.isFunction(a)){if(!a.call(t))return!0}else if(a>I.width())return!0;n.type&&(n.preventDefault(),t.isOpen&&n.stopPropagation()),o.el=e(n.mfpEl),o.delegate&&(o.items=i.find(o.delegate)),t.open(o)}},updateStatus:function(e,i){if(t.preloader){n!==e&&t.container.removeClass("mfp-s-"+n),i||"loading"!==e||(i=t.st.tLoading);var o={status:e,text:i};T("UpdateStatus",o),e=o.status,i=o.text,t.preloader.html(i),t.preloader.find("a").on("click",function(e){e.stopImmediatePropagation()}),t.container.addClass("mfp-s-"+e),n=e}},_checkIfClose:function(n){if(!e(n).hasClass(y)){var i=t.st.closeOnContentClick,o=t.st.closeOnBgClick;if(i&&o)return!0;if(!t.content||e(n).hasClass("mfp-close")||t.preloader&&n===t.preloader[0])return!0;if(n===t.content[0]||e.contains(t.content[0],n)){if(i)return!0}else if(o&&e.contains(document,n))return!0;return!1}},_addClassToMFP:function(e){t.bgOverlay.addClass(e),t.wrap.addClass(e)},_removeClassFromMFP:function(e){this.bgOverlay.removeClass(e),t.wrap.removeClass(e)},_hasScrollBar:function(e){return(t.isIE7?o.height():document.body.scrollHeight)>(e||I.height())},_setFocus:function(){(t.st.focus?t.content.find(t.st.focus).eq(0):t.wrap).focus()},_onFocusIn:function(n){return n.target===t.wrap[0]||e.contains(t.wrap[0],n.target)?void 0:(t._setFocus(),!1)},_parseMarkup:function(t,n,i){var o;i.data&&(n=e.extend(i.data,n)),T(p,[t,n,i]),e.each(n,function(e,n){if(void 0===n||n===!1)return!0;if(o=e.split("_"),o.length>1){var i=t.find(h+"-"+o[0]);if(i.length>0){var r=o[1];"replaceWith"===r?i[0]!==n[0]&&i.replaceWith(n):"img"===r?i.is("img")?i.attr("src",n):i.replaceWith('<img src="'+n+'" class="'+i.attr("class")+'" />'):i.attr(o[1],n)}}else t.find(h+"-"+e).html(n)})},_getScrollbarSize:function(){if(void 0===t.scrollbarSize){var e=document.createElement("div");e.id="mfp-sbm",e.style.cssText="width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;",document.body.appendChild(e),t.scrollbarSize=e.offsetWidth-e.clientWidth,document.body.removeChild(e)}return t.scrollbarSize}},e.magnificPopup={instance:null,proto:w.prototype,modules:[],open:function(t,n){return _(),t=t?e.extend(!0,{},t):{},t.isObj=!0,t.index=n||0,this.instance.open(t)},close:function(){return e.magnificPopup.instance&&e.magnificPopup.instance.close()},registerModule:function(t,n){n.options&&(e.magnificPopup.defaults[t]=n.options),e.extend(this.proto,n.proto),this.modules.push(t)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:"",preloader:!0,focus:"",closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,prependTo:null,fixedContentPos:"auto",fixedBgPos:"auto",overflowY:"auto",closeMarkup:'<button title="%title%" type="button" class="mfp-close">&times;</button>',tClose:"Close (Esc)",tLoading:"Loading..."}},e.fn.magnificPopup=function(n){_();var i=e(this);if("string"==typeof n)if("open"===n){var o,r=b?i.data("magnificPopup"):i[0].magnificPopup,a=parseInt(arguments[1],10)||0;r.items?o=r.items[a]:(o=i,r.delegate&&(o=o.find(r.delegate)),o=o.eq(a)),t._openClick({mfpEl:o},i,r)}else t.isOpen&&t[n].apply(t,Array.prototype.slice.call(arguments,1));else n=e.extend(!0,{},n),b?i.data("magnificPopup",n):i[0].magnificPopup=n,t.addGroup(i,n);return i};var P,O,z,M="inline",B=function(){z&&(O.after(z.addClass(P)).detach(),z=null)};e.magnificPopup.registerModule(M,{options:{hiddenClass:"hide",markup:"",tNotFound:"Content not found"},proto:{initInline:function(){t.types.push(M),x(l+"."+M,function(){B()})},getInline:function(n,i){if(B(),n.src){var o=t.st.inline,r=e(n.src);if(r.length){var a=r[0].parentNode;a&&a.tagName&&(O||(P=o.hiddenClass,O=k(P),P="mfp-"+P),z=r.after(O).detach().removeClass(P)),t.updateStatus("ready")}else t.updateStatus("error",o.tNotFound),r=e("<div>");return n.inlineElement=r,r}return t.updateStatus("ready"),t._parseMarkup(i,{},n),i}}});var F,H="ajax",L=function(){F&&i.removeClass(F)},A=function(){L(),t.req&&t.req.abort()};e.magnificPopup.registerModule(H,{options:{settings:null,cursor:"mfp-ajax-cur",tError:'<a href="%url%">The content</a> could not be loaded.'},proto:{initAjax:function(){t.types.push(H),F=t.st.ajax.cursor,x(l+"."+H,A),x("BeforeChange."+H,A)},getAjax:function(n){F&&i.addClass(F),t.updateStatus("loading");var o=e.extend({url:n.src,success:function(i,o,r){var a={data:i,xhr:r};T("ParseAjax",a),t.appendContent(e(a.data),H),n.finished=!0,L(),t._setFocus(),setTimeout(function(){t.wrap.addClass(v)},16),t.updateStatus("ready"),T("AjaxContentAdded")},error:function(){L(),n.finished=n.loadError=!0,t.updateStatus("error",t.st.ajax.tError.replace("%url%",n.src))}},t.st.ajax.settings);return t.req=e.ajax(o),""}}});var j,N=function(n){if(n.data&&void 0!==n.data.title)return n.data.title;var i=t.st.image.titleSrc;if(i){if(e.isFunction(i))return i.call(t,n);if(n.el)return n.el.attr(i)||""}return""};e.magnificPopup.registerModule("image",{options:{markup:'<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',cursor:"mfp-zoom-out-cur",titleSrc:"title",verticalFit:!0,tError:'<a href="%url%">The image</a> could not be loaded.'},proto:{initImage:function(){var e=t.st.image,n=".image";t.types.push("image"),x(f+n,function(){"image"===t.currItem.type&&e.cursor&&i.addClass(e.cursor)}),x(l+n,function(){e.cursor&&i.removeClass(e.cursor),I.off("resize"+h)}),x("Resize"+n,t.resizeImage),t.isLowIE&&x("AfterChange",t.resizeImage)},resizeImage:function(){var e=t.currItem;if(e&&e.img&&t.st.image.verticalFit){var n=0;t.isLowIE&&(n=parseInt(e.img.css("padding-top"),10)+parseInt(e.img.css("padding-bottom"),10)),e.img.css("max-height",t.wH-n)}},_onImageHasSize:function(e){e.img&&(e.hasSize=!0,j&&clearInterval(j),e.isCheckingImgSize=!1,T("ImageHasSize",e),e.imgHidden&&(t.content&&t.content.removeClass("mfp-loading"),e.imgHidden=!1))},findImageSize:function(e){var n=0,i=e.img[0],o=function(r){j&&clearInterval(j),j=setInterval(function(){return i.naturalWidth>0?(t._onImageHasSize(e),void 0):(n>200&&clearInterval(j),n++,3===n?o(10):40===n?o(50):100===n&&o(500),void 0)},r)};o(1)},getImage:function(n,i){var o=0,r=function(){n&&(n.img[0].complete?(n.img.off(".mfploader"),n===t.currItem&&(t._onImageHasSize(n),t.updateStatus("ready")),n.hasSize=!0,n.loaded=!0,T("ImageLoadComplete")):(o++,200>o?setTimeout(r,100):a()))},a=function(){n&&(n.img.off(".mfploader"),n===t.currItem&&(t._onImageHasSize(n),t.updateStatus("error",s.tError.replace("%url%",n.src))),n.hasSize=!0,n.loaded=!0,n.loadError=!0)},s=t.st.image,l=i.find(".mfp-img");if(l.length){var c=document.createElement("img");c.className="mfp-img",n.img=e(c).on("load.mfploader",r).on("error.mfploader",a),c.src=n.src,l.is("img")&&(n.img=n.img.clone()),c=n.img[0],c.naturalWidth>0?n.hasSize=!0:c.width||(n.hasSize=!1)}return t._parseMarkup(i,{title:N(n),img_replaceWith:n.img},n),t.resizeImage(),n.hasSize?(j&&clearInterval(j),n.loadError?(i.addClass("mfp-loading"),t.updateStatus("error",s.tError.replace("%url%",n.src))):(i.removeClass("mfp-loading"),t.updateStatus("ready")),i):(t.updateStatus("loading"),n.loading=!0,n.hasSize||(n.imgHidden=!0,i.addClass("mfp-loading"),t.findImageSize(n)),i)}}});var W,R=function(){return void 0===W&&(W=void 0!==document.createElement("p").style.MozTransform),W};e.magnificPopup.registerModule("zoom",{options:{enabled:!1,easing:"ease-in-out",duration:300,opener:function(e){return e.is("img")?e:e.find("img")}},proto:{initZoom:function(){var e,n=t.st.zoom,i=".zoom";if(n.enabled&&t.supportsTransition){var o,r,a=n.duration,s=function(e){var t=e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),i="all "+n.duration/1e3+"s "+n.easing,o={position:"fixed",zIndex:9999,left:0,top:0,"-webkit-backface-visibility":"hidden"},r="transition";return o["-webkit-"+r]=o["-moz-"+r]=o["-o-"+r]=o[r]=i,t.css(o),t},d=function(){t.content.css("visibility","visible")};x("BuildControls"+i,function(){if(t._allowZoom()){if(clearTimeout(o),t.content.css("visibility","hidden"),e=t._getItemToZoom(),!e)return d(),void 0;r=s(e),r.css(t._getOffset()),t.wrap.append(r),o=setTimeout(function(){r.css(t._getOffset(!0)),o=setTimeout(function(){d(),setTimeout(function(){r.remove(),e=r=null,T("ZoomAnimationEnded")},16)},a)},16)}}),x(c+i,function(){if(t._allowZoom()){if(clearTimeout(o),t.st.removalDelay=a,!e){if(e=t._getItemToZoom(),!e)return;r=s(e)}r.css(t._getOffset(!0)),t.wrap.append(r),t.content.css("visibility","hidden"),setTimeout(function(){r.css(t._getOffset())},16)}}),x(l+i,function(){t._allowZoom()&&(d(),r&&r.remove(),e=null)})}},_allowZoom:function(){return"image"===t.currItem.type},_getItemToZoom:function(){return t.currItem.hasSize?t.currItem.img:!1},_getOffset:function(n){var i;i=n?t.currItem.img:t.st.zoom.opener(t.currItem.el||t.currItem);var o=i.offset(),r=parseInt(i.css("padding-top"),10),a=parseInt(i.css("padding-bottom"),10);o.top-=e(window).scrollTop()-r;var s={width:i.width(),height:(b?i.innerHeight():i[0].offsetHeight)-a-r};return R()?s["-moz-transform"]=s.transform="translate("+o.left+"px,"+o.top+"px)":(s.left=o.left,s.top=o.top),s}}});var Z="iframe",q="//about:blank",D=function(e){if(t.currTemplate[Z]){var n=t.currTemplate[Z].find("iframe");n.length&&(e||(n[0].src=q),t.isIE8&&n.css("display",e?"block":"none"))}};e.magnificPopup.registerModule(Z,{options:{markup:'<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',srcAction:"iframe_src",patterns:{youtube:{index:"youtube.com",id:"v=",src:"//www.youtube.com/embed/%id%?autoplay=1"},vimeo:{index:"vimeo.com/",id:"/",src:"//player.vimeo.com/video/%id%?autoplay=1"},gmaps:{index:"//maps.google.",src:"%id%&output=embed"}}},proto:{initIframe:function(){t.types.push(Z),x("BeforeChange",function(e,t,n){t!==n&&(t===Z?D():n===Z&&D(!0))}),x(l+"."+Z,function(){D()})},getIframe:function(n,i){var o=n.src,r=t.st.iframe;e.each(r.patterns,function(){return o.indexOf(this.index)>-1?(this.id&&(o="string"==typeof this.id?o.substr(o.lastIndexOf(this.id)+this.id.length,o.length):this.id.call(this,o)),o=this.src.replace("%id%",o),!1):void 0});var a={};return r.srcAction&&(a[r.srcAction]=o),t._parseMarkup(i,a,n),t.updateStatus("ready"),i}}});var K=function(e){var n=t.items.length;return e>n-1?e-n:0>e?n+e:e},Y=function(e,t,n){return e.replace(/%curr%/gi,t+1).replace(/%total%/gi,n)};e.magnificPopup.registerModule("gallery",{options:{enabled:!1,arrowMarkup:'<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:"Previous (Left arrow key)",tNext:"Next (Right arrow key)",tCounter:"%curr% of %total%"},proto:{initGallery:function(){var n=t.st.gallery,i=".mfp-gallery",r=Boolean(e.fn.mfpFastClick);return t.direction=!0,n&&n.enabled?(a+=" mfp-gallery",x(f+i,function(){n.navigateByImgClick&&t.wrap.on("click"+i,".mfp-img",function(){return t.items.length>1?(t.next(),!1):void 0}),o.on("keydown"+i,function(e){37===e.keyCode?t.prev():39===e.keyCode&&t.next()})}),x("UpdateStatus"+i,function(e,n){n.text&&(n.text=Y(n.text,t.currItem.index,t.items.length))}),x(p+i,function(e,i,o,r){var a=t.items.length;o.counter=a>1?Y(n.tCounter,r.index,a):""}),x("BuildControls"+i,function(){if(t.items.length>1&&n.arrows&&!t.arrowLeft){var i=n.arrowMarkup,o=t.arrowLeft=e(i.replace(/%title%/gi,n.tPrev).replace(/%dir%/gi,"left")).addClass(y),a=t.arrowRight=e(i.replace(/%title%/gi,n.tNext).replace(/%dir%/gi,"right")).addClass(y),s=r?"mfpFastClick":"click";o[s](function(){t.prev()}),a[s](function(){t.next()}),t.isIE7&&(k("b",o[0],!1,!0),k("a",o[0],!1,!0),k("b",a[0],!1,!0),k("a",a[0],!1,!0)),t.container.append(o.add(a))}}),x(m+i,function(){t._preloadTimeout&&clearTimeout(t._preloadTimeout),t._preloadTimeout=setTimeout(function(){t.preloadNearbyImages(),t._preloadTimeout=null},16)}),x(l+i,function(){o.off(i),t.wrap.off("click"+i),t.arrowLeft&&r&&t.arrowLeft.add(t.arrowRight).destroyMfpFastClick(),t.arrowRight=t.arrowLeft=null}),void 0):!1},next:function(){t.direction=!0,t.index=K(t.index+1),t.updateItemHTML()},prev:function(){t.direction=!1,t.index=K(t.index-1),t.updateItemHTML()},goTo:function(e){t.direction=e>=t.index,t.index=e,t.updateItemHTML()},preloadNearbyImages:function(){var e,n=t.st.gallery.preload,i=Math.min(n[0],t.items.length),o=Math.min(n[1],t.items.length);for(e=1;(t.direction?o:i)>=e;e++)t._preloadItem(t.index+e);for(e=1;(t.direction?i:o)>=e;e++)t._preloadItem(t.index-e)},_preloadItem:function(n){if(n=K(n),!t.items[n].preloaded){var i=t.items[n];i.parsed||(i=t.parseEl(n)),T("LazyLoad",i),"image"===i.type&&(i.img=e('<img class="mfp-img" />').on("load.mfploader",function(){i.hasSize=!0}).on("error.mfploader",function(){i.hasSize=!0,i.loadError=!0,T("LazyLoadError",i)}).attr("src",i.src)),i.preloaded=!0}}}});var U="retina";e.magnificPopup.registerModule(U,{options:{replaceSrc:function(e){return e.src.replace(/\.\w+$/,function(e){return"@2x"+e})},ratio:1},proto:{initRetina:function(){if(window.devicePixelRatio>1){var e=t.st.retina,n=e.ratio;n=isNaN(n)?n():n,n>1&&(x("ImageHasSize."+U,function(e,t){t.img.css({"max-width":t.img[0].naturalWidth/n,width:"100%"})}),x("ElementParse."+U,function(t,i){i.src=e.replaceSrc(i,n)}))}}}}),function(){var t=1e3,n="ontouchstart"in window,i=function(){I.off("touchmove"+r+" touchend"+r)},o="mfpFastClick",r="."+o;e.fn.mfpFastClick=function(o){return e(this).each(function(){var a,s=e(this);if(n){var l,c,d,u,p,f;s.on("touchstart"+r,function(e){u=!1,f=1,p=e.originalEvent?e.originalEvent.touches[0]:e.touches[0],c=p.clientX,d=p.clientY,I.on("touchmove"+r,function(e){p=e.originalEvent?e.originalEvent.touches:e.touches,f=p.length,p=p[0],(Math.abs(p.clientX-c)>10||Math.abs(p.clientY-d)>10)&&(u=!0,i())}).on("touchend"+r,function(e){i(),u||f>1||(a=!0,e.preventDefault(),clearTimeout(l),l=setTimeout(function(){a=!1},t),o())})})}s.on("click"+r,function(){a||o()})})},e.fn.destroyMfpFastClick=function(){e(this).off("touchstart"+r+" click"+r),n&&I.off("touchmove"+r+" touchend"+r)}}(),_()})(window.jQuery||window.Zepto);;
(function( $ ){

	"use strict";

	$.fn.magicmessages = function( options ) {
		var defaults = {
				modal : true,
				dismissOnSuccess: true,
				loadingStr: 'loading...',
				successStr: 'Success',
				errorStr: 'An error occured!',
				extraClasses : '',
				template : '<div class="magicmessages"><div class="magicmessages-panel"><div class="magicmessages-wrapper"><p class="magicmessages-content"></p><a href="#" class="magicmessages-close">Close</a></div></div></div>"',
				time: '2500',
				displayMessage: true
		};
		
		var resetStatus = 'magicmessages-success magicmessages-error magicmessages-alert magicmessages-remove';
		var removeModal = 'magicmessages-modal magicmessages-normal';
		
		if ( options ) {
			$.extend( defaults, options );
		}
		
		var magicmessage = {
			displaySuccess: function(msg){
				if (msg==undefined || msg=='') msg = defaults.successStr;
				
				var mcontainer = defaults.uielement.find('.magicmessages-content'); 
				if (mcontainer.html()==defaults.loadingStr)
					mcontainer.html('');
				
				mcontainer.html(msg);
				
				defaults.obj.removeClass(removeModal).removeClass(resetStatus);
				defaults.obj.addClass('magicmessages-success');
			},
			displayError : function(msg){
				if (msg==undefined || msg=='') msg = defaults.errorStr;

				var mcontainer = defaults.uielement.find('.magicmessages-content'); 
				if (mcontainer.html()==defaults.loadingStr)
					mcontainer.html('');
				
				mcontainer.html(msg);
				
				defaults.obj.removeClass(removeModal).removeClass(resetStatus);
				defaults.obj.addClass('magicmessages-error');
			},
			init: function(obj){
				function close(e){
					if (e!=undefined){ 
						e.preventDefault();
						var bt = $(this).parent();
						if ( bt.hasClass('alert') || bt.hasClass('success') || bt.hasClass('error') ){
							bt.remove();
							return;
						}
					}
					defaults.obj.addClass('magicmessages-remove');
					/*
					setTimeout(function(){
						defaults.obj.removeClass('magicmessages-loading');
						defaults.obj.removeClass(removeModal).removeClass(resetStatus);
						removeUI(defaults.obj);
					},500)
					*/
				}
				
				function removeUI(obj){
					defaults.uielement.remove();
					defaults.uielement = undefined;
				}
				
				function appendUI(obj){
					defaults.uielement = $(defaults.template);
					defaults.uielement.find('.magicmessages-content').html(defaults.loadingStr);
					defaults.uielement.find('.magicmessages-wrapper').addClass(defaults.extraClasses);
					defaults.uielement.find('.magicmessages-close').on('click',close);
					obj.append(defaults.uielement);
				}
				
				function messagesStart(event, request, settings){
					if (settings.magicmessages){
						$.extend( defaults, settings.magicmessages );
						obj.removeClass(resetStatus).addClass('magicmessages-loading magicmessages-' + (defaults.modal ? 'modal' : 'normal'));
						if (defaults.uielement==undefined){
							appendUI(obj);
						}else{
							defaults.uielement.find('.magicmessages-content').html(''); 
							defaults.uielement.find('.magicmessages-content').html(defaults.loadingStr);
						}
					}
				}
				
				function messagesComplete(event, request, settings){
					if (settings.magicmessages){
						if (defaults.displayMessage){
							obj.removeClass('magicmessages-loading');
							if (defaults.time!=0){
								clearTimeout(defaults.timeout);
								defaults.timeout = setTimeout(close,defaults.time);
							}
						}else{
							close();
						}
					}
				}
				
				$(document)
				 	.on('ajaxSend',messagesStart)
				 	.on("ajaxComplete",messagesComplete);
				
				defaults.obj = obj;
				
			},
			remove: function(){
				
			}
		}
		magicmessage.init($(this));
		return magicmessage;
	};

})( jQuery );;
/*!
 * jQuery Cookie Plugin v1.3.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as anonymous module.
		define(['jquery'], factory);
	} else {
		// Browser globals.
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function decode(s) {
		if (config.raw) {
			return s;
		}
		try {
			// If we can't decode the cookie, ignore it, it's unusable.
			return decodeURIComponent(s.replace(pluses, ' '));
		} catch(e) {}
	}

	function decodeAndParse(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		s = decode(s);

		try {
			// If we can't parse the cookie, ignore it, it's unusable.
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	var config = $.cookie = function (key, value, options) {

		// Write
		if (value !== undefined) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setDate(t.getDate() + days);
			}

			value = config.json ? JSON.stringify(value) : String(value);

			return (document.cookie = [
				config.raw ? key : encodeURIComponent(key),
				'=',
				config.raw ? value : encodeURIComponent(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {};

		// To prevent the for loop in the first place assign an empty array
		// in case there are no cookies at all. Also prevents odd result when
		// calling $.cookie().
		var cookies = document.cookie ? document.cookie.split('; ') : [];

		for (var i = 0, l = cookies.length; i < l; i++) {
			var parts = cookies[i].split('=');
			var name = decode(parts.shift());
			var cookie = parts.join('=');

			if (key && key === name) {
				result = decodeAndParse(cookie);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = decodeAndParse(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		if ($.cookie(key) !== undefined) {
			// Must not alter options, thus extending a fresh object...
			$.cookie(key, '', $.extend({}, options, { expires: -1 }));
			return true;
		}
		return false;
	};

}));
;
function initAddCategories(id,dataArray){
	$("#" + id).select2({
		multiple: true,
		data: dataArray,
		containerCssClass: 'select2-categories',
		dropdownCssClass: 'select2-categories small',
		createSearchChoice: function(term, data) {
			if ($(data).filter(function() { return this.text.localeCompare(term)===0; }).length===0) {
				var item = {id:-1,text:term, html:'<div class="create-category"><span>' + term + '</span><a href="#" class="btn btn-green btn-small-uppercase">create</a></div>'};
				return item;	
			}
		},
		maximumInputLength:20,
		formatSelection: function (item) {
			return item.text;
		},
		formatResult: function (item) {
			return item.html!=undefined ? item.html : item.text;
		},
		maximumSelectionSize: 2
	});
	$("#" + id)
	.on("change", function(e){
		if (e.val!=undefined){
			console.log(JSON.stringify({val:e.val, added:e.added, removed:e.removed}));
		}
	})
	.on("select2-opening", function() { 
		$(this).data('select2cache_val',$(this).val());
		$(this).data('select2cache_newval',$(this).val());
		$(this).data('select2cache_opened','true');
		$(this).data('select2cache_text',$(this).select2('data').text);
		$(this).select2("val",'');
	})
	.on("select2-close", function() { 
		var data = $(this).data();
		$this = $(this);
		if (data.select2cache_newval==data.select2cache_val){
			$(this).val(data.select2cache_val).trigger('change');
		}
		setTimeout(function() {
			$this.data('select2cache_opened','false');
		}, 100);
	})
	.on("select2-focus", function(e) {
		var sel2 = $(this).data('select2');
		var opened = $(this).data('select2cache_opened');
		setTimeout(function() {
			if (!sel2.opened() && (opened==undefined || opened=='false')) sel2.open();
		}, 0); 
	})
	.on("select2-selecting", function(e) {
		$(this).data('select2cache_newval',e.val);
	});
}

function initBulkCategories(id,dataArray){
	$("#" + id).select2({
		data: dataArray,
		containerCssClass: 'select2-categories single-choice',
		dropdownCssClass: 'select2-categories',
		createSearchChoice: function(term, data) {
			if ($(data).filter(function() { return this.text.localeCompare(term)===0; }).length===0) {
				var item = {id:-1,text:term, html:'<div class="create-category"><span>' + term + '</span><a href="#" class="btn btn-green btn-small-uppercase">create</a></div>'};
				return item;	
			}
		},
		maximumInputLength:20,
		formatSelection: function (item) {
			return item.text;
		},
		formatResult: function (item) {
			return item.html!=undefined ? item.html : item.text;
		}
	});
	$("#" + id)
	.on("change", function(e){
		if (e.val!=undefined){
			console.log(JSON.stringify({val:e.val, added:e.added, removed:e.removed}));
		}
	})
	

}

$(document).ready(function(){
	var elem = "input[type='hidden'].select2-categories";
	$(elem).each(function(e){
		initAddCategories($(this).attr('id'),eval($(this).data('initvalues')));
	});
	$(elem).each(function(e){
		$sel = $(this);
		setTimeout( function(){
			$("#" + $sel.attr('id')).find('select2-input').trigger('blur');
		}, 200 );
	});
	
	var bulkElem = $("#bulkAddCategories");
	initBulkCategories(bulkElem.attr('id'),eval(bulkElem.data('initvalues')));
});
;
(function($){

	var recordLines = function () {
		var iterator = 0;

		function initialize() {
			$('.adv-dns-panel').on('click', '.add-line', addLine);
			$('.adv-dns-panel').on('click', '.remove-line', removeLine);
		}
		
		function checkListSize(){
			if ($('.adv-dns-panel .records-list > ul li').length>0){
				$('.adv-dns-panel .empty').addClass('hidden');
			}else{
				$('.adv-dns-panel .empty').removeClass('hidden');
			}
		}

		function removeLine(event){
			event.preventDefault();
			$(this).parent().remove();
			checkListSize();
		}
		
		function addLine(event) {
			event.preventDefault();
			var data = $(this).data();
			clone(data.line);
			checkListSize();
		}
		
		function clone(type){
			//remove select2 from original line
			$('.adv-dns-panel .field-clone li.' + type + ' .coreuiselect').select2('destroy');
			
			//get element and clone it
			$elem = $('.adv-dns-panel .field-clone li.' + type);
			$newElem = $elem.clone().appendTo('.adv-dns-panel .records-list > ul');
			
			//initialize line events
			$newElem.find('.coreuiselect').select2({minimumResultsForSearch: -1});
			
			if (type=='url-record'){
				$newElem.find('select').change(function(e){
					var selectedOption = $newElem.find('select option:selected');
					var data = selectedOption.data();
					if (data.activaterow){
						$newElem.find('select').parent().parent().next().removeClass('hidden');
					}else{
						$newElem.find('select').parent().parent().next().addClass('hidden');
					}
				});
				
				$checkbox = $newElem.find('#meta_iterator'); 
				if ($checkbox.length>0){
					iterator++;
					$checkbox.attr('id','meta_' + iterator);
					$checkbox.next().attr('for','meta_' + iterator);
					$checkbox.click(function(e){
						var $lineElements = $(this).parent().parent().siblings('.show-hide');
						
						if ($lineElements.hasClass('hidden'))
							$lineElements.removeClass('hidden');
						else
							$lineElements.addClass('hidden');
					});
				}
				
				
			}
			
			
			
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		recordLines.initialize();
	});

})(jQuery);


(function($){

	var dnsCheckboxes = function () {

		function initialize() {
			$('.dns-records-list.holder').on('click', 'input:checkbox', handle);
		}
		
		function handle(event) {
			var data = $(this).data();
			var others = $(this).parent().siblings().find('input:checkbox');
			
			if (data.id=='leave'){
				if ($(this).is(':checked')){
					others.removeAttr('checked').attr('disabled','disabled');
				}else{
					others.removeAttr('disabled');
				}
			}
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		dnsCheckboxes.initialize();
	});

})(jQuery);



(function($){

	var mailLines = function () {

		function initialize() {
			$('.adv-mail-panel').on('click', '.btn-tab', showTab);
			$('.adv-mail-panel').on('click', '.remove-line', hideTab);
		}
		
		function showTab(event) {
			event.preventDefault();
			var data = $(this).data();
			
			activeDiv = data.holder;
			$(this).siblings().removeClass('active');
			$(this).addClass('active');
			
			$('.adv-mail-panel .mail-records .empty').addClass('hidden');
			$('.adv-mail-panel').find('.records-list').addClass('hidden');
			$('.adv-mail-panel').find('.'+data.holder).removeClass('hidden');
		}
		
		function hideTab(event){
			event.preventDefault();
			$('.adv-mail-panel .btn-tab').removeClass('active');
			$('.adv-mail-panel .mail-records .records-list').addClass('hidden');
			$('.adv-mail-panel .mail-records .empty').removeClass('hidden');
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		mailLines.initialize();
	});

})(jQuery);
;
(function($){

	var dashboardList = function () {

		function initialize() {
			$("body").on('click','.gp-expand',toggle);
		}
		
		function toggle(e){
			e.preventDefault();
			$bt = $(this);
			$bt.closest('.grey-panel').toggleClass('expanded');
			$('.table-sticky-filters').trigger('update');
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		dashboardList.initialize();
	});

})(jQuery);
;
/**
 * Expand & Collapse
 * 
 * Used for:
 * - Header subnav popovers
 * - Header subnav accordion (small screens)
 */
(function($){

	var expandCollapse = function () {

		var $el,
			$group;

		function initialize() {

			// Let mouse and touch events co-exist
			$('.expandable').on('click', '.toggle', toggle);
			$('.expandable').on('mouseenter mouseleave', toggle);
			$('.sign-in-box').click(function(event){
			    event.stopPropagation();
			});
			$('html').click(function(){
				$('.sign-in-box').removeClass('expanded');
			});
		}

		function toggle(event) {
			event.preventDefault();
			
			//IE8 and bellow hack
			var largeScreen = window.matchMedia('only screen and (min-width: 800px)').matches;
			if ( $.browser.msie && $.browser.version <=9 && $(window).width() >= 800) {
				largeScreen = true; 
			}
			
			// Only respond to mouseenter/leave at larger screens sizes
			if (event.type.indexOf('click') != -1 || largeScreen) {
			
				// Toggle expand/collapse
				$el = $(this).closest('.expandable');
				$group = $el.closest('.expandable-group');

				// If an expandable group has been specified, only allow 1 item to be expanded at a time
				if ($group.length) {
					if ($el.hasClass('sign-in-box')){
						if (event.type.indexOf('mousehover')){
							$el.addClass('expanded');
						}
					}else{
					
						if (event.type.indexOf('mouseleave') != -1) {
							$el.removeClass('expanded');
						}else{
							if ($el.hasClass('expanded')) {
								$group.find('.expandable').removeClass('expanded');
								// If it is the shopping cart 
								if($el.hasClass('shopping-cart')){
									$el.find('.disabled').remove();	
								}
							}else {
								$group.find('.expandable').removeClass('expanded');
								$el.addClass('expanded');
							}
						}
					}
				}
				else {
					$el.toggleClass('expanded');

					// Always collapse on mouseleave
					if (event.type.indexOf('mouseleave') != -1) {
						$el.removeClass('expanded');
						if($el.hasClass('shopping-cart')){
							$el.find('.disabled').remove();	
						}
					}
				}
			}
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		expandCollapse.initialize();
	});

})(jQuery);

/*max code*/
var ncCompliance= {
		 getToket: function () {
		  var tokenField = $("input[type='hidden'][name$='ncCompliance']");
		  if (tokenField.length == 0) {
		   return null;
		  } else {
		   return {
		    name: tokenField[0].name,
		    value: tokenField[0].value,
		    tokenName: '_NcCompliance'
		   };
		  }
		 },
		 checkAndAddToken: function(form) {
		  if (form != null && form.tagName == "FORM" && $(form).find("input[type='hidden'][name$='ncCompliance']").length == 0) {
		   var token = this.getToket();
		   var hiddenField = document.createElement("input");
		   hiddenField.setAttribute("type", "hidden");
		   hiddenField.setAttribute("name", token.tokenName);
		   hiddenField.setAttribute("value", token.value);
		   form.appendChild(hiddenField);
		  }
		 },
		 onSubmit: function () {
		  this.checkAndAddToken(event.target);
		  return true;
		 }
		}

		$(function () {
		 $.ajaxPrefilter(
		     function (options) {
		      if (options.type !== "GET") {
		       var token = ncCompliance.getToket();
		       if (token !== null) {
		        var initBeforeSend = null;
		        if (!options.beforeSend) {
		         initBeforeSend = options.beforeSend;
		        }
		        options.beforeSend = function (xhr) {
		         xhr.setRequestHeader(token.tokenName, token.value);
		         if (initBeforeSend != null) {
		          initBeforeSend(xhr);
		         }
		        }
		       }
		      }
		     }
		 );
		});
/*end max code*/


(function($){

	var navOverflow = function () {

		function initialize() {
			$('.nav-overflow-toggle').on('click', toggle);
		}

		// Toggle Primary Nav & Dock
		function toggle(event) {
			event.preventDefault();
			$('#header').find('.primary').toggleClass('expanded');
			$(window).trigger('resize');
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		navOverflow.initialize();
	});

})(jQuery);



(function($){
	var apNav = function () {

		function initialize() {
			/*
			if ($('#apnav nav').outerHeight()<$("#maincontent").outerHeight()){
				$('#apnav nav').affix({
				    offset: {
				      top: $("#apnav nav").offset().top
				      ,bottom: function () {
					      return $('#footer').outerHeight(true);
					  }	
				    },updateTop: function () {
						  return $("#apnav nav").offset().top;
					}
					
				})
			}
			*/
			/*
			$('#apnav nav').sticky({
			    top: function () {
					  return $("#apnav nav").offset().top;
				}
			    ,bottom: function () {
			    	return $('footer#footer').offset().top-$('#apnav nav').outerHeight(true);
				}	
			})
			*/
			$('#apnav nav').affix({
			    offset: {
			      top: $("#apnav nav").offset().top
			      ,bottom: function () {
				      return $('#footer').outerHeight(true);
				  }	
			    },updateTop: function () {
					  return $("#apnav nav").offset().top;
				}
			});
		
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		if ($('#apnav').length)
			apNav.initialize();
	});

})(jQuery);


(function($){

	var searchOverflow = function () {

		function initialize() {
			$('.top-hat .toggle-search').on('click', toggle);
			$('#header .search-form .close').on('click', close);
		}
		
		function close(event){
			event.preventDefault();
			$('#header').removeClass('show-search');
			$(window).trigger('resize');
		}

		function toggle(event) {
			event.preventDefault();
			$('#header').toggleClass('show-search');
			$(window).trigger('resize');
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		searchOverflow.initialize();
	});

})(jQuery);

(function($){

	var subMenu = function () {

		var $submenu,
			$clone,
			$this,
			$tabList,
			$tabView;
		
		// Build dock
		function initialize() {
			// Clone primary nav + events
			$submenu  = $('#submenu');
			$clone = $('#apnav nav > ul > li.selected > ul').clone(true);
			$submenu.prepend($clone);
			
			$('#submenu').on('click', 'a', update);
		}
		
		function update(event) {
			$this = $(this);

			if ($this.parent().hasClass('selected')){
				event.preventDefault();
				$tabList = $this.closest('#submenu');
		
				if ($this.parent().hasClass('selected') && !$tabList.hasClass('expanded')) {
					$tabList.addClass('expanded');
				}
				else {
					$tabList.removeClass('expanded');
				}
		
				// Update tabbed navigation
				$tabList.find('li').removeClass('selected');
				$this.parent().addClass('selected');
			}
	
		}
		

		// Handle close clicks
		return {
			initialize: initialize
		};
	}();

	$(function() {
		subMenu.initialize();
	});

})(jQuery);


/* double btns */

(function($){
	var splitButton = function () {
		var onit = false;

		function initialize() {
			$('body').on('click', '.split-btn .btn-dropdown', clicked);
			$('body').on('click', '.split-btn .dropdown a', forceClose);
			$('body').on('mouseleave', '.split-btn .btn-dropdown', mouseleft);
			$('body').on('mouseleave', '.split-btn .dropdown', mouseleft);
			$('body').on('mouseleave', '.split-btn .btn', mouseleft);
			$('body').on('mouseenter', '.split-btn .dropdown', mouseentered);
			$('body').on('mouseenter', '.split-btn .btn', mouseentered);
			
		}
		
		function clicked(e){
			e.preventDefault();
			if (!$(this).closest('.split-btn').hasClass('disabled')){
				$(this).parent().toggleClass('expanded');
				$split = $(this).closest('.split-btn');
				opened = $(this).parent().hasClass('expanded');
				$(this).closest('.split-btn').data('on',opened);
			}
		}
		
		function mouseentered(e){
			onit = true;
			$(this).closest('.split-btn').data('on',onit);
		}
		
		function mouseleft(e){
			$this = $(this);
			onit = false;
			$this.closest('.split-btn').data('on',onit);
			setTimeout(function(){
				if (!$this.closest('.split-btn').data('on')) {
					$this.parent().removeClass('expanded');
				}
				
			},200);
			
		}

		function forceClose(e){
			$this = $(this);
			onit = false;
			$this.closest('.split-btn').data('on',onit);
			$this.parent().removeClass('expanded');
		}

		
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		if ($('.split-btn').length)
			splitButton.initialize();
	});

})(jQuery);


/**
 * site messages
 * @param elem
 * @returns {Boolean}
 */

(function($){
	var closeSiteMsg = function () {

		function initialize() {
			$('.site-msg').on('click','.close',close);
		}
		
		function close(e){
			e.preventDefault();
			$(this).parent().hide();
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		closeSiteMsg.initialize();
	});

})(jQuery);

function closeSiteMsg(elem){
	var el = $(elem);
	el.parent().hide();
	return false;
}


/**
 * show hide checkbox
 **/

(function($){
	var showHideCheckbox = function () {

		function initialize() {
			$('body').on('click','.show-hide-checkbox .checkbox input[type="checkbox"]',clicked);
			/*$('.show-hide-checkbox .checkbox input[type="checkbox"]:checked').parent().parent().parent().parent().parent().toggleClass('expanded');*/
		}
		
		function clicked(e){
			$(this).parent().parent().parent().parent().parent().toggleClass('expanded');
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		showHideCheckbox.initialize();
	});

})(jQuery);

(function($){
	var phoneField = function () {

		function initialize() {
			$('.phone .has-checkbox input[type="checkbox"]').on('click',clicked);
			/*$('.phone .has-checkbox input[type="checkbox"]:checked').trigger('click');*/
		}
		
		function clicked(e){
			$(this).parent().parent().parent().parent().toggleClass('has-extension');
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		phoneField.initialize();
	});

})(jQuery);


function initConfirmBoxes() {
	$('html').click(function(event){
		target = $(event.target);
		if ( target.is('a') && !target.parent().hasClass("actions") && target.data().confboxrequired!='yes'){
			$('.conf-box').not('.hidden').parent().parent().addClass('hidden');
		}
	});
}

function closeConfirmBox(elem){
	var el = $(elem);
	el.parent().parent().parent().parent().addClass('hidden');
	return false;
}

/**
 * DROPDOWNS
 */

(function($){

	var dropdown = function () {
		
		function initialize() {
			var $body = $('body');
			$body.on('click','.dropdown > a',toggle);
			$body.on('click','.dropdown a.close-dropdown',closeDropdown);
			/* click outside to close */
			$body.on('click','.dropdown',function(e){
				e.stopPropagation();
			});
			
			$('html').click(function(){
				$('.dropdown').removeClass('expanded');
			});

			$body.on('click', '.dropdown-close-on-item-select .dropdown-list li a', function(){
				$('.dropdown').removeClass('expanded');
			});
			/*end click outside */
		}
		
		function toggle(e){
			e.preventDefault();
			if (!$(this).parent().hasClass('expanded')){
				$('.dropdown').removeClass('expanded');
			}
			$(this).parent().toggleClass('expanded');
			
		}

		function closeDropdown(e){
			e.preventDefault();
			$(this).closest('.dropdown').removeClass('expanded');
		}
	
		return {
			initialize: initialize
		};
	}();

	$(function() {
		dropdown.initialize();
	});
	
	$('.dropdown .dropdown-content > div').each(function(e){
		$this = $(this);
		$this.closest('.dropdown-content').css({'left':'-9999em','display':'block'});
		if ($this.outerHeight()>250){
			$this.slimscroll({});
		}
		$this.closest('.dropdown-content').removeAttr('style');
	});
					
	

})(jQuery);


/**
 *  BULK OPTIONS IN TABLES
 */

function updateBulkCheckboxes(e){
	$check = $(this);
	$table = $check.closest('.table-display');
	$selectAll = $table.find('input[type="checkbox"].select-all');
	num = $table.find('input[type="checkbox"].bulk').length-1;
	numSelected = $table.find('input[type="checkbox"].bulk:checked').length;
	
	if ($check.hasClass('select-all')){
		if ($check.is(':checked')){
			numSelected--;
		}
		
		if (num==numSelected){
			$table.find('input[type="checkbox"].bulk').removeAttr('checked');
			numSelected = 0;
		}else{
			$table.find('input[type="checkbox"].bulk').attr('checked','checked');
			numSelected = num;
		}
	}else{
		if ($selectAll.is(':checked')){
			numSelected--;
		}
		if (numSelected!=num){
			$selectAll.removeAttr('checked');
		}
		if (numSelected==num){
			$selectAll.attr('checked','checked');
		}
	}
	
	if (numSelected>0){
		$table.find('.bulk-actions').removeClass('hidden');
	}else{
		$table.find('.bulk-actions').addClass('hidden');
	}
}

function initTableBulkOptions(){
	$('.table-display input[type="checkbox"].bulk').on('click',updateBulkCheckboxes);
}

/**
 * RESPONSIVE TABLES
 */
function checkResponsiveTables(){
	$('table.responsive-table').each(function(){
		$tb = $(this);
		/*
		attr = $tb.attr('style');
		if (typeof attr !== undefined && attr !== false)
			$tb.removeAttr('style');
		
		
		if ($(this).parent().width() < $(this).width()){
			$(this).css('display','block');
		}
		*/

		if ($tb.hasClass('block')){
			$tb.removeClass('block');
		}
		if ($(this).parent().width() < $(this).width()){
			$tb.addClass('block');
		}
		
	});	
}

function initResponsiveTables(){
	$(window).on('resize',checkResponsiveTables);
	checkResponsiveTables();
}


function initCalendars(reload){
	var num = 0;
	$('.daterange-field a.show-calendar').each(function(){
		$(this).daterangepicker({applyClass: 'cal-' + num});
		$(this).addClass('cal-'+num);

		//target second input
		$input = $(this).siblings('input').eq(0);
		var val = $input.val().split(' - ');
		$(this).data('daterangepicker').setStartDate(val[0]);
		$(this).data('daterangepicker').setEndDate(val[1]);

		$inputreset = $(this).siblings('input').eq(1);
		val = $inputreset.val().split(' - ');
		$(this).data('resetStartDate',val[0]);
		$(this).data('resetEndDate',val[1]);
		num++;
	});

	if (reload==undefined){
		$('body').on('apply.daterangepicker','.daterange-field a.show-calendar',function(ev, picker) {
			btnClasses = picker.container.find('.applyBtn').attr('class');
			btnClasses = btnClasses.split(' ');
			daterangeClass = 'undefined';
			for (i=0; i<btnClasses.length; i++){
				if (btnClasses[i].indexOf('cal-')!=-1)
					daterangeClass = btnClasses[i];
			}
			$input = $('.daterange-field a.show-calendar.'+daterangeClass).siblings('input').eq(0); 
			$dropdown = $('.daterange-field a.show-calendar.'+daterangeClass+' span');
			
			var dateInterval = picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY');  
			
			$input.val(dateInterval);
			$input.trigger('change');
			$dropdown.html(dateInterval);
		});	
		
		$('body').on('click','.daterangepicker .resetBtn',function(ev){
			ev.preventDefault();
			$applyBtn = $(this).siblings('.applyBtn');
			var aux = $applyBtn.attr('class').split('-');
			var calId = -1;
			for (var i=0; i<aux.length ; i++){
				if (aux[i] == parseInt(aux[i])){
					calId = aux[i];
					break;
				}
			}
			
			$picker = $('.daterange-field a.show-calendar.cal-' + calId);
			if ($picker.length>0){
				$picker.data('daterangepicker').setStartDate($picker.data('resetStartDate'));
				$picker.data('daterangepicker').setEndDate($picker.data('resetEndDate'));
				$applyBtn.trigger('click');
			}
			
		});
	}
}

function initCheckboxFilter(){
	$('.dropdown.icon-filter a.alt-action, .dropdown.icon-category a.alt-action').click(function(e){
		e.preventDefault();
		$bt = $(this);
		$dropdown = $bt.parent().parent();
		$dropdown.find('input[type="checkbox"]').removeAttr('checked').removeClass('selected-childs');
		$dropdown.trigger('reset');
	});
}

function initPaginationInSamplePage(){
	$('#transactions-pagination').ncPagination({
		container: $('#transactions tbody'),
		firstPageAnchor: $("#transactions")
	});
}

function initPaginationInListingPage(){
	$('#address-book-pagination').ncPagination({
		container:$('#list-container'),
		dataUrl: 'actions.php?action=pagination_address',
		newpageTemplate: '<div class="ncpagination-page-title"><div class="row normal-vertical-spacing"><div class="columns"><p>Page <span class="ncpagination-current-page"></span> of <span class="ncpagination-max-page"></span><a class="ncpagination-back-link" href="#">Back to top</a></p></div></div><div class="row"><hr></div></div>',
		newpageLoadingTemplate: '<div class="ncpagination-page-title"><div class="row normal-vertical-spacing"><div class="columns"><p>Loading page <span class="ncpagination-current-page"></span> of <span class="ncpagination-max-page"></span></p></div></div><div class="row"><hr></div></div>'
	});
}

function initTruncate(){
	$('.truncate').each(function(){
		var more = $('<span class="more"></span>');
		
		$elem = $(this);
		$elem.append(more);
		$elem.addClass('see-all');
		
		if (more.offset().top-$elem.offset().top >=24 ){
			more.remove();
			
			var aux = $elem.text().split(' ');
			var i = 0;
			var textBuffer = aux[i];
			
			$elem.html('').append(textBuffer).append(more);
			while(more.offset().top-$elem.offset().top <24 && i<=aux.length){
				i++;
				textBuffer+= ' ' + aux[i];
				$elem.html('').append(textBuffer).append(more);
			}
			
			if (i<aux.length){
				i--;
				textBuffer = '';
				for (var j=0; j<i ; j++){
					textBuffer+= ' ' + aux[j];
				}
				textBuffer+='<span class="dots">... </span><span class="more">';
				for (var j=i; i<aux.length ; i++){
					textBuffer+= ' ' + aux[i];
				}
				textBuffer+= '</span>';
				var link = $('<a href="#">See all&nbsp;â</a>');
				link.click(function(e){
					e.preventDefault();
					$(this).parent().addClass('see-all');
				})
				$elem.html('').append(textBuffer).append(link);
			}
			$elem.removeClass('see-all');
		}else{
			more.remove();
		}
	});
	
}


(function($){

	var tabView = function () {

		var $this,
			$tabList,
			$tabPanel,
			$tabView;

		function initialize() {
			$('.tab-list').on('click', '.tab', update);
			$('.pill-list').on('click', '.tab', updatePills);
		}
		
		function updatePills(event){
			event.preventDefault();
			
			$this     = $(this);
			$tabList  = $this.closest('.pill-list');
			$tabPanel = $($this.find('a').prop('hash'));
			$tabView  = $this.closest('.pill-tabs');
			
			if ($this.hasClass('selected') && !$tabList.hasClass('expanded')) {
				$tabList.addClass('expanded');
			}
			else {
				$tabList.removeClass('expanded');
			}

			// Update tabbed navigation
			$tabList.find('.tab').removeClass('selected');
			$this.addClass('selected');

			// Update corresponding content
			$tabView.find('.tab-panel').removeClass('selected');
			$tabPanel.addClass('selected');
			
			//send extra events
			$('.table-sticky-filters').trigger('update');
			
		}
		
		function update(event) {
			$this     = $(this);
			$tabList  = $this.closest('.tab-list');

			if ($this.hasClass('external')){
				if ($this.hasClass('selected')){
					event.preventDefault();
					if ($this.hasClass('selected') && !$tabList.hasClass('expanded')) {
						$tabList.addClass('expanded');
					}
					else {
						$tabList.removeClass('expanded');
					}
				}
			}else{
				event.preventDefault();

				
				//$tabPanel = $($this.find('a').prop('hash'));
				$tabPanel = $("#" + $this.find('a').data('tabid'));
				$tabView  = $this.closest('.tab-view');

				// Expand/collapse tab list
				// Only visible in UI at smaller screen sizes
				if ($this.hasClass('selected') && !$tabList.hasClass('expanded')) {
					$tabList.addClass('expanded');
				}
				else {
					$tabList.removeClass('expanded');
				}

				// Update tabbed navigation
				$tabList.find('.tab').removeClass('selected');
				$this.addClass('selected');

				// Update corresponding content
				$tabView.find('.tab-panel').removeClass('selected');
				$tabPanel.addClass('selected');
				
				//send extra events
				$('.table-sticky-filters').trigger('update');
			}
		}

		return {
			initialize: initialize
		};
	}();

	$(function() {
		tabView.initialize();
	});

})(jQuery);

function initBucketsDomainDetail(dataArray){
	$("#buckets").select2({
		multiple: true,
		data: dataArray,
		createSearchChoice: function(term, data) { 
			if ($(data).filter(function() { return this.text.localeCompare(term)===0; }).length===0) {
				return {id:term, text:term};
			}
		},
		formatSelection: function (item) { return item.text; },
		formatResult: function (item) { return item.text; }	
	});
	$("#buckets").on("change", function(e){
		alert(JSON.stringify({val:e.val, added:e.added, removed:e.removed}));
	});
}



function handleCheckboxControl(e){
	$check = $(this);
	
	$level = $check.parent().siblings('.has-checkbox');
	$levelparent = $check.parent().parent().siblings('.has-checkbox');
	$levelchildren = $check.siblings('.has-checkbox');
	
	levelnr = +($level.length + 1);
	childrennr = +($levelchildren.length);
	
	if (childrennr>0){
		$levelchildren.each(function(){
			if ($check.is(':checked')){
				$(this).find('input[type="checkbox"]').attr('checked','checked').removeClass('selected-childs');
				$check.removeClass('selected-childs');
			}else{
				$(this).find('input[type="checkbox"]').removeAttr('checked').removeClass('selected-childs');
				$check.removeClass('selected-childs');
			}
		});
	}
	
	if ($check.parent().parent().hasClass('has-checkbox')){
		num = 0;
		if ($check.is(':checked')){
			num++;
		}
		$level.each(function(){
			if ($(this).children('input[type="checkbox"]').is(':checked')){
				num++;
			}
		});
		
		if (num == levelnr){
			$check.parent().siblings('input[type="checkbox"]').attr('checked','checked').removeClass('selected-childs');
		}else{
			$check.parent().siblings('input[type="checkbox"]').removeAttr('checked');
			if (num>0){
				$check.parent().siblings('input[type="checkbox"]').addClass('selected-childs');
			}else{
				$check.parent().siblings('input[type="checkbox"]').removeClass('selected-childs');
			}
		}
	}
}

function initCheckboxControl(){
	$('.checkbox-control input[type="checkbox"]').on('click',handleCheckboxControl);
}

function stickCartWidget(){
	
	$('.cart-widget').sticky({
		top: function () {
			return $(this).parent().offset().top-24;
		},
		bottom: function () {
			var table = $(this).parent().parent();
			return table.offset().top+table.height()-24-$(this).height();
		}
	});
	
	/*
	$('.cart-widget').affix({
	    offset: {
	      top: $(".cart-widget-holder").offset().top
	      ,bottom: function () {
		      return $('#footer').outerHeight(true);
		  }	
	    },updateTop: function () {
			  return $("#apnav nav").offset().top;
		}
	});
	*/
	
}


function initStickyFilters(){
	$('.table-sticky-filters').sticky({
		top: function () {
			/*return $('.table-filters').offset().top-24;*/
			return $(this).find('.table-filters').offset().top-24;
		},
		bottom: function () {
			var table = $(this).parent().find('table');
			/*return $('.responsive-table').offset().top+$('.responsive-table').height()-24-$('.table-filters').height();*/
			return table.offset().top+table.height()-24-$(this).find('.table-filters').height();
		}
	});
	$('.listing-page-sticky-filters').sticky({
		top: function () {
			return $('.table-filters').offset().top-24;
		},
		bottom: function () {
			return $('.list').offset().top+$('.list').height()-24-$('.table-filters').height();
		}
	});

	if ($('[data-nccontrol="visibility"]').length){
		$(document).on('visibility.change',function(){
			$('.table-sticky-filters').trigger('update');
			$('.listing-page-sticky-filters').trigger('update');
		});
	}
}

function modalConfirm(modalTitle, modalContent, callback, obj){
	$.magnificPopup.open({
		items: {
			src: '<div class="columns large-8 xlarge-6 large-centered modal-window" id="contentModal"><header><h3 class="confirmModal-title">'+modalTitle+'</h3></header><div class="content"><div class="row"><div class="columns"><p class="confirmModal-content">'+modalContent+'</p></div></div><div class="form"><div class="row actions"><div class="columns text-center"><a href="#" class="btn confirmModal-close reset-margin" data-value="true">Yes</a><a href="#" data-value="false" class="confirmModal-close">No</a></div></div></div></div></div>',
		    type: 'inline'
		},
		preloader: false,
		modal: true,
	    mainClass: 'mfp-prompt'
	});
	function closeModal(e){
		e.preventDefault();
		$.magnificPopup.close();
		callback($(this).data('value'), obj);
		$(document).off('click.modalConfirm', '.confirmModal-close',closeModal);
	}
	$(document).on('click.modalConfirm', '.confirmModal-close', closeModal);
}



function browserHistory(url,callback,parameters){
	firstLoad = true;
	if ($.address.baseURL().indexOf(url)!=-1){
		console.log("Browser History Init URL: " + url);
		if (arguments.length > 2){
			$.address.bind('change',{args: parameters},handleUrl);
		}else{
			$.address.bind('change',handleUrl);
		}
	}

	function handleUrl(e){
		if (!firstLoad){
			if (e.data!=null){
				callback($.address.path(),e.data.args);	
			}else{
				callback($.address.path());
			}
		}else{
			firstLoad = false;
			var path = $.address.path();
			if (path!='/'){
				if(e.data!=null){
					callback($.address.path(),e.data.args);	
				}else{
					callback($.address.path());
				}
			}
		}
	}
}

/**
 * this function is just an example for the "Pagination" in framework docs live examples
 * @param path
 */
function loadContentExample(path){
	/* we get the #page-X where X is the page we want to load */
	var loadPage = path.split('-')[1];
	$.ajax({
		url: 'messages_content.php',
		data: 'page=' + loadPage,
		magicmessages: {
			time:25000,
			modal:false,
			loadingStr: "loading page " + loadPage
		},
		success: function (result) {
			var res = eval('(' + result + ')');
			$(".AjaxPageCall").html(res.html);
			$mm.displayError();
		}
	})
}


function beforeOpenTest(popup,obj){
	console.log("before open");
	if (obj){
		 console.log("Object Data: " + obj.names[0].firstName + " " + obj.names[0].lastName);
	}

	/* set popup to not open */ 
	//popup.st.el.data('mfpvalid',false);
	/* end */
}
function openTest(popup,obj){
	console.log("open");
}
function beforeCloseTest(popup,obj){
	console.log("before close");
}
function closeTest(popup,obj){
	console.log("close");
}

function initModalPopup(){
	$('.popup-modal').magnificPopup({
		  callbacks: {
			  beforeOpen: function() {
				  this.type = this.st.el.data('mfptype');
				  if (this.st.el.data('mfpbeforeopen')!=undefined){
					  if (this.st.el.data('mfpobject')!=undefined)
						  return window[this.st.el.data('mfpbeforeopen')](this,eval(this.st.el.data('mfpobject')));
					  else{
						  return window[this.st.el.data('mfpbeforeopen')](this,null);
					  }
				  }
			  },
			  open : function(){
				  if (this.st.el.data('mfpvalid') != undefined && !this.st.el.data('mfpvalid')){
					  this.close();
					  this.st.el.data('mfpvalid',true);
				  }
				  //open event
				  if (this.st.el.data('mfpopen')!=undefined){
					  window[this.st.el.data('mfpopen')](this,this.st.el.data('mfpobj'));
				  }
			  },
			  beforeClose : function(){
				  if (this.st.el.data('mfpbeforeclose')!=undefined){
					  window[this.st.el.data('mfpbeforeclose')](this,this.st.el.data('mfpobj'));
				  }
			  },
			  close : function(){
				  if (this.st.el.data('mfpclose')!=undefined){
					  window[this.st.el.data('mfpclose')](this,this.st.el.data('mfpobj'));
				  }
			  }
			  
		  },
		  preloader:true
		});
}

function ResponsiveTooltipSetting() {
    return {
        advdns: {
            'remove-tip': { align: 'right', width: '999999', extraclass: 'prompt-tip remove-tip', autoshow: false },
            'locked-tip': { align: 'left', width: '999999', extraclass: 'prompt-tip locked-tip', autoshow: false, tipToggle: "obj.parent().siblings().find('p')" },
            'mobile-locked-tip': { align: 'right', width: '999999', extraclass: 'prompt-tip', autoshow: false },
            'meta': { align: 'center', width: '999999', extraclass: 'input-tip', autoshow: false },
            'add-nameserver': { align: 'center', width: '999999', extraclass: 'input-tip', autoshow: false, tipToggle: "obj.find('a')" },
            'ribbon-tooltip': {width:'1024',extraclass:'tip-1024',align:'right'}
        }
    }
}

(function($){
	//init modal windows FW
	initModalPopup();
	
	
	/* init browser history for FWDocs example*/
	browserHistory('ap-mockup-fwdocs/index.php?menu=le&page=pagination',loadContentExample);
	/**
	 * for SB4 use something like:
	 * 
	 *  browserHistory('Profile/Billing/Orders',functionThatReceivesPath,[optional object]);
	 */
	
	
	GetCartTotalFromCookie();
	initTableBulkOptions();
	initResponsiveTables();
	
	/*$('body .responsive-tooltip').responsiveTooltip();*/
	$('body .form:not(.smaller) .responsive-tooltip').responsiveTooltip({width:'1024',extraclass:'tip-1024',align:'right'});
	$('body .responsive-tooltip.rt-init').responsiveTooltip({width:'1024',extraclass:'tip-1024',align:'right'});
	$('body .domain-list .responsive-tooltip').responsiveTooltip({align:'center',width:'999999',extraclass:'dl-tip'});
	$('body .expiring-soon .responsive-tooltip').responsiveTooltip({align:'center',width:'999999',extraclass:'dl-tip'});
	
	initConfirmBoxes();
	initCalendars();
	initCheckboxFilter();
	
	//cartwidget in expiring soon page
	stickCartWidget();
	
	//initPaginationInSamplePage();
	//initPaginationInListingPage();

	initStickyFilters();

	//list of user buckets
	//initBucketsDomainDetail([{id: 0, text: 'personal'},{id: 1, text: 'inmyserver'},{id: 2, text: 'parkeddomain'}]);
	//initAddCategories('domain1',[{id: 0, text: 'personal'},{id: 1, text: 'inmyserver'},{id: 2, text: 'parkeddomain'}]);	
	//initAddCategories('domain2',[{id: 0, text: 'personal'},{id: 1, text: 'inmyserver'},{id: 2, text: 'parkeddomain'}]);	

	initCheckboxControl();
	initTruncate();
	
	$('.pass-check').passwordcheck();
	
	$('.open-modal').magnificPopup({
		  type:'inline',
		  callbacks: {
			  beforeOpen: function() {
			    console.log('Start of popup initialization');
			  },
			  open: function() {
			    console.log('Popup is opened');
			  },
			  beforeClose: function() {
			    console.log('Popup close has been initiated');
			  },
			  close: function() {
			    console.log('Popup removal initiated (after removalDelay timer finished)');
			    this.content.trigger('modal-window-iframe-closed');
			  },
			  afterClose: function() {
			    console.log('Popup is completely closed');
			    $(this).trigger('modal-window-closed');
			  }
		  }
	});
	
	/* modal confirm example
	 * PLEASE CHANGE / REMOVE after understanding and correct implementation
	 */
	function modalResult(result, obj){
		if (result){
			alert("Yes, delete it");
		}else{
			alert("No, don't delete it");
		}
	}
	$(".confirm-remove").click(function(e){
		e.preventDefault();
		modalConfirm('Remove domain manager','Are you sure you want to remove (this is dummy text)?',modalResult);
	});
	/* end confirm example */
	
	
	/*
	$('.open-modal-iframe').magnificPopup({
		type:'iframe',
		iframe: {
			markup: '<div class="mfp-iframe-scaler columns large-10 xlarge-8 large-centered">'+
				        '<div class="mfp-close"></div>'+
				        '<iframe class="mfp-iframe" frameborder="0" allowfullscreen></iframe>'+
				    '</div>'
		}
	});
	*/

	$('.open-modal-iframe').magnificPopup({
		type:'iframe',
		iframe: {
			markup: '<div class="mfp-iframe-scaler columns large-10 xlarge-8 large-centered">'+
				        '<div class="mfp-close"></div>'+
				        '<iframe class="mfp-iframe" frameborder="0" allowfullscreen></iframe>'+
				    '</div>'
		}
	});

	
	//magic messages init
	$mm = $('body').magicmessages();

	function gotoUrl(result, obj){
		if (result){
			window.location.href = obj.attr('href');
		}
	}
	
	$('[data-spy="prompt"]').each(function () {
      var $spy = $(this);
      var data = $spy.data();
      
      $spy.click(function(e){
    	  e.preventDefault();
    	  modalConfirm(data.prompt_title,data.prompt_content,gotoUrl,$spy);
      });
    });
	
	$(".select2").select2();
	$(".coreuiselect").select2({minimumResultsForSearch: -1});
	$(".select-small").select2({minimumResultsForSearch: -1, dropdownCssClass: 'small'});
	
})(jQuery);

/*
(function($){

	var domainList = function () {

		function initialize() {
			if ($('.domain-list').length){
				$(window).resize(function(e){
					
					
					$('.domain-list td.domain-name').each(function(e){
						$elem = $(this);
						$elem.find('p').eq(0).find('strong').css('max-width',$elem.width()-30);
						if ($elem.find('p').eq(0).find('sup').length){
							$elem.find('p').eq(0).find('strong').css('max-width',$elem.width()-70-$elem.find('p').eq(0).find('sup').outerWidth());
							
						}
					});
				});
				$(window).trigger('resize');
			}
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		domainList.initialize();
	});

})(jQuery);
*/
(function($){

	var maxlength = function () {

		function initialize() {
		    $('textarea[maxlength]').each(function(){
		    	$ta = $(this);
		    	var max = $ta.attr('maxlength');
		    	$input = $('<p class="reset-margin text-smaller textarea-maxlength">'+max+'</p>');
		    	
		    	$input.insertAfter($ta);
		    	
	            $ta.keyup(function(e){
	            	$input.html(max-$ta.val().length);
	            });
	            
	            $ta.keyup();
		    });
		}
		
		return {
			initialize: initialize
		};
	}();

	$(function() {
		maxlength.initialize();
	});

})(jQuery);





(function ($) {

    var kbSearch = function () {

        function initialize() {
            $('body').on('click', 'div.primary div.search-form form button[type="submit"]', search);
        }

        function search(event) {
            event.preventDefault();
            var searchText = $(this).prev("input[type='search']").val();
            var cmsurl = $(this).prev("input[type='search']").prev("input[type='hidden']").val();
            if (searchText.trim() != "" && cmsurl != "") {
                window.location.href = cmsurl + "/support/knowledgebase/searchResult.aspx?q=" + searchText;
            }
        }

        return {
            initialize: initialize
        };
    }();

    $(function () {
        kbSearch.initialize();
    });

})(jQuery);

function GetCartTotalFromCookie() {
    var total = jQuery.parseJSON($.cookie("carttotalnoofitemscookie"));
    if (total != null && total != undefined && total != "") {
        var formattedTotal = total.FormattedCartTotal;
        $("a.cart-sub-total .header-card-subtotal-price", "header div.top-hat.expandable-group ul.commerce .expandable.shopping-cart").text(formattedTotal);
        $("header div.top-hat.expandable-group ul.commerce .expandable.shopping-cart li.subtotal span").html(formattedTotal);
        if (parseFloat(total.CartTotal) > 0) {
            $("span.icon-cart", "header div.top-hat.expandable-group ul.commerce .expandable.shopping-cart").addClass("icon-cart-full");
        }
    }
}

var modalWindowForm = function () {

	function initialize() {
		$('body [data-spy="modal-window-iframe"]').each(function(e){
			$(this).data('html',$(this).html());
		});
        $('body').on('submit', '[data-spy="modal-window-iframe"] form', submitForm);
        $('[data-spy="modal-window-iframe"]').on('modal-window-iframe-closed',resetHtml);
        $('[data-spy="modal-window-iframe"]').on('click','.open-in-modal',loadURL);
    }

	function resetHtml(e){
		$(this).html($(this).data().html);
	}
	
	function loadURL(event){
		event.preventDefault();
		
		$bt = $(this);
		
		$modal = $(this).closest('[data-spy="modal-window-iframe"]');
		$modal.addClass('async-processing');
		
		$.ajax({
			url: $bt.attr('href'),
			success: function (result) {
				$modal.html(result);
		        $modal.removeClass('async-processing');
			}
		})
	}
	
    function submitForm(event){
        event.preventDefault();
        $form = $(this);
        
        $modal = $form.closest('[data-spy="modal-window-iframe"]');
        $modal.addClass('async-processing');
        
		$.ajax({
			url: $form.attr('action'),
			data: $form.serialize(),
			success: function (result) {
				$modal.html(result);
		        $modal.removeClass('async-processing');
			}
		})
    }
    
    return {
        initialize: initialize
    };
}();

$(function () {
    modalWindowForm.initialize();
});

;
//********************************************* ORDER REPORTS AJAX CALL **************************************************************************************************************
function OrderAjaxPageCall(fromDate, toDate, domainItems, serviceItems, status, quickSearchValues, sortingValue, sortingType, pageNo, pageSize, totalPage, dataUrl) {
    var params = '&fromdate=' + fromDate +
                '&todate=' + toDate +
				'&domainitems=' + domainItems +
                '&serviceitems=' + serviceItems +
				'&status=' + status +
                '&quicksearchvalues=' + quickSearchValues +
                '&sortingvalue=' + sortingValue +
                '&sortingtype=' + sortingType +
                '&pageno=' + pageNo +
                '&pagesize=' + pageSize +
                '&totalpage=' + totalPage;
    var holder = $('.AjaxPageCall');
    //holder.addClass('loading');
    $.ajax({
        type: 'POST',
        url: dataUrl,
        data: params,
        magicmessages: {
            modal: true,
            displayMessage: false
        },
        success: function (result) {
            //initialize();
            //initCalendars(true);
            //initCheckboxFilter(true);
            $('html, body').animate({ scrollTop: $(".AjaxPageCall").offset().top - 125}, 200);
            nPage = +result.requested_page;
            var pages = result.pages;
            $(holder).html($.parseHTML(pages[0].html));

            //Top Paging related code
            var paginationPrev = $(".pagination-small div.dropdown a span");
            paginationPrev.html(pageNo + ' of ' + totalPage);

            // ------------ **** Applied Classes For First page case not display previous link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == 1) {
                paginationPrevDiv.addClass('first-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('first-page-selected'))
                    paginationPrevDiv.removeClass('first-page-selected');
            }

            // ------------ **** Applied Classes For Last page case not display last link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == totalPage) {
                paginationPrevDiv.addClass('last-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('last-page-selected'))
                    paginationPrevDiv.removeClass('last-page-selected');
            }
            //--------------------- *** remove the loader class ***------------------------------------------
            //if (holder.hasClass('loading'))
            //    holder.removeClass('loading');
            //initTruncate();
        },
        error: function (error) {
            console.log(error);
        }
    });
    return false;
}
//When Clicking Sorting Assign Existing Sorting Value,NewValue and Sorting Type
function OrdersSorting(obj, existingVal, newVal, sortingType) {
    $(".ExistingSortingValue").val(existingVal);
    $(".NewSortingValue").val(newVal);
    $(".NewSortingType").val(sortingType);
    $(obj).closest("form").submit();
}

//********************************************* END ORDERS AJAX CALL **************************************************************************************************************

//********************************************* COMMON AJAX CALL RELATED**************************************************************************************************************
$(document).ready(function () {
    $('.daterange-field input[type="hidden"].form-control').change(function (e) {
        $(this).closest("form").submit();
    });

    $('a.search-btn.searchBtnHistoryClick').click(function () {
        $(this).closest("form").submit();
    });

    //When user click the top page size page assign new value to Model and Form posting
    $('a.top-pagesize-change').click(function () {
        if ($(this).attr('rel') != null && $(this).attr('rel') != "")
            $(".PageSizeValue").val($(this).attr('rel'));
        $(this).closest("form").submit();
    });

    //Top Page Previous Link Trigger Event Fired
    $(".pagination-small a.prev").click(function (e) {
        var paginationPrev = $(".pagination.group a.prev");
        if (paginationPrev[0] != typeof (undefined) && paginationPrev[0] != null) {
            $(paginationPrev).trigger('click');
        }
        else {
            e.preventDefault();
        }
        return false;
    });
    //Top Page Next Link Trigger Event Fired
    $(".pagination-small a.next").click(function (e) {
        var paginationnext = $(".pagination.group a.next");
        if (paginationnext[0] != typeof (undefined) && paginationnext[0] != null) {
            $(paginationnext).trigger('click');
        }
        else {
            e.preventDefault();
        }
        return false;
    });

});

//*********************************************END COMMON AJAX CALL RELATED**************************************************************************************************************

//********************************************* TRANSACTION REPORTS AJAX CALL **************************************************************************************************************
function BillingTransactionsListAjaxPageCall(fromDate, toDate, FilteredTransactionType, FilteredPaymentMethod, FilteredStatuses, quickSearchValue, sortingValue, sortingType, pageNo, pageSize, totalPage, dataUrl) {
    var params = '&fromdate=' + fromDate +
                '&todate=' + toDate +
				'&FilteredTransactionType=' + FilteredTransactionType +
                '&FilteredPaymentMethod=' + FilteredPaymentMethod +
				'&FilteredStatuses=' + FilteredStatuses +
                '&QuickSearchValue=' + quickSearchValue +
                '&sortingvalue=' + sortingValue +
                '&sortingtype=' + sortingType +
                '&pageno=' + pageNo +
                '&pagesize=' + pageSize +
                '&totalpage=' + totalPage;
    var holder = $('.AjaxPageCall');
    $.ajax({
        type: 'POST',
        url: dataUrl,
        data: params,
        magicmessages: {
            modal: true,
            displayMessage: false
        },
        success: function (result) {
            $('html, body').animate({ scrollTop: $(".AjaxPageCall").offset().top - 125}, 200);
            nPage = +result.requested_page;
            var pages = result.pages;
            $(holder).html($.parseHTML(pages[0].html));
            var paginationPrev = $(".pagination-small div.dropdown a span");
            paginationPrev.html(pageNo + ' of ' + totalPage);
            // ------------ **** Applied Classes For First page case not display previous link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == 1) {
                paginationPrevDiv.addClass('first-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('first-page-selected'))
                    paginationPrevDiv.removeClass('first-page-selected');
            }

            // ------------ **** Applied Classes For Last page case not display last link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == totalPage) {
                paginationPrevDiv.addClass('last-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('last-page-selected'))
                    paginationPrevDiv.removeClass('last-page-selected');
            }
        },
        error: function (error) {
            console.log(error);
        }
    });
    return false;
}

//*********************************************END TRANSACTION AJAX CALL **************************************************************************************************************

//*********************************************PORFILE-->MANAGE ADDRESS AJAX CALL **************************************************************************************************************
function ManageAddressAjaxPageCall(filteredRAAItems, quickSearchValue, pageNo, pageSize, totalPage, dataUrl) {
    var params = '&raafilteritems=' + filteredRAAItems +
              '&quicksearchvalues=' + quickSearchValue +
              '&pageno=' + pageNo +
              '&pagesize=' + pageSize +
              '&totalpage=' + totalPage;
    var holder = $('.AjaxPageCall');
    //holder.addClass('loading');
    $.ajax({
        type: 'POST',
        url: dataUrl,
        data: params,
        magicmessages: {
            modal: true,
            displayMessage: false
        },
        success: function (result) {
            $('html, body').animate({ scrollTop: $(".AjaxPageCall").offset().top - 125}, 0);
            nPage = +result.requested_page;
            var pages = result.pages;
            $(holder).html($.parseHTML(pages[0].html));

            //Top Paging related code
            var paginationPrev = $(".pagination-small div.dropdown a span");
            paginationPrev.html(pageNo + ' of ' + totalPage);

            // ------------ **** Applied Classes For First page case not display previous link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == 1) {
                paginationPrevDiv.addClass('first-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('first-page-selected'))
                    paginationPrevDiv.removeClass('first-page-selected');
            }

            // ------------ **** Applied Classes For Last page case not display last link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == totalPage) {
                paginationPrevDiv.addClass('last-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('last-page-selected'))
                    paginationPrevDiv.removeClass('last-page-selected');
            }
            //--------------------- *** remove the loader class ***------------------------------------------
            //if (holder.hasClass('loading'))
            //    holder.removeClass('loading');
            //initTruncate();
            
            function gotoUrl(result, obj) {
                if (result) {
                    window.location.href = obj.attr('href');
                }
            }
            
            //Re-initializing the click event, hence it will support the remove click functionality for those addresses load dynamically
            $('[data-spy="prompt"]').each(function () {            
                var $spy = $(this);
                var data = $spy.data();

                $spy.click(function (e) {
                    e.preventDefault();
                    modalConfirm(data.prompt_title, data.prompt_content, gotoUrl, $spy);
                });
            });
        },
        error: function (error) {
            console.log(error);
        }
    });
    return false;
}

function ManageCardsAjaxPageCall(filteredCardTypeItems, filteredExpDateItems, quickSearchValue, sortingValue, sortingType, pageNo, pageSize, totalPage, dataUrl) {
    var params = '&cardTypefilteritems=' + filteredCardTypeItems +
                '&expDatefilteritems=' + filteredExpDateItems +
                '&quicksearchvalues=' + quickSearchValue +
               '&sortingvalue=' + sortingValue +
               '&sortingtype=' + sortingType +
               '&pageno=' + pageNo +
               '&pagesize=' + pageSize +
               '&totalpage=' + totalPage;
    var holder = $('.AjaxPageCall');
    //holder.addClass('loading');    
    $.ajax({
        type: 'POST',
        url: dataUrl,
        data: params,
        magicmessages: {
            modal: true,
            displayMessage: false
        },
        success: function (result) {
            $('html, body').animate({ scrollTop: $(".AjaxPageCall").offset().top - 125}, 200);
            nPage = +result.requested_page;
            var pages = result.pages;
            $(holder).html($.parseHTML(pages[0].html));

            //Top Paging related code
            var paginationPrev = $(".pagination-small div.dropdown a span");
            paginationPrev.html(pageNo + ' of ' + totalPage);

            // ------------ **** Applied Classes For First page case not display previous link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == 1) {
                paginationPrevDiv.addClass('first-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('first-page-selected'))
                    paginationPrevDiv.removeClass('first-page-selected');
            }

            // ------------ **** Applied Classes For Last page case not display last link ***-------------------------------
            var paginationPrevDiv = $(".pagination-small");
            if (pageNo == totalPage) {
                paginationPrevDiv.addClass('last-page-selected');
            }
            else {
                if (paginationPrevDiv.hasClass('last-page-selected'))
                    paginationPrevDiv.removeClass('last-page-selected');
            }
            //--------------------- *** remove the loader class ***------------------------------------------
            //if (holder.hasClass('loading'))
            //    holder.removeClass('loading');
            //initTruncate();
            $('.table-display input[type="checkbox"].bulk').on('click', updateBulkCheckboxes);
            $('[data-spy="quicktip"]').each(function () {
                var $obj = $(this);
                $obj.quicktip();
            });

            initModalPopup();
        },
        error: function (error) {
            console.log(error);
        }
    });
    return false;
}
//*********************************************END PORFILE-->MANAGE ADDRESS AJAX CALL **************************************************************************************************************
;
var nc_Val_Numeric = "^[0-9]+$";
var nc_Val_AlphaNumeric = "^[a-zA-Z0-9]*$";
var nc_Val_WithoutSpecialCharacters = "^[0-9A-Za-z-_', .]+$";
var nc_Val_AlphaNumericDot = "^[0-9A-Za-z.]+$";
var nc_Val_PhoneAndFaxPattern = /^\+\d{1,3}\.\d{1,16}$/;
var nc_Val_PhoneExtPattern = /^\d*$/;
var nc_Val_EmailPattern = /^[A-Za-z0-9\.\-_]+@[A-Za-z0-9\-\.]*[a-zA-Z0-9]+\.[A-Za-z0-9\.]+$/;
var nc_Val_EmailPatternForAddForwarder = /^[A-Za-z0-9\.\-_+]+@[A-Za-z0-9\-\.]*[a-zA-Z0-9]+\.[A-Za-z0-9\.]+$/;
var nc_Val_EnglishNameAndNumbers = "^[a-zA-Z0-9,.' ]+$";
var nc_Val_NameServerRegex = /^([a-zA-Z0-9]+[a-zA-Z0-9\-\.]{0,99}[a-zA-Z0-9]+\.)([a-zA-Z0-9]+[a-zA-Z0-9\-]{0,60}[a-zA-Z0-9]+\.[a-zA-Z]{2,20})$/;
var emailRegexWaitMilliSeconds = 1000;
var nc_Val_AlphaAndDot = "^[A-Za-z.]+$";
var nc_Val_HostName = "^@$|^\\*$|^[*a-z0-9._-]+$"; // taken from existing manage domainservices.asp.
var nc_Val_Protocol = "^[0-9A-Za-z-_.]+$";
var nc_Val_Ipv4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/ig;
var nc_Val_Ipv6 = /^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*/ig;

/*
Newly Added as mentioned in Contact Details Field Validation sheet. Refer the below link.
https://docs.google.com/a/logicgenie.com/spreadsheets/d/12mJE6Nd6Bexd_BgBnweUB_-FDwju5UmQuX5tMpfasX4/edit#gid=2063526911
*/
var nc_Val_FnameLnameRegExpression = "^[a-zA-Z0-9-.' ]+$";
var nc_Val_OrgCompanyNameRegExpression = "^[a-zA-Z0-9-,.'():;+/ ]+$"; 
var nc_Val_AddressRegex = "^[a-zA-Z0-9-,.'():;/# ]+$"; 
var nc_Val_CityRegex = "^[a-zA-Z0-9-,.' ]+$";
var nc_Val_StateRegex = "^[a-zA-Z0-9-,.'():;/ ]+$";
var nc_Val_TwoCapitalsRegex = "^[A-Z]{2}$";
var nc_Val_OrgCompanyNameWithAmpersandRegExpression = "^[a-zA-Z0-9-,.'():;&+/ ]+$";
var nc_Val_AddressWithAmpersandRegex = "^[a-zA-Z0-9-,.'():;/#& ]+$";

var nc_Val_AlphaNumericSpace = "^[0-9A-Za-z ]+$";
var nc_Val_OneOrMoreDigits = "^\\d+$";
var nc_Val_FiveOrMoreDigits = "^\\d{4}\\d+$";


//COMMON REGEX
var nc_Val_PostalCodeRegex = "^[a-zA-Z0-9- ]+$";

//FOR US
var nc_Val_US_PostalCodeRegex = "^\\d{5}(-\\d{4})?$";

//FOR CANADA
var nc_Val_CA_PostalCodeRegex = "^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d[A-Z]{1}\\d$";

//FOR GREAT BRITIAN
var nc_Val_GB_PostalCodeRegex = "^(GIR 0AA|[A-PR-UWYZ]([0-9]{1,2}|([A-HK-Y][0-9]|[A-HK-Y][0-9]([0-9]|[ABEHMNPRV-Y]))|[0-9][A-HJKPS-UW]) [0-9][ABD-HJLNP-UW-Z]{2})$";

//FOR NETHERLANDS
var nc_Val_NL_PostalCodeRegex = "^\\d{4}\\s{1}[a-zA-Z]{2}$";

//FOR BRAZIL
var nc_Val_BR_PostalCodeRegex = "^\\d{5}(-\\d{3})$";

//FOR JAPAN
var nc_Val_JP_PostalCodeRegex = "^\\d{3}(-\\d{4})$";

// FOR JERSEY

var nc_Val_JE_PostalCodeRegex = "^JE\\d \\d[A-Z]{2}$";

// FOR GUERNSEY

var nc_Val_GG_PostalCodeRegex = "^GY\\d\\d? \\d[A-Z][A-Z]$";

//POSTAL REGEX
var nc_Val_PassportRegex = "^[a-zA-Z0-9 ]+$";
var nc_Val_SSNRegex = /^[0-9\b]+$/;


;

var timer;
var IsMouseDownEvent = false;

var nc_Error_Collections = new Array();
var AcceptedCards = ["American Express", "MasterCard", "Visa"];
$(document).ready(function () {


    $("input[type=text],input[type=password]").focus(function () { IsMouseDownEvent = false; });

    $(".btn nc_btnSubmit").mousedown(function () {
        console.log('Mouse Down event triggers from class selector')
        //IsMouseDownEvent = true;
    });


    $('body').on("mousedown", ".nc_btnCancelWithAnchorTag", function (e) {
        IsMouseDownEvent = true;

    });



    behalfcheck($('div.show-hide-checkbox'));
    savecreditcardcheck($('div.show-hide-checkbox'));
    //autorenewalcreditcardcheck($('div.show-hide-checkbox'));
    setcardtypeclass($('#cc_type'))

    //$("input[type=text],input[type=password]").keydown(function (e) {
    //    var key = e.which;
    //    //9=tab 17=ctrl, 16=shift
    //    if (key != 9 && key != 17 && key != 16) {
    //        nc_RemoveErrorAndDescription($(this))
    //    }
    //});

    $('body').on("keyup", "input[type=text],input[type=password]", function (e) { BlurFunctions(e, this); });
    $('body').on("change", "input[type=text],input[type=password]", function (e) { BlurFunctions(e, this); });

    $("input[type=text],input[type=password]").bind('paste', function (e) {
        var ctl = $(this);
        setTimeout(function () {
            BlurFunctions(e, ctl);
        }, 100);
    });
    //$("input[type=text],input[type=password]").focusout(function (e) { BlurFunctions(e, this); });


    $('body').on("keydown", "input[data-ap-onlynumericandspace]", function (event) {
        var allowdot = $(this).attr("data-ap-onlynumericandspace") == "True" ? true : false;
        allownumericwithSpace(event, this);
    });
    $('body').on("paste", "input[data-ap-onlynumericandspace]", function (e) {
        var obj = this;
        setTimeout(function (e) {
            var regex = /^[0-9 ]+$/;
            var txtPhoneval = $(obj).val().replace(/\s+/g, '');;
            var IsNumeric = regex.test(txtPhoneval);
            if (!IsNumeric) {
                $(obj).val('')
            }
            else { $(obj).val(txtPhoneval) }

        }, 0);
        //   e.preventDefault();
    });
    $('body').on("keydown", "input[data-ap-numericonlyonkeydown]", function (event) {
        var allowdot = $(this).attr("data-ap-numericonlyonkeydown") == "True" ? true : false;
        allownumericonly(event, this, allowdot);
    });
    $('body').on("paste", "input[data-ap-numericonlyonkeydown]", function (e) {
        var obj = this;
        setTimeout(function (e) {
            var regex = /^[0-9 ]+$/;
            var txtPhoneval = $(obj).val().replace(/\s+/g, '');;
            var IsNumeric = regex.test(txtPhoneval);
            if (!IsNumeric) {
                $(obj).val('')
            }
            else { $(obj).val(txtPhoneval) }

        }, 0);
    });
    $('body').on("keyup", "input[data-ap-restrictspecialcharacterkeyup]", function () { PreventSpecialCharacters(this) });
    $('body').on("keyup", "input[data-ap-allowalphanumericdot]", function () { AllowAlphaNumericDot(this) });
    $('body').on("click", "input[data-ap-extensioncheckboxclick]", function () { showphoneextension(this, true); });
    $('#VerificationType').bind('click', hidephonextforsms(this));
    $('body').on("click", "input[data-ap-companycheckboxclick]", function () { behalfcheck('div.show-hide-checkbox'); });
    $('body').on("keypress", "input[data-ap-allownumericwithdot]", function (event) { allownumericwithDot(event, this) });
    $('body').on("paste", "input[data-ap-allownumericwithdot]", function (e) { e.preventDefault(); });
    $('body').on("click", "input[data-ap-svaecreditcardcheckboxclick]", function () { savecreditcardcheck('div.show-hide-checkbox'); });
    $('body').on("click", "input[data-ap-cardautorenewalcheckboxclick]", function () { setCreditCardAutoRenewal(this); });


    // MARKET PLACE AND AFFILIATE EARNIGS PAGE BUTTON SUBMIT
    $('body').on("click", "input[data-ap-submitbtnonclick]", function () {
        nc_Error_Collections = [];
        var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var emailregexonblurReturn = true;
        if ($('#PaypalEmailId').val() != "")
            emailregexonblurReturn = ncEmail("input[data-ap-emailregexonblur]");
        var lessthanequalto = true;
        if ($('#WithdrawAmount').val() != "")
            lessthanequalto = LessThanEqualToZeroValidation("input[data-ap-lessthanqualtozero]", 'submit');
        var greaterthanequalto = true;
        if ($('#WithdrawTo').val().toLowerCase() == "paypal" && lessthanequalto)
            greaterthanequalto = NumericGreaterThanOrEqualTo("input[data-ap-numericgreaterthanequalto]", "submit");
        var availableearnings = true;
        if (greaterthanequalto && lessthanequalto && $('#WithdrawAmount').val() != "")
            availableearnings = CompareValFirstLessThanSecond($("#AuthorizedEarnings"), $("#WithdrawAmount"), BillingInfoRes.error_Contextual_Withdraw_Amount_Greater, "obj2")

        var decimalPointReturn = AllowDecimalPoints("input[data-ap-allowdecimalpoint]", "submit");
        if (requiredonblurReturn == true && emailregexonblurReturn == true && lessthanequalto == true && greaterthanequalto == true && availableearnings == true) {
            return true;
        }
        else {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);
            if (!$('#WithdrawAmount').hasClass('loading error') && !$('#PaypalEmailId').hasClass('loading error') && $('#AccountPassword').hasClass('loading error')) {
                $('#AccountPassword').focus();
            }
            return false;
        }
    });

    // MARKET PLACE AND AFFILIATE EARNIGS PAGE BUTTON SUBMIT

    //  FOR ADDRESS CONTROL BUTTON CLICK

    var formaddressedit = $(".form").attr("data-ap-addressedit");
    if (typeof formaddressedit !== typeof undefined && formaddressedit !== false) {
        $('body').on('change', '#addressCountry', function () {

            var errMsg = $(this).attr('data-ap-required-country');
            if (errMsg != undefined && $(this).val() == '') {
                nc_DisplayErrorAndDescription($(this), errMsg);
                addressCountrychk = false;
            }
            else {
                // Country Drop Down change case check Postal code & State validations.
                inputRequired("input[data-ap-requiredonblur][data-ap-statefield][textbox-type=\"state\"]", "blur");
                inputRequired("input[data-ap-requiredonblur][textbox-type=\"postal\"]", "blur");
                nc_RemoveErrorAndDescription($(this));
                this.focus();
            }
        });

        $('body').on('change', '#PhoneCode', function () {

            var errMsg = $(this).attr('data-ap-required-phone');
            if (errMsg != undefined && $(this).val() == '') {
                nc_DisplayErrorAndDescription($(this), errMsg);
                addressCountrychk = false;
            }
            else {
                if (!$('#Address_Phone').hasClass('loading error'))
                    nc_RemoveErrorAndDescription($(this));
            }
        });

        $('body').on('change', '#FaxCode', function () {

            var errMsg = $(this).attr('data-ap-required-fax');
            if (errMsg != undefined && $(this).val() == '' && $('#Address_Fax').val() != "") {
                nc_DisplayErrorAndDescription($(this), errMsg);
                addressCountrychk = false;
            }
            else {
                nc_RemoveErrorAndDescription($(this));
            }
        });
    }
    $('body').on("click", "input[data-ap-addresssubmitonclick]", function () {

        nc_Error_Collections = [];
        var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var retNameField = ncNameField("input[data-ap-namefield]", "submit")
        var retAddressField = ncAddressField("input[data-ap-addressfield]", "submit")
        var retCityField = true;

        var retStateField = true;
        if (requiredonblurReturn) {
            retCityField = ncCity("input[data-ap-cityfield]", "submit")
            retStateField = ncState("input[data-ap-statefield]", "submit")
        }

        var emailregexonblurReturn = ncEmail("input[data-ap-emailregexonblur]", "submit");
        var chkMinLength = true;
        if (retNameField && requiredonblurReturn)
            chkMinLength = CheckMinLength("input[minlength]", "submit");

        var OrgCompCheck = true;
        if ($('#addressOrganization').is(':visible') && $('#addressOrganization').val() != '')
            OrgCompCheck = ncOrgJobTitle("input[data-ap-orgjobtitle]", "submit")
        var phoneMinLength = true;
        if ($('#Address_Phone').val() != '')
            phoneMinLength = CheckMinLength($('#Address_Phone'), 'keyup');
        var checkaddnameexistonblurReturn = CheckAddressname($('#addressName'), 'submit');

        var addressCountrychk = true;
        var errMsg = $('#addressCountry').attr('data-ap-required-country');
        if (errMsg != undefined && $('#addressCountry').val() == '') {
            nc_DisplayErrorAndDescription($('#addressCountry'), errMsg);
            addressCountrychk = false;
        }
        else {
            nc_RemoveErrorAndDescription($('#addressCountry'));
        }
        var phoneExtension = true;
        if (!$('#Address_Phone').hasClass('loading error')) {
            var $CountryCodeDropDown = $('#PhoneCode');
            var errMsg = $CountryCodeDropDown.attr('data-ap-required-phone');
            if (errMsg != undefined && $CountryCodeDropDown.val() == '') {
                nc_DisplayErrorAndDescription($CountryCodeDropDown, errMsg);
                phoneExtension = false;

            }
            else {
                nc_RemoveErrorAndDescription($CountryCodeDropDown);
            }
        }


        var faxExtension = true;
        if ($('#Address_Fax').val() != '') {
            var $CountryCodeDropDown = $('#FaxCode');
            var errMsg = $CountryCodeDropDown.attr('data-ap-required-fax');
            if (errMsg != undefined && $CountryCodeDropDown.val() == '') {
                nc_DisplayErrorAndDescription($CountryCodeDropDown, errMsg);
                faxExtension = false;

            }
            else {
                nc_RemoveErrorAndDescription($CountryCodeDropDown);
            }
        }


        if (requiredonblurReturn && emailregexonblurReturn && retNameField && retAddressField && retCityField && retStateField && chkMinLength && phoneMinLength && phoneExtension && checkaddnameexistonblurReturn && faxExtension && addressCountrychk && OrgCompCheck) {
            return true;
        }
        else {

            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);

            return false;
        }

    });

    function checkCardNameExistsForUserOnBlur(isBlur) {
        //Ajax function
        var dataUrl = "/profile/billing/CheckCardNameIfExistsAjaxCall";
        var creditCardId = $("form input[type='hidden']#creditcard_Id").val();
        var inputName = $("form input[data-ap-checkcardnameexistsonblur]#friendly_name").val();
        if (inputName != "" && $("form input[data-ap-checkcardnameexistsonblur]#friendly_name").is(':visible')) {
            var params = '&creditCardId=' + creditCardId +
                        '&inputCardName=' + inputName;
            var returnVal = false;
            try {
                $.ajax({
                    type: 'GET',
                    url: dataUrl,
                    data: params,
                    async: !(isBlur == true),
                    success: function (result) {
                        if (result != "" && result != typeof (undefined)) {
                            nc_DisplayErrorAndDescription($('form input[data-ap-checkcardnameexistsonblur]#friendly_name'), result);
                            returnVal = false;
                        }
                        else {
                            nc_RemoveErrorAndDescription($('form input[data-ap-checkcardnameexistsonblur]#friendly_name'));
                            returnVal = true;
                        }
                    },
                    error: function (result) {
                        returnVal = false;
                    }
                });
            }
            catch (err) {
                return false;
            }
            if (isBlur == true)
                return returnVal;
        }
    }
    $('body').on('blur', 'form input[data-ap-checkcardnameexistsonblur]#friendly_name', checkCardNameExistsForUserOnBlur);
    //Credit Card Related Submit Validation
    $('body').on("click", "input[data-ap-creditcard-addresssubmitonclick]", function () {
        //Set Stripe Public key
        if (typeof (Stripe) != "undefined") {
            Stripe.setPublishableKey($('#StripePublishableKey').val());
        }
        nc_Error_Collections = [];
        var retnameoncardfield = nameOnCardfield("input[data-ap-nameoncardfield]", "submit");
        var returncardType = GetCardType("input[data-ap-cardnumberfield]", "submit");
        var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var retNameField = ncNameField("input[data-ap-namefield]", "submit");
        var retAddressField = ncAddressField("input[data-ap-addressfield]", "submit");
        var retcvcField = PreventCreditcardSpecialCharacters("input[data-ap-submit-cvcnumber]");

        var cardNameCheck = true;
        if ($('#friendly_name').is(':visible') && $('#friendly_name').val() != '')
            cardNameCheck = cardNamefield("input[data-ap-cardnamefield]", "submit");
        if (cardNameCheck && $("input[data-ap-cardnamefield]").is(":visible"))
            cardNameCheck = checkCardNameExistsForUserOnBlur(true);

        var newDefaultCardChk = true;
        if ($('#NewDefaultCardId').length > 0) {
            var errMsg = $('#NewDefaultCardId').attr('data-ap-new-default-card-required');
            if (errMsg != undefined && $('#NewDefaultCardId').val() == '0') {
                if ($('#CardUseAsOption').val() != '0') {
                    nc_DisplayErrorAndDescription($('#NewDefaultCardId'), errMsg);
                    newDefaultCardChk = false;
                }
            }
            else {
                nc_RemoveErrorAndDescription($('#NewDefaultCardId'));
            }
        }

        var newFirstBackupCardChk = true;
        if ($('#NewFirstBackupCardId').length > 0) {
            var errMsg = $('#NewFirstBackupCardId').attr('data-ap-new-firstbackup-card-required');
            if (errMsg != undefined && $('#NewFirstBackupCardId').val() == '0') {
                if ($('#CardUseAsOption').val() == '3') {
                    nc_DisplayErrorAndDescription($('#NewFirstBackupCardId'), errMsg);
                    newFirstBackupCardChk = false;
                }
            }
            else {
                nc_RemoveErrorAndDescription($('#NewFirstBackupCardId'));
            }
        }

        var retCityField = true;

        var retStateField = true;
        if (inputRequired("input[data-ap-requiredonblur][data-ap-cityfield]", "submit"))
            retCityField = ncCity("input[data-ap-cityfield]", "submit");
        if (inputRequired("input[data-ap-requiredonblur][data-ap-statefield]", "submit"))
            retStateField = ncState("input[data-ap-statefield]", "submit");


        var year = $('#ccexp_year');
        var month = $('#ccexp_month');
        var isExpDateValid = ValidateExpiryDate(month, year, '');

        var chkMinLength = true;
        chkMinLength = CheckMinLength("input[minlength]", "submit", true, true);

        var addressCountrychk = true;
        var errMsg = $('#addressCountry').attr('data-ap-required-country');
        if (errMsg != undefined && $('#addressCountry').val() == '') {
            nc_DisplayErrorAndDescription($('#addressCountry'), errMsg);
            addressCountrychk = false;
        }
        else {
            nc_RemoveErrorAndDescription($('#addressCountry'));
        }

        var creditCardNumberChk = true;
        var ccnumber = $('input[data-ap-cardnumberfield]#ccc_number');
        if ($("input[data-ap-cardnumberfield]#ccc_number").is(':enabled')) {
            if (Stripe.card.validateCardNumber($("input[data-ap-cardnumberfield]#ccc_number").val())) {
                if (ncCheckCardPaymentType($('input[data-ap-cardnumberfield]#ccc_number'), 'submit'))
                    nc_RemoveErrorAndDescription($('input[data-ap-cardnumberfield]#ccc_number'));
            }
            else {
                errMsg = $('input[data-ap-cardnumberfield]#ccc_number').attr('error-message');
                nc_DisplayErrorAndDescription($('input[data-ap-cardnumberfield]#ccc_number'), errMsg);
                creditCardNumberChk = false;
            }
        }

        if (retcvcField && retnameoncardfield && returncardType && cardNameCheck && requiredonblurReturn && retNameField && retAddressField && retCityField && retStateField && chkMinLength && addressCountrychk && creditCardNumberChk && newDefaultCardChk && newFirstBackupCardChk && isExpDateValid) {
            if ($("#creditcard_Id").val().trim() == "") {
                var $form = $('input[name=stripe_token_number]').get(0).form;
                Stripe.card.createToken($form, stripeResponseHandler);
                return false;
            }
            $("#cc_cvc").remove();
            return true;
        }
        else {

            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);
            if ($("form.form.credit-card.credit-card-topup").length > 0) {
                $("p.cont-msg.info a#editLink.edit-link").trigger("click");
            }
            return false;
        }

    });

    // Generate the stripe token number
    function stripeResponseHandler(status, response) {
        if (response.error) {
            ErrorDisplayControlShow(response.error.message);
            return false;
        }
        else {
            var token = response.id;
            $("#stripe_token_number").val(token);

            var RealCardNumber = $("#ccc_number").val();
            if (RealCardNumber.length >= 13) {
                var firstSix = RealCardNumber.substr(0, 6);
                var lastFour = RealCardNumber.substr(RealCardNumber.length - 4)
                var maskValue = (RealCardNumber.length - 10);
                $("#ccc_number").val(firstSix + maskValueImplementation(maskValue) + lastFour);
            }
            $("#cc_cvc").remove();

            $('input[name=stripe_token_number]').get(0).form.submit();

        }
    };

 function maskValueImplementation(maskValue)
    {
        var maskImplementation = "";
        for (i = 0; i < maskValue; i++) {
            maskImplementation += "0";
        }
        return maskImplementation;
    };

    $('body').on("mousedown", "a[data-ap-preventblurbuttonclick]", function () {
        IsMouseDownEvent = true;
        $(this).trigger("click");
    });
    //  FOR ADDRESS CONTROL BUTTON CLICK

    //  FOR TWOFA CONTROL BUTTON CLICK

    var formtwofa = $(".form").attr("data-ap-twofaadddevice");
    if (typeof formtwofa !== typeof undefined && formtwofa !== false) {
        $('#CountryCode').change(function () {
            var errMsg = $(this).attr('data-ap-required-phone');
            if (errMsg != undefined && $(this).val() == '') {
                nc_DisplayErrorAndDescription($(this), errMsg);
                addressCountrychk = false;
            }
            else {
                if (!$('#PhoneNumber').hasClass('loading error'))
                    nc_RemoveErrorAndDescription($(this));
            }
        });

    }


    $('body').on("click", "input[data-ap-twofasubmitonclick]", function () {
        var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var minlengthCheck = CheckMinLength("input[minlength]", "submit");
        var checkverificationcodeonblurReturn;
        var verificationcode = $("input[data-ap-checkverificationcodeonblur]");
        if (typeof verificationcode !== typeof undefined && verificationcode !== false && requiredonblurReturn) {
            checkverificationcodeonblurReturn = nc_TwofaVerification_Validation("input[data-ap-checkverificationcodeonblur]", "submit");
        }
        var isPhoneCode = true;
        if (!$('#PhoneNumber').hasClass('loading error')) {
            var $CountryCodeDropDown = $('#CountryCode');
            var $phoneTextBox = $('#PhoneNumber');
            var errMsg = $CountryCodeDropDown.attr('data-ap-required-phone');
            if (errMsg != undefined && $CountryCodeDropDown.val() == '') {
                nc_DisplayErrorAndDescription($CountryCodeDropDown, errMsg);
                isPhoneCode = false;

            }
            else {
                nc_RemoveErrorAndDescription($CountryCodeDropDown);
            }
        }


        if (requiredonblurReturn && checkverificationcodeonblurReturn && minlengthCheck && isPhoneCode) {
            return true;
        }
        else {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);

            if (!$('#FriendlyName').hasClass('loading error') && !$('#PhoneNumber').hasClass('loading error') && $('#CountryCode').hasClass('loading error')) {
                $('#CountryCode').focus();
            }
            else if (!$('#FriendlyName').hasClass('loading error') && !$('#PhoneNumber').hasClass('loading error') && !$('#CountryCode').hasClass('loading error') && $('#Password').hasClass('loading error')) {
                $('#Password').focus();
            }
            return false;
        }
    });

    showphoneextension("input[data-ap-extensioncheckboxclick]", false);

    $("#VerificationType").change(function () {
        hidephonextforsms(this);
    });

    $("#FriendlyName").blur(function () {
        $("#hiddencontactname").val($(this).val());
    });

    //  FOR TWOFA CONTROL BUTTON CLICK
    //Password confirmation
    var formpasswordchange = $(".form").attr("data-ap-formpasswordchange");
    if (typeof formpasswordchange !== typeof undefined && formpasswordchange !== false) {
        $("#NewPassword,#ConfirmPassword").keyup(function () {
            if (inputRequired($(this), 'keyup'))
                nc_PasswordChange_conform_Validation($('#NewPassword'), $('#ConfirmPassword'));
        });

        $("#NewPassword,#ConfirmPassword").change(function () {
            if (inputRequired($(this), 'keyup'))
                nc_PasswordChange_conform_Validation($('#NewPassword'), $('#ConfirmPassword'));
        });

        $('body').on("click", "input[data-ap-changepasswordclick]", function () {
            nc_Error_Collections = [];
            var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
            var newPasswordReturn = inputRequired($('#NewPassword'), "submit");
            var confirmPasswordReturn = inputRequired($('#ConfirmPassword'), "submit");


            var PasswordValidation = nc_PasswordChange_conform_Validation("#NewPassword", "#ConfirmPassword");
            if (requiredonblurReturn && newPasswordReturn && confirmPasswordReturn && PasswordValidation) {
                encodePasswordValuesToBase64($("#NewPassword"), $("#ConfirmPassword"));
                var URL = "/profile/security/password/change";
                var newpassword = $("#NewPassword").val();
                var oldpassword = $("#OldPassword").val();
                var params = { "newPassword": newpassword, "oldPassword": oldpassword };

                try {
                    $.ajax({
                        url: URL,
                        data: params,
                        type: "POST",
                        async: false,
                        beforeSend: function (xhr) {
                            console.log('Before AJAX call')
                        },
                        success: function (resultSet) {
                            if (resultSet.result != "") {
                                if (resultSet.errorcontrol == "OldPassword") {
                                    $('#OldPassword').val('')
                                    $('#OldPassword').focus()
                                    //nc_DisplayErrorAndDescription($('#OldPassword'), resultSet.errorcontrolmsg);
                                    ErrorDisplayControlShow(resultSet.result, true);
                                }
                                else {
                                    nc_RemoveErrorAndDescription($('#OldPassword'));

                                }
                                ErrorDisplayControlShow(resultSet.result)
                                $.magnificPopup.st.el.data('mfpvalid', false);
                                return false;
                            }
                            else {
                                nc_RemoveErrorAndDescription($('#OldPassword'));
                                $.magnificPopup.close();
                                location.reload();
                                return true;
                            }


                        }

                    });
                }
                catch (e) {
                    return false;
                }

            }
            else {
                var firstError = $("input[type=password].loading.error:first");
                if (firstError != null && firstError != undefined)
                    firstError.focus();
                return false;
            }
        });
    }
    //End password confirmation


    //FOR SECURITY ALERT LISTING PAGE AND BUTTON SUBMIT

    //Remove the error message when any one of the check box checked in Security Alert Options view. Start
    $('body').on("click", "#checkboxAccountAccess", function () {
        if (IsMouseDownEvent) {
            IsMouseDownEvent = false;
        }
        else {
            if ($(this).is(':checked')) {
                nc_RemoveErrorAndDescription($('#checkboxDomainNames'), '')
            }
        }

    });

    $('body').on("click", "#checkboxAccountContacts", function () {
        if (IsMouseDownEvent) {
            IsMouseDownEvent = false;
        }
        else {
            if ($(this).is(':checked')) {
                nc_RemoveErrorAndDescription($('#checkboxDomainNames'), '')
            }
        }

    });
    $('body').on("click", "#checkboxDomainNames", function () {
        if (IsMouseDownEvent) {
            IsMouseDownEvent = false;
        }
        else {
            if ($(this).is(':checked')) {
                nc_RemoveErrorAndDescription($('#checkboxDomainNames'), '')
            }
        }

    });

    $('body').on("click", "#checkboxConfirmEmail", function () {

        if ($(this).is(':checked')) {
            nc_RemoveErrorAndDescription($('#checkboxConfirmEmail'), '')
        }


    });

    //Remove the error message when any one of the check box checked in Security Alert Options view. End


    $('body').on("click", "input[data-ap-securityAlertSubmitClick]", function () {

        var requiredonblurReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var emailregexonblurReturn = ncEmail("input[data-ap-emailregexonblur]");
        var checkboxCollection = [$("#checkboxAccountAccess"), $("#checkboxAccountContacts"), $("#checkboxDomainNames")]
        var atleastOneCheckBoxReturn = AtLeastOneCheckboxAttribute(checkboxCollection, $("#checkboxDomainNames"));
        var mandatorycheckboxCollection = [$("#checkboxConfirmEmail")]
        var mandatoryCheckBox = true;
        if ($("#checkboxConfirmEmail").is(':visible'))
            mandatoryCheckBox = MandatorycheckBox(mandatorycheckboxCollection);
        var compareTwoValuesReturn = true;
        if ($('#emailTextboxForCompare').is(':visible') && emailregexonblurReturn) {
            compareTwoValuesReturn = CompareTwoValuesForNotEquality($('#emailTextboxForCompare'), $('#OldEmailAddress'), SecInfoClientRes.error_Site_OldAndNewEmailComparison)
        }
        if (!requiredonblurReturn || !atleastOneCheckBoxReturn || !emailregexonblurReturn || !compareTwoValuesReturn || !mandatoryCheckBox) {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);
            return false;
        }
        return true;


    });

    $('body').on("keyup", "#emailTextboxForCompare", function () {
        var emailregexonblurReturn = ncEmail("input[data-ap-emailregexonblur]");
        if (emailregexonblurReturn)
            return CompareTwoValuesForNotEquality($(this), $('#OldEmailAddress'), SecInfoClientRes.error_Site_OldAndNewEmailComparison)
        else
            return false;
    });

    //FOR SECURITY ALERT LISTING PAGE AND BUTTON SUBMIT
    if ($("form.manage-cards").length > 0) {
        var bDefaultErrorDisplay = false;
        var bFirstBackupErrorDisplay = false;
        var bSecondBackupErrorDisplay = false;

        var EditDefaultsCardValidation = function (triggeredBy) {
            var returnVal;
            var selectedDefaultCardId = $("div#EditDefaultsCard div.content select#SelectedDefaultCard").val();
            var selectedFirstBackupId = $("div#EditDefaultsCard div.content select#SelectedFirstBackupCard").val();
            var selectedSecondBackupId = $("div#EditDefaultsCard div.content select#SelectedSecondBackupCard").val();
            var isUseForAutoRenewChecked = $("div#EditDefaultsCard div.content input[type=\"checkbox\"]#IsUserForAutoRenewal").is(":checked");

            var checkBoxDiv = $("div#EditDefaultsCard div.content input[type=\"checkbox\"]#IsUserForAutoRenewal").parent().parent().parent().parent().parent();
            if (isUseForAutoRenewChecked == false) {
                if ($(checkBoxDiv).hasClass('expanded'))
                    $(checkBoxDiv).removeClass('expanded');
            }
            else {
                if (!$(checkBoxDiv).hasClass('expanded'))
                    $(checkBoxDiv).addClass('expanded')
            }

            var selectedSecondBackupCard = $("div#EditDefaultsCard div.content select#SelectedSecondBackupCard");
            if (selectedFirstBackupId != "0") {
                selectedSecondBackupCard.removeAttr("disabled");
            }
            else {
                selectedSecondBackupCard.val("0");
                selectedSecondBackupCard.select2();
                selectedSecondBackupCard.attr("disabled", true);
            }

            if (selectedDefaultCardId == null || selectedDefaultCardId == '0' || selectedDefaultCardId == typeof (undefined))
                selectedDefaultCardId = '';
            if (selectedFirstBackupId == null || selectedFirstBackupId == '0' || selectedFirstBackupId == typeof (undefined))
                selectedFirstBackupId = '';
            if (selectedSecondBackupId == null || selectedSecondBackupId == '0' || selectedSecondBackupId == typeof (undefined))
                selectedSecondBackupId = '';
            $.ajax({
                url: "/Profile/Billing/EditDefaultsCardValidation",
                data: {
                    "selectedDefaultCardId": selectedDefaultCardId, "selectedFirstBackupId": selectedFirstBackupId, "selectedSecondBackupId": selectedSecondBackupId,
                    "eventTriggeredBy": triggeredBy, "isUseForAutoRenewChecked": isUseForAutoRenewChecked
                },
                type: "POST",
                async: false,
                success: function (result) {
                    if (result != null) {
                        if (result.IsResultSuccess != null && result.IsResultSuccess != typeof (undefined)) {
                            if (result.DefaultCardType == 'alert') {
                                nc_DisplayAlertAndDescription($("div#EditDefaultsCard div.content select#SelectedDefaultCard"), result.DefaultCardMessage);
                            }
                            else if (result.DefaultCardType == 'error') {
                                nc_DisplayErrorAndDescription($("div#EditDefaultsCard div.content select#SelectedDefaultCard"), result.DefaultCardMessage);
                            }
                            else if ((selectedDefaultCardId != selectedFirstBackupId && selectedDefaultCardId != selectedSecondBackupCard) || !($("input[type=\"checkbox\"]#IsUserForAutoRenewal").is('checked'))) {
                                nc_RemoveClassAndDescription($("div#EditDefaultsCard div.content select#SelectedDefaultCard"));
                            }

                            if (result.FirstBackupType == 'alert') {
                                nc_DisplayAlertAndDescription($("div#EditDefaultsCard div.content select#SelectedFirstBackupCard"), result.FirstBackupMessage);
                            }
                            else if (result.FirstBackupType == 'error') {
                                nc_DisplayErrorAndDescription($("div#EditDefaultsCard div.content select#SelectedFirstBackupCard"), result.FirstBackupMessage);
                            }
                            else if (selectedFirstBackupId != selectedDefaultCardId && selectedFirstBackupId != selectedSecondBackupCard) {
                                nc_RemoveClassAndDescription($("div#EditDefaultsCard div.content select#SelectedFirstBackupCard"));
                            }

                            if (result.SecondBackupType == 'alert') {
                                nc_DisplayAlertAndDescription($("div#EditDefaultsCard div.content select#SelectedSecondBackupCard"), result.SecondBackupMessage);
                            }
                            else if (result.SecondBackupType == 'error') {
                                nc_DisplayErrorAndDescription($("div#EditDefaultsCard div.content select#SelectedSecondBackupCard"), result.SecondBackupMessage);
                            }
                            else if (selectedSecondBackupCard != selectedDefaultCardId && selectedSecondBackupCard != selectedFirstBackupId) {
                                nc_RemoveClassAndDescription($("div#EditDefaultsCard div.content select#SelectedSecondBackupCard"));
                            }
                        }
                        else {
                            $("div#EditDefaultsCard div.content").html(result);
                        }
                    }
                    else {
                        $("div#EditDefaultsCard div.content").html('');
                    }
                    $("div#EditDefaultsCard div.content select").removeClass("loading error");
                    returnVal = result.IsResultSuccess;
                },
                error: function (result) {
                    $("div#EditDefaultsCard div.content").html('');
                    returnVal = false;
                }
            });
            return returnVal;
        }


        $('body').on("change", "div#EditDefaultsCard div.content select#SelectedDefaultCard", function () { EditDefaultsCardValidation($("div#EditDefaultsCard div.content select#SelectedDefaultCard").attr("data-card-type")) });

        $('body').on("change", "div#EditDefaultsCard div.content select#SelectedFirstBackupCard", function () { EditDefaultsCardValidation($("div#EditDefaultsCard div.content select#SelectedFirstBackupCard").attr("data-card-type")) });

        $('body').on("change", "div#EditDefaultsCard div.content select#SelectedSecondBackupCard", function () { EditDefaultsCardValidation($("div#EditDefaultsCard div.content select#SelectedSecondBackupCard").attr("data-card-type")) });

        $('body').on("click", "div#EditDefaultsCard div.content input[type=\"checkbox\"]#IsUserForAutoRenewal", function () { EditDefaultsCardValidation($("input[type=\"checkbox\"]#IsUserForAutoRenewal").attr("data-card-type")) });

        // EDIT DEFAULT CARD BUTTON SUBMIT
        $('body').on("click", "[data-ap-editdefaultscardsubmitclick]", function () {
            var editDefaultSaveForm = "form.save-default-cards#EditDefaultCardsSave";

            if (EditDefaultsCardValidation("none")) {
                $(editDefaultSaveForm + " input[type=\"hidden\"]#defaultCard").val($("div#EditDefaultsCard div.content select#SelectedDefaultCard").val());
                $(editDefaultSaveForm + " input[type=\"hidden\"]#firstBackupCard").val($("div#EditDefaultsCard div.content select#SelectedFirstBackupCard").val());
                $(editDefaultSaveForm + " input[type=\"hidden\"]#secondBackupCard").val($("div#EditDefaultsCard div.content select#SelectedSecondBackupCard").val());
                $(editDefaultSaveForm + " input[type=\"hidden\"]#useForAutoRenewal").val($("div#EditDefaultsCard div.content input[type=\"checkbox\"]#IsUserForAutoRenewal").is(":checked"));
                $(editDefaultSaveForm).submit();
            }
            else
                return false;
        });

        // EDIT DEFAULT CARD BUTTON SUBMIT
    }

    // EDIT PRIMARY EMAIL BUTTON SUBMIT
    $('body').on("click", "input[data-ap-editprimaryemailsubmitclick]", function () {
        var emailRegexReturn = true;
        if ($('#NewEmail').val() != "")
            emailRegexReturn = ncEmail("input[data-ap-emailregexonblur]");
        var requiredReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        if (!requiredReturn || !emailRegexReturn) {
            //ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage,true);

            if (!$('#NewEmail').hasClass('loading error') && $('#AccountPassword').hasClass('loading error')) {
                $('#AccountPassword').focus();
            }

            return false;
        }

        else {
            var URL = "/profile/editprimaryemail";
            var username = $("#UserName").val();
            var newemail = $("#NewEmail").val();
            var firstname = $("#FirstName").val();
            var emailkey = $("#EmailKey").val();
            var currentemail = $("#CurrentEmail").val();
            var accountpassword = $("#AccountPassword").val();

            var params = { "userName": username, "newEmail": newemail, "firstName": firstname, "emailKey": emailkey, "currentEmail": currentemail, "accountPassword": accountpassword };

            try {
                $.ajax({
                    url: URL,
                    data: params,
                    type: "POST",
                    async: false,
                    beforeSend: function (xhr) {
                        console.log('Before AJAX call')
                    },
                    success: function (resultSet) {
                        if (resultSet.result != "") {
                            if (resultSet.errorcontrol == "AccountPassword") {
                                $('#AccountPassword').val('')
                                $('#AccountPassword').focus()
                                nc_DisplayErrorAndDescription($('#AccountPassword'), resultSet.errorcontrolmsg);
                            }
                            else {
                                nc_RemoveErrorAndDescription($('#AccountPassword'));

                            }
                            ErrorDisplayControlShow(resultSet.result, true)
                            $.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }
                        else if (resultSet.signOutUrl != "" && resultSet.signOutUrl != undefined) {
                            var URL = "/profile/signout";
                            $.post(URL, function (data) {
                                window.location = data.url;
                            });
                        }
                        else {
                            nc_RemoveErrorAndDescription($('#AccountPassword'));
                            $.magnificPopup.close();
                            location.reload();
                            return true;
                        }


                    }

                });
            }
            catch (e) {
                return false;
            }





        }

    });
    // EDIT PRIMARY EMAIL BUTTON SUBMIT

    //SUPPORT PIN SETTINGS BUTTON SUBMIT
    $('body').on("click", "input[data-ap-supportpinsubmit]", function () {
        var requiredReturn = inputRequired("input[data-ap-requiredonblur]");
        var minLengthReturn = true;
        if (requiredReturn)
            minLengthReturn = CheckMinLength("input[minlength]", 'submit');
        if (!requiredReturn || !minLengthReturn) {
            return false;
        }

        else {
            var URL = "/profile/security/supportpin/save";
            var supportpin = $("#supportpin").val();
            var params = { "SupportPin": supportpin };

            try {
                $.ajax({
                    url: URL,
                    data: params,
                    type: "POST",
                    async: false,
                    beforeSend: function (xhr) {
                        console.log('Before AJAX call')
                    },
                    success: function (resultSet) {
                        if (resultSet.result != "") {
                            ErrorDisplayControlShow(resultSet.result)
                            $.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }

                        else {
                            $.magnificPopup.close();
                            location.reload();
                        }


                    }

                });
            }
            catch (e) {
                return false;
            }
        }

    });
    //SUPPORT PIN SETTINGS BUTTON SUBMIT
    var AddressId = $("#AddressId").val();
    $(".site-msg.addresspage").hide();
    var Paratag = $(".site-msg.addresspage").children("p.error-msg");
    if (Paratag.hasClass("has-msg"))
        $(".site-msg.addresspage").show();

    //TOPUP WITH BUTTON SUBMIT
    $('body').on("click", "input[data-ap-validaterequiredsubmit]", function () {

        var inputRequiredReturn = inputRequired("input[data-ap-requiredonblur]", "submit");

        var greaterthanequalto = true;
        var lessthanequalto = true;

        var topUpWithMaximumValidation = true;
        if (inputRequiredReturn) {
            greaterthanequalto = NumericGreaterThanOrEqualTo("input[data-ap-numericgreaterthanequalto]", "submit");
            if (greaterthanequalto) {
                lessthanequalto = LessThanEqualToZeroValidation("input[data-ap-lessthanqualtozero]", 'submit');
                if (lessthanequalto) {
                    topUpWithMaximumValidation = topUpWithPageAmountMaximumValidation("input[data-ap-topupcheckmaxamount]", 'submit');
                }
            }
        }

        var decimalPointReturn = AllowDecimalPoints("input[data-ap-allowdecimalpoint]", "submit");

        if (inputRequiredReturn && greaterthanequalto && topUpWithMaximumValidation && lessthanequalto) {
            return true;
        }

        else {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);
            return false;
        }


    });
    //TOPUP WITH BUTTON SUBMIT

    //MARKET PLACE EARNINGS
    MarketPlaceAddAttributeDynamically($('#WithdrawTo').val())
    $("#WithdrawTo").change(function () {
        MarketPlaceAddAttributeDynamically($(this).val())

    });

    //MARKET PLACE EARNINGS

    //First Textbox Set Focus
    $('input:text:first').focus();

    //FIRST ERROR TEXTBOX FOCUS WHICH WILL CAPTURED FROM THE SERVER SIDE
    $('.focus:input:first').focus();
    $('.focus:input:first').val('');

    // Trim Empty Space    
    $('body').on("blur", "input[type=text]", function () { return trimSpace(this); });
    //Add new permission to Domain Manager
    $('body').on("click", "input[data-ap-addnewpermission]", function () {
        var IsValidUnameOrEmail = validateDomainRightsAndTransFerAdd($('#AddNewDomainManager'))
        if (!IsValidUnameOrEmail) {
            return false;
        }
        else {


            var URL = "/Domains/DomainRights";
            var domainName = $("#hid_domainname").val();
            var TargetUserNameOrEmail = $("#AddNewDomainManager").val();
            var Params = { "Domainname": domainName, "TargetUserNameOrEmail": TargetUserNameOrEmail };
            var AddnewDomainManagerURL = '/Domains/RightsAndTransfers/Permission/' + domainName + '/' + TargetUserNameOrEmail + '/add';
            //  var AddnewDomainManagerURL = '/Domains/RightsAndTransfers/' + domainName ;
            try {
                $.ajax({
                    url: URL,
                    data: Params,
                    type: "POST",
                    async: false,
                    beforeSend: function () {
                        console.log("Before AJAX Call");
                    },
                    success: function (result) {

                        if (result != "") {

                            ErrorDisplayControlShow(result, true)
                            $.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }
                        else {
                            //$.magnificPopup.close();
                            //$.get(AddnewDomainManagerURL, { "DomainName": domainName}, function (data) { });
                            location.href = '/Domains/RightsAndTransfers/Permission/' + domainName + '/' + TargetUserNameOrEmail + '/add/managepermission';
                            return true;
                        }
                    },

                });
            }
            catch (e) {
                return false;
            }
            return true;
        }

    });

    //Remove permission to Domain Manager
    $('body').on("click", "input[data-ap-Removepermission]", function () {
        var requiredonblurReturn = inputRequired($('#hid_domainname'), "keyup")
        if (!requiredonblurReturn) {
            return false;
        }
        else {

            var domainName = $('#hid_domainname').val();
            var TargetUserName = $('#removeUserName').val();
            var URL = '/Domains/DomainRights/' + TargetUserName + '/' + domainName + '/remove';
            var Params = { "targetusername": TargetUserName };
            var RemovepermissionURL = '/Domains/DomainRights/' + TargetUserName + '/' + domainName + '/remove';
            try {
                $.ajax({
                    url: URL,
                    data: Params,
                    type: "POST",
                    async: false,
                    beforeSend: function () {
                        console.log("Before AJAX Call");
                    },
                    success: function (result) {
                        if (result != "") {
                            ErrorDisplayControlShow(result, true)
                            $('#removeUserName').val('');
                            return false;
                        }
                        else {
                            $.magnificPopup.close();
                            location.href = '/Domains/DomainRights/' + domainName;
                            $('#removeUserName').val('');
                            return true;
                        }
                    },
                });
            }
            catch (e) {
                return false;
            }
            return true;
        }
    });

    $('body').on("click", "input[data-ap-ipstagsubmit]", function () {

        var reason = $('#dropdownReasons').val();
        var errorCount = 0;
        $("#NewIPSTag").val(ReplaceScriptInjectionsWithspace($("#NewIPSTag").val()));
        var requiredonblurReturn = inputRequired($("#NewIPSTag"), "keyup");
        if (!requiredonblurReturn) {
            $("#NewIPSTag").focus();
            errorCount += 1;
        }

        if (reason == 'SelectOption') {
            nc_DisplayErrorAndDescription($('#dropdownReasons'), "Please select a valid reason")
            errorCount += 1;
        }
        if (errorCount > 0) {
            return false;
        }

        else {
            var URL = "/Domains/DomainControlPanel/SetNewIpsTag";
            var domainName = $("#DomainName").val();
            var reasons = $("#dropdownReasons").val();
            var NewIpsTag = ReplaceScriptInjectionsWithspace($("#NewIPSTag").val());
            var description = ReplaceScriptInjectionsWithspace($("#description").val());
            var IsContactInFuture = $("#chkContactInFuture").val();
            var domainControlPanelURL = "/domains/domaincontrolpanel/" + domainName;
            var params = { "domainName": domainName, "ipsTag": NewIpsTag, "reason": reasons, "description": description, "contact": IsContactInFuture };
            try {

                $.ajax({
                    url: URL,
                    data: params,
                    type: "POST",
                    async: false,
                    beforeSend: function (xhr) {
                        console.log('Before AJAX call')
                    },
                    success: function (result) {
                        if (result != "") {
                            ErrorDisplayControlShow(result, true)
                            $.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }
                        else {
                            $.magnificPopup.close();
                            location.reload();
                            return true;
                        }


                    },
                    error: function (xhr, msg) {
                        alert(msg);
                    }
                });
            }
            catch (e) {
                //ErrorDisplayControlShow(ErrorMessageRes.error_Site_InternalError)
                return false;
            }

            return true;
        }
    });

    $('body').on("click", "input[data-ap-domainpushsubmit]", function () {

        var requiredonblurReturn = inputRequired($("#AccountPassword"), "keyup");
        if (!requiredonblurReturn) {
            return false;
        }
        else {
            var URL = "/Domains/DomainControlPanel/PushDomain";
            var domainName = $("#DomainName").val();
            var AccountPassword = $("#AccountPassword").val();
            var NewDomainOwner = $("#NewOwner").text();
            var WhoisOption = $("#Registrant_option").val();
            if (WhoisOption == 0)
                isUseDestContact = "true";
            else
                isUseDestContact = "false";
            var domainControlPanelURL = "/domains/domaincontrolpanel/" + domainName;
            if (AccountPassword != "") {
                var params = { "domainname": domainName, "accountPassword": AccountPassword, "newDomainOwner": NewDomainOwner, "isUseDestContact": isUseDestContact };
                try {
                    $.ajax({
                        url: URL,
                        data: params,
                        type: "POST",
                        async: false,
                        beforeSend: function (xhr) {
                            console.log('Before AJAX call')
                        },
                        success: function (result) {
                            if (result != "") {
                                ErrorDisplayControlShow(result, true)
                                $.magnificPopup.st.el.data('mfpvalid', false);
                                return false;
                            }
                            else {

                                $.magnificPopup.close();
                                window.location.href = "/domains/domaincontrolpanel/" + domainName + "/rights";
                                //location.reload();
                                return true;
                            }


                        },
                        error: function (xhr, msg) {

                        }
                    });
                }
                catch (e) {
                    //alert(e);
                    //ErrorDisplayControlShow(e.message)
                    return false;
                }

                return false;
            }
            else {

            }
        }
    });

    $('body').on("change", '#DDL_Reasons,#dropdownReasons', function () {
        if ($(this).val() != 'SelectOption') {
            nc_RemoveErrorAndDescription($('#DDL_Reasons'))
            nc_RemoveErrorAndDescription($('#dropdownReasons'))
        }
        else {
            nc_DisplayErrorAndDescription($('#DDL_Reasons'), "Please select a valid reason");
            nc_DisplayErrorAndDescription($('#dropdownReasons'), "Please select a valid reason");
        }
    });

    $('body').on("click", "input[data-ap-getauthcode]", function () {
        var reason = $('#DDL_Reasons').val();
        if (reason == 'SelectOption') {
            nc_DisplayErrorAndDescription($('#DDL_Reasons'), "Please select a valid reason")
            return false;
        }
        var url = "/Domains/DomainControlPanel/GetAuthCode";
        var DomaiNname = $("#DomainName").val();
        var description = ReplaceScriptInjectionsWithspace($("#auth_description").val());
        var Reason = $("#DDL_Reasons option:selected").val();
        var contact = $("#Auth_chkContactInFuture").is(":checked");
        var domainControlPanelURL = "/domains/domaincontrolpanel/" + DomaiNname;
        //$.post(url, { domainName: DomaiNname, reason: Reason, description: description, contact: contact }, function (data) { });
        var params = { "domainName": DomaiNname, "reason": Reason, "description": description, "contact": contact };
        try {
            $.ajax({
                url: url,
                data: params,
                type: "POST",
                async: false,
                beforeSend: function (xhr) {
                    console.log('Before AJAX call')
                },
                success: function (result) {
                    if (result != "") {
                        if (result.returnbool = true) {
                            $.magnificPopup.close();
                            //$.get(domainControlPanelURL, { "DomainName": DomaiNname }, function (data) { });
                            location.reload(true);
                            return true;
                        }
                        else {
                            ErrorDisplayControlShow(result.result, true)
                            $.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }
                    }

                },
                error: function (xhr, msg) {
                    //alert(msg);
                }
            });
        }
        catch (e) {
            return false;
        }
    });

    //$('#CountryCode').change(function () {
    //    var errMsg = $(this).attr('data-ap-required-phone');
    //    if (errMsg != undefined && $(this).val() == '') {
    //        nc_DisplayErrorAndDescription($(this), errMsg);
    //    }
    //    else {
    //        nc_RemoveErrorAndDescription($(this));
    //    }

    //});

    //DOMAIN LIST CONTROL PANEL VALIDATIONS
    $('body').on("keyup", "#AddNewDomainManager", function () {
        validateDomainRightsAndTransFerAdd($(this));
    });

    $('body').on("click", "button[data-ap-domaincpanelpermissionadd]", function () {
        var returnVal = validateDomainRightsAndTransFerAdd($('#domainPermissionAdd'));

        if (returnVal) {
            var domainName = $("#DomainName").val();
            var NewDomainOwner = $("#domainPermissionAdd").val();
            var vURL = "/Domains/DomainControlPanel/ValidateCurrentDestinationUser/shareaccess";

            var vparams = { "destinationOwnerName": NewDomainOwner, "domainName": domainName, "rightsandtransferaction": "shareaccess" };
            try {
                $.ajax({
                    url: vURL,
                    data: vparams,
                    type: "POST",
                    async: false,
                    beforeSend: function (xhr) {
                        console.log('Before AJAX call')
                    },
                    success: function (result) {
                        if (result != "" && result == "True") {
                            popup.st.el.data('mfpvalid', false);
                            location.reload();
                            return false;
                        }
                        else {
                            returnVal = true;
                        }
                    },
                    error: function (xhr, msg) {
                        returnVal = false;

                    }
                });
            }
            catch (e) {
                //alert(e);
                //ErrorDisplayControlShow(e.message)
                location.reload();
                returnVal = false;
            }

        }

        return returnVal;

    });


    $('body').on("click", "input[data-ap-rightsandtransferaddoreditsubmitclick]", function () {

        var inputRequiredReturn = inputRequired("input[data-ap-requiredonblur]", "submit");
        var listOfCheckBoxes = [];
        $("input[type=checkbox]").each(function () {
            if ($(this).is(':visible'))
                listOfCheckBoxes.push($(this));
        });

        var atlstOneChkBox = true;
        if (listOfCheckBoxes.length > 0) {
            atlstOneChkBox = AtLeastOneCheckboxAttribute(listOfCheckBoxes, $('#alertMsgPlaceHolder'))
        }
        if (inputRequiredReturn && atlstOneChkBox) {
            return true;
        }

        else {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage);
            return false;
        }


    });

    if ($("form.form.remove-selected-cards").length > 0) {
        $('body').on("click", "[data-update-selected-card-post]", function () {
            $("form.form.remove-selected-cards input[type='hidden']#ReplaceDefaultCardId").val($("#ReplaceDefaultCardId.existing-card").val());
            if ($(this).attr('data-update-selected-card-post') != null && $(this).attr('data-update-selected-card-post') != "")
                $($(this).attr('data-update-selected-card-post')).submit();
        });
    }

    $('#permissionaddcheckboxerrordiv').hide()
    $('body').on("change", '#managerspermission', function () {

        if ($(this).val() == DomainInfoRes.static_DropDown_Permission_Some) {
            nc_RemoveErrorAndDescription('#alertMsgPlaceHolder')
            $('#permissionaddcheckboxerrordiv').show()
        }
        else {

            $('#permissionaddcheckboxerrordiv').hide()
        }
    });

    var formpermissionedit = $(".form").attr("data-ap-permissionedit");
    if (typeof formpermissionedit !== typeof undefined && formpermissionedit !== false) {
        var listOfCheckBoxes = [];
        var atlstOneChkBox = true;
        var $alerMsgPlaceHolder = $('#alertMsgPlaceHolder');
        $("input[type=checkbox]").each(function () {
            listOfCheckBoxes.push($(this));

            $('body').on("click", $(this), function () {
                atlstOneChkBox = AtLeastOneCheckboxAttribute(listOfCheckBoxes, $('#alertMsgPlaceHolder'))
                var ErrMsg = $alerMsgPlaceHolder.attr('error-message');
                if (atlstOneChkBox)
                    nc_RemoveErrorAndDescription($alerMsgPlaceHolder)
                else
                    nc_DisplayErrorAndDescription($alerMsgPlaceHolder, ErrMsg)
            });

        });
    }
    //DOMAIN LIST CONTROL PANEL VALIDATIONS

    Array.prototype.sortOn = function (key) {
        this.sort(function (a, b) {
            if (a[key] < b[key]) {
                return -1;
            } else if (a[key] > b[key]) {
                return 1;
            }
            return 0;
        });
    }

    //For print the page
    $('body').on("click", ".nc_printpagebutton", function () {
        window.print();
    });
    if ($('input[type="hidden"]#PrintOnPageLoad').val() == 'true') {
        $(".nc_printpagebutton").trigger('click');
    }
    if ($(".site-msg").length > 0)
        $('html, body').animate({ scrollTop: 0 }, 800);

    if ($('#VerificationType').find(":selected").val() == "Text") {
        $('#divAddExetension').hide();
    }
    if ($("form.credit-card-topup").length > 0 || $("form.credit-card").length > 0) {
        $('body').on("keydown", "input[data-ap-submit-cvcnumber]", function (event) {
            allownumericwithSpaceForCardSecurityCode(event, this);
        });
        $('body').on("keyup", "input[data-ap-submit-cvcnumber]", function () { PreventCreditcardSpecialCharacters("input[data-ap-submit-cvcnumber]") });

        $('body').on('change', 'select#NewDefaultCardId', selectNewDefaultCardCheck);
        $('body').on('change', 'select#NewFirstBackupCardId', selectNewFirstBackupCardCheck);
        $('body').on('change', 'select#CardUseAsOption', selectCardUseAsOptionCardCheck);
        //$('#CardUseAsOption').trigger('change');
        selectCardUseAsOptionCardCheck();
    }
    $('.ddldcvmethod').change(function () {
        if ($('.ddldcvmethod').val() != 'Select Option') {
            nc_RemoveErrorAndDescription($('.ddldcvmethod'));
        }
    });
    $('.ddlapproveremail').change(function () {
        if ($('.ddlapproveremail').val() != 'Select Contact') {
            nc_RemoveErrorAndDescription($('.ddlapproveremail'));
        }
    });
    $('body').on("click", "input[data-ap-sslchangedcvsdc]", function () {


        var isValid = true;
        var certificateId = $("#CertificateId").val();
        var URL = "/domains/ssl/ChangeDCVMethodForSDC/" + certificateId;

        var domainName = $("#DomainName").val();
        var dcvmethod = $("#dcvmethod").val();
        var approverEmail = $("#ApproverEmail").val();
        var errMsg = $("#dcvmethod").attr('data-ap-required-method');
        if (errMsg != undefined && $("#dcvmethod").val() == '') {
            nc_DisplayErrorAndDescription($("#dcvmethod"), errMsg);
            isValid = false;
        }
        else {
            nc_RemoveErrorAndDescription($("#dcvmethod"));
        }

        $(".ddldcvmethod").removeClass("loading");
        $(".ddldcvmethod").removeClass("error");



        if (dcvmethod == 'Email' && approverEmail == '') {
            var erMsg1 = $("#ApproverEmail").attr('data-ap-required-email');
            if (erMsg1 != undefined) {
                nc_DisplayErrorAndDescription($("#ApproverEmail"), erMsg1);
                isValid = false;
            }
        }
        else {
            nc_RemoveErrorAndDescription($("#ApproverEmail"));
        }
        $(".ddlapproveremail").removeClass("loading");
        $(".ddlapproveremail").removeClass("error");

        if (isValid) {
            var params = { "CertificateId": certificateId, "domainName": domainName, "dcvmethod": dcvmethod, "ApproverEmail": approverEmail };
            try {
                $.ajax({
                    url: URL,
                    data: params,
                    type: "POST",
                    async: false,
                    beforeSend: function (xhr) {
                        console.log('Before AJAX call')
                    },
                    success: function (resultSet) {
                        if (resultSet.result != "") {
                            ErrorDisplayControlShow(resultSet.errorcontrolmsg);
                            //$.magnificPopup.st.el.data('mfpvalid', false);
                            return false;
                        }

                        else {
                            $.magnificPopup.close();
                            location.reload();
                        }
                    },
                    error: function (msg) {
                    }
                });
            }
            catch (e) {
                return false;
            }
        }
        else {
            ErrorDisplayControlShow(ErrorMessageRes.error_Site_SummaryMessage, true);
        }




    });

});



//FUNCTIONS 

//Blur events
if ($("form.credit-card").length > 0) {
    $(function () {
        //Topup with
        $('body').on("blur", "input[data-ap-topupcheckmaxamount]", function (e) {
            AllowDecimalPoints("input[data-ap-topupcheckmaxamount]", "blur")
        });

        //Credit card topup
        if ($('body form').hasClass('credit-card')) {

            $('body').on("blur", '#ccexp_year', function () {
                var year = $('#ccexp_year');
                var month = $('#ccexp_month');
                //if (year.val() != '')
                ValidateExpiryDate(month, year, 'year');
            });

            $('body').on("blur", '#ccexp_month', function () {
                var year = $('#ccexp_year');
                var month = $('#ccexp_month');
                //if (month.val != '')
                ValidateExpiryDate(month, year, 'month');
            });

            $('body').on("blur", 'input[data-ap-cardnumberfield]#ccc_number', function () {
                if ($(this).is(" :enabled") && $(this).val() != '') {
                    if (Stripe.card.validateCardNumber($(this).val()) && ValidateCCNumber(this)) {
                        if (ncCheckCardPaymentType($(this), 'blur')) {
                            SetCheckDefaultFriendlyName('set');
                        }
                    }
                    else {
                        var errMsg = $(this).attr('error-message');
                        if (errMsg != undefined) {
                            nc_DisplayErrorAndDescription($(this), errMsg);
                        }
                    }
                }
            });
        }
    });
}

function SetCheckDefaultFriendlyName(eventType) {
    if (eventType == 'set') {
        var last4 = $("form.credit-card input[type=\"hidden\"]#cc_number").val().substr($("form.credit-card input[type=\"hidden\"]#cc_number").val().length - 4, 4);
        var ccType = $("form.credit-card input[type=\"hidden\"]#cc_type").val();
        if ($("form.credit-card input[type=\"hidden\"]#default_ccFriendlyName").val() == $("form.credit-card input[type=\"text\"]#friendly_name").val()
            || $("form.credit-card input[type=\"text\"]#friendly_name").val() == "") {
            $("form.credit-card input[type=\"text\"]#friendly_name").val(ccType.toUpperCase() + "-" + last4);
            nc_RemoveErrorAndDescription($("form.credit-card input[type=\"text\"]#friendly_name"));
        }
        $("form.credit-card input[type=\"hidden\"]#default_ccFriendlyName").val(ccType.toUpperCase() + "-" + last4);
    }
    else {
        var last4 = $("form.credit-card input[type=\"hidden\"]#cc_number").val().substr($("form.credit-card input[type=\"hidden\"]#cc_number").val().length - 4, 4);
        var ccType = $("form.credit-card input[type=\"hidden\"]#cc_type").val();
        return $("form.credit-card input[type=\"text\"]#friendly_name").val() == ccType.toUpperCase() + "-" + last4;
    }
}

function selectNewDefaultCardCheck() {
    var newDefaultCardChk = true;
    var errMsg = $('#NewDefaultCardId').attr('data-ap-new-default-card-required');
    if (errMsg != undefined && $('#NewDefaultCardId').val() == '0') {
        nc_DisplayErrorAndDescription($('#NewDefaultCardId'), errMsg);
        newDefaultCardChk = false;
    }
    else {
        nc_RemoveErrorAndDescription($('#NewDefaultCardId'));
    }
}

function selectNewFirstBackupCardCheck() {
    var newFirstBackupCardChk = true;
    var errMsg = $('#NewFirstBackupCardId').attr('data-ap-new-firstbackup-card-required');
    if (errMsg != undefined && $('#NewFirstBackupCardId').val() == '0') {
        nc_DisplayErrorAndDescription($('#NewFirstBackupCardId'), errMsg);
        newFirstBackupCardChk = false;
    }
    else {
        nc_RemoveErrorAndDescription($('#NewFirstBackupCardId'));
    }
}

function selectCardUseAsOptionCardCheck() {
    var userAsOptionChk = true;
    if ($("select#NewDefaultCardId").length > 0) {
        if ($('select#CardUseAsOption').val() == '0') {
            if ($("select#NewDefaultCardId") != null) {
                $("select#NewDefaultCardId").attr("disabled", true);
                $("div#newUseAsCardShowHide").hide();
            }
            nc_RemoveErrorAndDescription($('select#NewDefaultCardId'));
        }
        else {
            $("select#NewDefaultCardId").attr("disabled", false);
            $("div#newUseAsCardShowHide").show();
        }

    }
    else if ($("select#NewFirstBackupCardId").length > 0) {
        if ($('select#CardUseAsOption').val() == '3') {
            if ($("select#NewFirstBackupCardId") != null) {
                $("select#NewFirstBackupCardId").attr("disabled", false);
                $("div#newUseAsCardShowHide").show();
            }
            nc_RemoveErrorAndDescription($('select#NewFirstBackupCardId'));
        }
        else {
            $("select#NewFirstBackupCardId").attr("disabled", true);
            nc_RemoveErrorAndDescription($('select#NewFirstBackupCardId'));
            $("div#newUseAsCardShowHide").hide();
        }
        if ($('select#CardUseAsOption').val() == '2') {
            nc_DisplayAlertAndDescription($('#CardUseAsOption'), BillingInfoRes.alert_ContextMessage_FirstBackupEdit_ToDefault);
        }
        else {
            nc_RemoveClassAndDescription($('select#CardUseAsOption'));
        }
    }
    else {
        if ($('#CardPaymentAutoRenewType').val() == 'SECONDBACKUP') {
            if ($('select#CardUseAsOption').val() == '2') {
                nc_DisplayAlertAndDescription($('select#CardUseAsOption'), BillingInfoRes.alert_ContextMessage_SecondBackupEdit_ToDefault);
            }
            else if ($('select#CardUseAsOption').val() == '3') {
                nc_DisplayAlertAndDescription($('select#CardUseAsOption'), BillingInfoRes.alert_ContextMessage_SecondBackupEdit_ToFirstBackup);
            }
            else {
                nc_RemoveClassAndDescription($('select#CardUseAsOption'));
            }
        }
    }
}

function ExpiryYearValidation(expYear) {
    if (expYear.val().length > 0 && expYear.val().length < 4) {
        expYear.val(parseInt(expYear.val()) + 2000);
    }
}
function ValidateExpiryDate(monthField, yearField, field) {
    //expiry date validation
    ExpiryYearValidation(yearField);
    var year = yearField.val();
    var month = monthField.val();
    var curDate = new Date();
    var isMonthSuccess = true, isYearSuccess = true;
    var canRemoveMonth = true, canRemoveYear = true;
    if (year == '' || (year <= curDate.getFullYear()) || year > curDate.getFullYear() + 50) {
        canRemoveYear = false;
        isYearSuccess = false;
    }

    if (month == '' || ((year == curDate.getFullYear()) && (month < (curDate.getMonth() + 1))) || month <= 0 || month > 12) {
        canRemoveMonth = false;
        isMonthSuccess = false;
    }

    // curDate.getMonth() +1    - is added because of the month starts from 0 digit.. 
    if ((field == 'year' && month == '') || field == '') {
        var bMonthValid = true;
        var bYearValid = true;
        if (year < curDate.getFullYear()) {
            if (field == 'year' || field == '') {
                var ErrMsgYear = yearField.attr('error-message');
                var ErrMsg = yearField.attr('invalid-monthNyear');
                isYearSuccess = false;
                nc_DisplayErrorAndDescription(yearField, ErrMsgYear);
                if (month == '')
                    bMonthValid = false;
                if (!isYearSuccess && !bMonthValid) {
                    nc_DisplayErrorAndDescription(yearField, ErrMsg);
                }
                return false;
            }

        }
            //Current Year + 50 Check the Expiration Year is Valid(Ex:- 2015+50=2065)
        else if (year > curDate.getFullYear() + 50) {
            if (field == 'year' || field == '') {
                var ErrMsgYear = yearField.attr('invalid-year-fifty-plus');
                var ErrMsg = yearField.attr('invalid-monthNyear');
                isYearSuccess = false;
                nc_DisplayErrorAndDescription(yearField, ErrMsgYear);
                if (month == '')
                    bMonthValid = false;
                if (!isYearSuccess && !bMonthValid) {
                    nc_DisplayErrorAndDescription(yearField, ErrMsg);
                }
                return false;
            }
        }
        else if (month == '') {
            var ErrMsgMonth = monthField.attr('error-message');
            nc_DisplayErrorAndDescription(monthField, ErrMsgMonth);
        }
        else {
            if (canRemoveMonth) {
                nc_RemoveErrorAndDescription(yearField);
                return true;
            }
            else {
                var ErrMsgMonth = monthField.attr('error-message');
                nc_DisplayErrorAndDescription(monthField, ErrMsgMonth);
                return false;
            }
        }
    }
    else if ((field == 'month' && year == '') || field == '') {
        if (month <= 0 || month > 12) {
            var ErrMsgMonth = monthField.attr('error-message');
            nc_DisplayErrorAndDescription(monthField, ErrMsgMonth);
            isMonthSuccess = false;
            return false;
        }
        else {
            if (canRemoveMonth) {
                nc_RemoveErrorAndDescription(monthField);
                return true;
            }
        }
    }
    else {
        var isSuccess = true;
        var bMonthValid = true;
        var bYearValid = true;
        if ((year < curDate.getFullYear()) || ((year == curDate.getFullYear()) && (month < (curDate.getMonth() + 1))) || month <= 0 || month > 12 || year > curDate.getFullYear() + 50) {
            if ((year != '' && ((year == curDate.getFullYear()) && (month < (curDate.getMonth() + 1)))) || month <= 0 || month > 12) {
                var ErrMsgMonth = monthField.attr('error-message');
                var ErrMsg = monthField.attr('invalid-monthNyear');
                isMonthSuccess = false;
                nc_DisplayErrorAndDescription(monthField, ErrMsgMonth);
                isMonthSuccess = false;
                isSuccess = false;
                bMonthValid = false;
            }
            if ((field == 'year' || field == '') && (year < curDate.getFullYear())) {
                var ErrMsgYear = yearField.attr('error-message');
                var ErrMsg = yearField.attr('invalid-monthNyear');
                isYearSuccess = false;
                nc_DisplayErrorAndDescription(yearField, ErrMsgYear);
                isSuccess = false;
                bYearValid = false;
            }
            else if (year > curDate.getFullYear() + 50) {
                var ErrMsgYear;
                if (isSuccess) ErrMsgYear = yearField.attr('invalid-year-fifty-plus');
                else ErrMsgYear = yearField.attr('error-message');
                isYearSuccess = false;
                nc_DisplayErrorAndDescription(yearField, ErrMsgYear);
                isSuccess = false;
                bYearValid = false;
            }
            else if (year < curDate.getFullYear()) {
                var ErrMsgYear = yearField.attr('error-message');
                nc_DisplayErrorAndDescription(yearField, ErrMsgYear);
                bYearValid = false;
            }
            if (!bMonthValid && !bYearValid) {
                var ErrMsg = yearField.attr('invalid-monthNyear');
                nc_DisplayErrorAndDescription(yearField, ErrMsg);
            }
            return false;
        }
        else {
            if (canRemoveYear && canRemoveMonth) {
                nc_RemoveErrorAndDescription(monthField);
                nc_RemoveErrorAndDescription(yearField);
                return true;
            }
            else
                return false;
        }
    }
}
function validateDomainRightsAndTransFerAdd(inputObj) {

    $(inputObj).attr("error-message", "A valid username or email address is required")
    var retInputRequired = inputRequired($(inputObj), 'keyup');
    if (retInputRequired) {
        var indexofAt = $(inputObj).val().indexOf('@')
        if (indexofAt >= 0) {
            $(inputObj).attr("error-message", "A valid email address is required")
            return ncEmail($(inputObj), 'keyup')

        }
        else {
            var fieldName = "username";
            return AlphaNumericValidation($(inputObj), fieldName)

        }
    }
    else {
        return false;
    }
}

(function ($) {

    var keyString = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

    var uTF8Encode = function (string) {
        string = string.replace(/\x0d\x0a/g, "\x0a");
        var output = "";
        for (var n = 0; n < string.length; n++) {
            var c = string.charCodeAt(n);
            if (c < 128) {
                output += String.fromCharCode(c);
            } else if ((c > 127) && (c < 2048)) {
                output += String.fromCharCode((c >> 6) | 192);
                output += String.fromCharCode((c & 63) | 128);
            } else {
                output += String.fromCharCode((c >> 12) | 224);
                output += String.fromCharCode(((c >> 6) & 63) | 128);
                output += String.fromCharCode((c & 63) | 128);
            }
        }
        return output;
    };

    var uTF8Decode = function (input) {
        var string = "";
        var i = 0;
        var c = c1 = c2 = 0;
        while (i < input.length) {
            c = input.charCodeAt(i);
            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            } else if ((c > 191) && (c < 224)) {
                c2 = input.charCodeAt(i + 1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            } else {
                c2 = input.charCodeAt(i + 1);
                c3 = input.charCodeAt(i + 2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }
        }
        return string;
    }

    $.extend({
        base64Encode: function (input) {
            var output = "";
            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
            var i = 0;
            input = uTF8Encode(input);
            while (i < input.length) {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);
                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;
                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }
                output = output + keyString.charAt(enc1) + keyString.charAt(enc2) + keyString.charAt(enc3) + keyString.charAt(enc4);
            }
            return output;
        },
        base64Decode: function (input) {
            var output = "";
            var chr1, chr2, chr3;
            var enc1, enc2, enc3, enc4;
            var i = 0;
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (i < input.length) {
                enc1 = keyString.indexOf(input.charAt(i++));
                enc2 = keyString.indexOf(input.charAt(i++));
                enc3 = keyString.indexOf(input.charAt(i++));
                enc4 = keyString.indexOf(input.charAt(i++));
                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;
                output = output + String.fromCharCode(chr1);
                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }
            }
            output = uTF8Decode(output);
            return output;
        }
    });
})(jQuery);

String.prototype.repeat = function (num) {
    return new Array(num + 1).join(this);
}

function encodePasswordValuesToBase64(obj1, obj2) {
    var val = obj1.val();
    var fieldName = obj1.attr('name');
    var isSpecialCharacterPresent = /<|&#|>/.test(val);
    if (isSpecialCharacterPresent) {
        obj1.val($.base64Encode(val));
        obj2.val($.base64Encode(val));
    }
}


function BlurFunctions(e, obj) {
    var key = e.which;
    if (key != 9 && key != 17 && key != 16 && key != 37 && key != 39 && key != 38 && key != 40 && key != 36 && key != 35 && key != 33 && key != 34 && key != 45 && (key < 111 || key > 126)) {

        console.log('Blur event triggers')
        var requiredBlurAttr = $(obj).attr('data-ap-requiredonblur');
        var checkaddnameexistonblurAttr = $(obj).attr('data-ap-checkaddnameexistonblur')
        var namefieldAttr = $(obj).attr('data-ap-namefield')
        var nameOnCardfieldAttr = $(obj).attr('data-ap-nameoncardfield')
        var cardNamefieldAttr = $(obj).attr('data-ap-cardnamefield')
        var getCardTypeAttr = $(obj).attr('data-ap-cardnumberfield')
        var addressfieldAttr = $(obj).attr('data-ap-addressfield')
        var orgjobtitle = $(obj).attr('data-ap-orgjobtitle')
        var cityfield = $(obj).attr('data-ap-cityfield')
        var statefield = $(obj).attr('data-ap-statefield')
        var emailregexonblurAttr = $(obj).attr('data-ap-emailregexonblur')
        var lessthanqualtozeroAttr = $(obj).attr('data-ap-lessthanqualtozero')
        var numericgreaterthanequaltoAttr = $(obj).attr('data-ap-numericgreaterthanequalto')
        var generatecontactnameAttr = $(obj).attr('data-ap-generatecontactname')
        var checkverificationcodeonblurAttr = $(obj).attr('data-ap-checkverificationcodeonblur')
        var minlengthAttr = $(obj).attr('minlength')
        var topupcheckmaxamountAttr = $(obj).attr('data-ap-topupcheckmaxamount')

        if (requiredBlurAttr != undefined) {
            inputRequired(obj, 'keyup');
        }
        if (checkaddnameexistonblurAttr != undefined) {
            CheckAddressname(obj);
        }
        if (namefieldAttr != undefined) {
            ncNameField(obj, 'keyup')
        }
        if (nameOnCardfieldAttr != undefined) {
            nameOnCardfield(obj, 'keyup')
        }
        if (cardNamefieldAttr != undefined) {
            cardNamefield(obj, 'keyup')
        }
        if (getCardTypeAttr != undefined) {
            GetCardType(obj, 'keyup')
        }
        if (addressfieldAttr != undefined) {
            ncAddressField(obj, 'keyup')
        }
        if (orgjobtitle != undefined) {
            ncOrgJobTitle(obj, 'keyup')
        }
        if (cityfield != undefined) {
            ncCity(obj, 'keyup')
        }

        if (emailregexonblurAttr != undefined) {
            ncEmail(obj)
        }

        if (lessthanqualtozeroAttr != undefined) {
            LessThanEqualToZeroValidation(obj, 'keyup');
        }

        if (numericgreaterthanequaltoAttr != undefined) {
            NumericGreaterThanOrEqualTo(obj, 'keyup');
        }


        if (generatecontactnameAttr != undefined) {
            contactname_generator();
        }


        if (checkverificationcodeonblurAttr != undefined) {
            return nc_TwofaVerification_Validation(obj, 'keyup');
        }

        if (minlengthAttr != undefined && !$(obj).hasClass('loading error')) {
            CheckMinLength(obj, 'keyup');
        }

        if (topupcheckmaxamountAttr != undefined) {
            topUpWithPageAmountMaximumValidation(obj, 'keyup');
        }



    }

}
function inputRequired(obj, eventtype) {
    var blReturn = true;
    var errCount = 0;


    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var $input = $(value);
            if (($input).is(':visible')) {
                var ValueEntered = $input.val();
                var ErrMsg = $input.attr('error-message');
                var txtboxType = $input.attr('textbox-type');
                if (txtboxType == "state") {
                    blReturn = ncstateprovincevalidation($input);
                    if (!blReturn)
                        errCount = errCount + 1;

                }
                else if (txtboxType == "postal") {


                    blReturn = ncpostalcodevalidation($input, eventtype);
                    if (!blReturn)
                        errCount = errCount + 1;


                }
                else if (ValueEntered == undefined || ValueEntered.trim() == "") {
                    nc_DisplayErrorAndDescription($input, ErrMsg)
                    blReturn = false;
                    errCount = errCount + 1;
                }
            }
        });
        if (blReturn) {
            nc_RemoveErrorAndDescription($input);
            blReturn = true;
        }
    }
    else {

        var $input = $(obj);
        if (($input).is(':visible')) {
            var ValueEntered = $input.val();
            var ErrMsg = $input.attr('error-message');
            var txtboxType = $input.attr('textbox-type');

            if (txtboxType == "state") {
                blReturn = ncstateprovincevalidation($input);
                if (!blReturn)
                    errCount = errCount + 1;
            }
            else if (txtboxType == "postal") {
                blReturn = ncpostalcodevalidation($input, eventtype);
                if (!blReturn)
                    errCount = errCount + 1;
            }
            else if (ValueEntered == undefined || ValueEntered.trim() == "") {
                nc_DisplayErrorAndDescription($input, ErrMsg)
                blReturn = false;
                errCount = errCount + 1;
            }
        }
        if (blReturn) {
            //  if (event.keyCode != 36 && event.keyCode != 37 && event.keyCode != 46 && event.keyCode != 16)
            //  {
            nc_RemoveErrorAndDescription($input);
            blReturn = true;
        }

    }

    // }


    if (errCount == 0)
        return true;
        //else if (errCount == 1 && eventtype == 'submit')// this is happening when clicking the submit button , the blur event of the input box triggered and error count changes to 1 even no error happened.
        //    return true;
    else
        return false;

};
function CheckAddressname(obj, eventtype) {
    var blReturn = true;
    if (eventtype == 'submit') {
        var $input = $(obj);
        if ($input.val() != undefined) {
            var inputAddressName = $input.val().trim();


            var userName = $("#Address_username").val();
            var AddressId = $("#AddressId").val();
            var params = { "inputAddressName": inputAddressName, "userName": userName, "AddressId": AddressId };

            $.ajax({
                url: '/AjaxHandlers/AjaxCheckAddressName.ashx',
                data: params,
                type: "GET",
                async: false,
                beforeSend: function (xhr) {
                    nc_RemoveErrorAndDescription($input);
                    ProgressLoadingIcon($input, true);
                    $input.parent("div").addClass("loading");
                },
                success: function (result) {
                    var response = JSON.parse(result);
                    nc_RemoveErrorAndDescription($input);
                    if (response.responseType == "ERROR" || response.responseType == "UNAVAILABLE") {
                        ProgressLoadingIcon($input, false);
                        //$input.parent("div").find("p.cont-msg").removeClass("success").text(Description);
                        nc_DisplayErrorAndDescription($input, response.responseMessage);
                        blReturn = false;
                    }
                    else if (response.responseType == "AVAILABLE") {
                        ProgressLoadingIcon($input, false);
                        //nc_DisplaySuccessAndDescription($input, response.responseMessage);

                    }


                },
                error: function (xhr, msg) {
                    //alert(msg);
                }
            });
        }
    }
    else {
        clearTimeout(timer);
        timer = setTimeout(function () {



            var $input = $(obj);
            if ($input.val() != undefined) {
                var inputAddressName = $input.val().trim();


                var userName = $("#Address_username").val();
                var AddressId = $("#AddressId").val();
                var params = { "inputAddressName": inputAddressName, "userName": userName, "AddressId": AddressId };

                $.ajax({
                    url: '/AjaxHandlers/AjaxCheckAddressName.ashx',
                    data: params,
                    type: "GET",
                    async: false,
                    beforeSend: function (xhr) {
                        nc_RemoveErrorAndDescription($input);
                        ProgressLoadingIcon($input, true);
                        $input.parent("div").addClass("loading");
                    },
                    success: function (result) {
                        var response = JSON.parse(result);
                        nc_RemoveErrorAndDescription($input);
                        if (response.responseType == "ERROR" || response.responseType == "UNAVAILABLE") {
                            ProgressLoadingIcon($input, false);
                            //$input.parent("div").find("p.cont-msg").removeClass("success").text(Description);
                            nc_DisplayErrorAndDescription($input, response.responseMessage);
                            blReturn = false;
                        }
                        else if (response.responseType == "AVAILABLE") {
                            ProgressLoadingIcon($input, false);
                            //nc_DisplaySuccessAndDescription($input, response.responseMessage);

                        }


                    },
                    error: function (xhr, msg) {
                        //alert(msg);
                    }
                });
            }




        }, 1000);


    }
    return blReturn;
}

function ProgressLoadingIcon(inputObj, isShow) {
    if (isShow == true)
        $(inputObj).parent("div").addClass("loading");
    else
        $(inputObj).parent("div").removeClass("loading");
}
function ncstateprovincevalidation(obj) {
    var $input = $(obj);
    var ValueEntered = $input.val();
    var ErrMsg = $input.attr('error-message');
    var field = "state/province";
    var requiredstate = true;
    var countryobj = $("select#addressCountry", ".form");
    var countrydropname = countryobj.attr('name');
    //This Condition only for Creditcard TopUp/Manage Add/Edit Control Purpose
    //Creditcard Page State is required
    if (countrydropname != null && countrydropname != undefined && countrydropname == "billing_country") {
        if (ValueEntered == undefined || ValueEntered.trim() == "") {
            nc_DisplayErrorAndDescription($input, AddressClientRes.error_Site_StateProvinceErrorMessage)
            return false;
        }
        requiredstate = false;
    }
    else if (countryobj.val().toLowerCase() == "us" || countryobj.val().toLowerCase() == "ca") {
        $("#stateOptional").hide();
        if (ValueEntered == undefined || ValueEntered.trim() == "") {
            nc_DisplayErrorAndDescription($input, AddressClientRes.error_Site_StateProvinceErrorMessage)
            return false;
        }
        requiredstate = false;
    }
    else {
        $("#stateOptional").show();
        requiredstate = false;
    }
    if (countryobj.val() != "" && requiredstate == false) {
        return nc_countrycodevalidation(countryobj, $input);
    }

}

function ncpostalcodevalidation(obj, eventtype) {



    var nc_postalregx = '';
    var errormessage = '';
    var $input = $(obj);
    var EventType = $input.attr('event-name');
    var countryobj = $("select#addressCountry", ".form");
    var chkVal = countryobj.val();
    var inputPosition;
    if (eventtype != 'submit')
        inputPosition = DoGetCaretPosition($input[0]);
    var postcodeval = $input.val().replace(/\s+/g, ' ');
    var isRequiredValidation = false;
    var countrydropname = countryobj.attr('name');

    nc_RemoveErrorAndDescription($input);
    //This Condition only for Creditcard TopUp and Manage Add/Edit Control Purpose
    //Creditcard Page Postal Code is required
    if (countrydropname != null && countrydropname != undefined && countrydropname == "billing_country") {
        isRequiredValidation = true;
    }
    if (countryobj.val().toLowerCase() == "us") {
        nc_postalregx = nc_Val_US_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalUSErrorMessage;
        isRequiredValidation = true;
    }
    else if (countryobj.val().toLowerCase() == "ca") {
        nc_postalregx = nc_Val_CA_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalCAErrorMessage;
        postcodeval = postcodeval.toUpperCase();
        $input.val(postcodeval);
        isRequiredValidation = true;
    }
    else if (countryobj.val().toLowerCase() == "gb") {
        nc_postalregx = nc_Val_GB_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalGBErrorMessage;
        postcodeval = postcodeval.toUpperCase();
        $input.val(postcodeval);
        isRequiredValidation = true;
    }
        //Netherlands Country only allowed Space
    else if (countryobj.val().toLowerCase() == "nl") {
        nc_postalregx = nc_Val_NL_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalNLErrorMessage;
        postcodeval = postcodeval.toUpperCase();
        $input.val(postcodeval);
        isRequiredValidation = true;
    }
        //Brazil Country only allowed Space
    else if (countryobj.val().toLowerCase() == "br") {
        nc_postalregx = nc_Val_BR_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalBRErrorMessage;
        postcodeval = postcodeval.toUpperCase();
        $input.val(postcodeval);
        isRequiredValidation = true;
    }
        //Japan Country only allowed Space
    else if (countryobj.val().toLowerCase() == "jp") {
        nc_postalregx = nc_Val_JP_PostalCodeRegex;
        errormessage = AddressClientRes.error_Site_PostalJPErrorMessage;
        postcodeval = postcodeval.toUpperCase();
        $input.val(postcodeval);
        isRequiredValidation = true;
    }
    if (eventtype != 'submit')
        SetCaretToPositoin($input[0], inputPosition);

    if (isRequiredValidation) {
        if ((postcodeval == undefined || postcodeval.trim() == "")) {
            nc_DisplayErrorAndDescription($input, AddressClientRes.error_Site_PostalCodeErrorMessage)
            return false;
        }

    }

    if (eventtype == 'submit') {

        if (nc_postalregx != '') {
            var ValueEntered = $input.val();

            if (!(postcodeval.match(nc_postalregx))) {
                nc_DisplayErrorAndDescription($input, errormessage);
                return false;
            }
            else {
                nc_RemoveErrorAndDescription($input);
                return true;
            }

        }
        else {
            if (postcodeval != "") {
                if (!(postcodeval.match(nc_Val_PostalCodeRegex))) {
                    nc_DisplayErrorAndDescription($input, AddressClientRes.error_Site_PostalCodeErrorMessage);
                    return false;
                }
                else {
                    nc_RemoveErrorAndDescription($input);
                    return true;
                }
            }
            return true;

        }

    }
    else {

        if (nc_postalregx != '') {
            clearTimeout(timer);
            timer = setTimeout(function () {
                var ValueEntered = $input.val();

                if (!(postcodeval.match(nc_postalregx))) {
                    nc_DisplayErrorAndDescription($input, errormessage);
                    return false;
                }
                else {
                    nc_RemoveErrorAndDescription($input);
                    return true;
                }
            }, 1000);
        }
        else {
            if (postcodeval != "") {
                if (!(postcodeval.match(nc_Val_PostalCodeRegex))) {
                    nc_DisplayErrorAndDescription($input, AddressClientRes.error_Site_PostalCodeErrorMessage);
                    return false;
                }
                else {
                    nc_RemoveErrorAndDescription($input);
                    return true;
                }
            }
            return true;

        }

    }

}

function nc_countrycodevalidation(countryobj, stateobj) {
    var stateCodeToUse = "";
    var validateState = false;

    var country = $(countryobj).val();
    var stateEntered = $(stateobj).val();
    if (stateEntered != null) stateEntered = stateEntered.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

    var _country = countries[country];
    if (_country != null) {
        validateState = true;

        var states = _country.states
        var currentState = "";

        for (var s in states) {
            for (var t in states[s]) {
                if (t != "sortOn") {
                    currentState = states[s][t].replace(/[^a-zA-Z0-9]/g, '').toLowerCase()
                    if (stateEntered === currentState) {
                        stateCodeToUse = s;
                        break;
                    }
                }

            }
        }
    }
    // else
    //    console.log ("no country obj available. so nothing to do");
    nc_RemoveErrorAndDescription(stateobj);
    if (validateState && stateCodeToUse == "") {
        // TODO: handle invalid code
        nc_DisplayErrorAndDescription(stateobj, AddressClientRes.error_Site_StateProvinceErrorMessage);
        return false;
    }
    else if (stateCodeToUse != "") {
        // Set the code as we know it has to be replaced
        $(stateobj).val(stateCodeToUse.trim());

    }
    return true;
}

function ncEmail(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var $input = $(value);
            var pat = nc_Val_EmailPattern;
            var ErrMsg = $input.attr('error-message');
            var emailValue = $input.val();
            var isValidTld = true;
            var emailExtension = emailValue.split("@")[1];
            if (emailExtension != undefined) {
                var dotIndex = emailExtension.indexOf('.');
                if (dotIndex != -1) {
                    var emailTLD = emailExtension.substr(dotIndex + 1, emailExtension.length - dotIndex)
                    var tldPattern = nc_Val_AlphaAndDot;
                    if (emailTLD != "") {
                        if (emailTLD.match(tldPattern)) {
                            isValidTld = true;
                        }
                        else {
                            isValidTld = false;
                        }


                    }


                }


            }
            if (($input.is(":visible") && $input.val() != undefined)) {
                if (pat.test($input.val().trim()) == false || isValidTld == false) {
                    nc_DisplayErrorAndDescription($input, ErrMsg);
                    errCount = errCount + 1;
                }
                else {
                    nc_RemoveErrorAndDescription($input);

                }
            }
        });
    }
    else {
        //clearTimeout(timer);
        //timer = setTimeout(function ()
        //{
        var $input = $(obj);
        var pat = nc_Val_EmailPattern;
        var ErrMsg = $input.attr('error-message');
        var emailValue = $input.val();
        var isValidTld = true;
        var emailExtension = emailValue.split("@")[1];
        if (emailExtension != undefined) {
            var dotIndex = emailExtension.indexOf('.');
            if (dotIndex != -1) {
                var emailTLD = emailExtension.substr(dotIndex + 1, emailExtension.length - dotIndex)
                var tldPattern = nc_Val_AlphaAndDot;
                if (emailTLD != "") {
                    if (emailTLD.match(tldPattern)) {
                        isValidTld = true;
                    }
                    else {
                        isValidTld = false;
                    }


                }


            }


        }
        if (($input.is(":visible") && $input.val() != undefined)) {
            if (pat.test($input.val().trim()) == false || !isValidTld) {
                nc_DisplayErrorAndDescription($input, ErrMsg);
                errCount = errCount + 1;
            }
            else {
                nc_RemoveErrorAndDescription($input);

            }
        }
        //}, emailRegexWaitMilliSeconds);

    }


    if (errCount == 0)
        return true;
    else
        return false;

}

function ncNameField(obj, eventtype) {
    var errCount = 0;
    var errNameCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-namefield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "") && $(value).val().match(nc_Val_FnameLnameRegExpression)) {
                nc_RemoveErrorAndDescription($(value));
            }
            else {
                if ($(value).is(":visible")) {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                    errNameCount = errNameCount + 1;
                }
            }

        });
    }
    else {


        var ErrMsg = $(obj).attr('data-ap-namefield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_FnameLnameRegExpression)) {
                nc_RemoveErrorAndDescription($(obj));

            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;

            }

        }


    }
    if (errCount == 0)
        return true;
    else
        return false;

}

function ncAddressField(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-addressfield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_AddressRegex)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-addressfield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_AddressRegex)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}

//Set Credit Card Type
function GetCardType(obj, eventtype) {
    var returnValue = true;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            if (($(value).is(":visible") && $(value).is(":enabled") && $(value).val() != undefined && $(value).val() != "")) {
                if (!ValidateCCNumber(value))
                    returnValue = false;
                else
                    returnValue = ncCheckCardPaymentType(obj, eventtype);
            }
        });
    }
    else {
        if ($(obj).is(":visible")) {
            ValidateCCNumber(obj);
        }
    }
    return returnValue;
}
function ValidateCCNumber(obj) {
    var cardNumber = $(obj).val();
    var ccType = "INVALID";

    if (cardNumber == '')
        ccType = "INVALID";

    if (cardNumber.substring(0, 1) == '4' && (cardNumber.length == 13 || cardNumber.length == 16))
        ccType = "VISA";
    if ((cardNumber.substring(0, 2) == '34' || cardNumber.substring(0, 2) == '37') && cardNumber.length == 15)
        ccType = "AMEX";
    else if ((cardNumber.substring(0, 2) == "51" || cardNumber.substring(0, 2) == "52"
        || cardNumber.substring(0, 2) == "53" || cardNumber.substring(0, 2) == "54" || cardNumber.substring(0, 2) == "55") && cardNumber.length == 16)
    { ccType = "MC"; }


    if (ccType == 'VISA') {
        $(obj).parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-visa");
    }
    else if (ccType == 'MC') {
        $(obj).parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-mastercard");
    }
    else if (ccType == 'AMEX') {
        $(obj).parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-americanexpress");
    }
    else {
        $(obj).parent("div").removeClass("card-visa card-mastercard card-americanexpress");
    }
    $("#cc_number").val('');
    if (cardNumber.length >= 13) {
        var firstSix = cardNumber.substr(0, 6);
        var lastFour = cardNumber.substr(cardNumber.length - 4)

        if (cardNumber.length > 15)
            $("#cc_number").val(firstSix + '000000' + lastFour);
        else if (cardNumber.length = 15)
            $("#cc_number").val(firstSix + '00000' + lastFour);
        else if (cardNumber.length = 14)
            $("#cc_number").val(firstSix + '0000' + lastFour);
        else if (cardNumber.length = 13)
            $("#cc_number").val(firstSix + '000' + lastFour);
    }
    $("#cc_type").val(ccType);

    var returnValue = true;
    if ($(obj).is(" :enabled") && cardNumber.length >= 13)
        if (Stripe.card.validateCardNumber($(obj).val())) {
            nc_RemoveErrorAndDescription($(obj));
        }
        else {
            returnValue = false;
            var errMsg = $(obj).attr('error-message');
            if (errMsg != undefined) {
                nc_DisplayErrorAndDescription($(obj), errMsg);
            }
        }

    if (returnValue && $("#cc_number").val() != '')
        returnValue = true;
    else
        returnValue = false;

    return returnValue;
}

function ncCheckCardPaymentType(obj, eventtype) {
    var errCount = 0;
    var ErrMsg = BillingInfoRes.error_Contextual_NotAValidCardType;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            if (($(value).is(":visible") && $(value).is(":enabled") && $(value).val() != undefined && $(value).val() != "")) {
                if ($.inArray(Stripe.card.cardType($(value).val()), AcceptedCards) != -1) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }
            }
        });
    }
    else {
        if (($(obj).is(":visible") && $(obj).is(":enabled") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($.inArray(Stripe.card.cardType($(obj).val()), AcceptedCards) != -1) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }
        }
    }

    if (errCount == 0)
        return true;
    else
        return false;
}

function ncOrgJobTitle(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-orgjobtitle');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_OrgCompanyNameRegExpression)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-orgjobtitle');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_OrgCompanyNameRegExpression)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}

function ncCity(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-cityfield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_CityRegex)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-cityfield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_CityRegex)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}

function ncState(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-statefield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_StateRegex)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-statefield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_StateRegex)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}

function allownumericonly(e, obj, allowdot) {
    var evt = (e) ? e : window.event
    var key = evt.which;
    // backspace, tab, left arrow, up arrow, right arrow, down arrow, delete, numpad decimal pt, period, enter,space
    if ((key >= 48 && key <= 57) || (key >= 96 && key <= 105) || (key >= 37 && key <= 40) || key == 8 || key == 9 || key == 190 || key == 110 || key == 46 || key == 13) {
        if (!allowdot && (key == 190 || key == 110)) {
            evt.preventDefault();
            return false;
        }
        else if ($(obj).val().indexOf('.') > 0 && (key == 190 || key == 110) && allowdot) {
            evt.preventDefault();
            return false;
        }
        else if ($(obj).val() == "" && (key == 190 || key == 110) && allowdot) {
            evt.preventDefault();
            return false;
        }
        return true;
    }
    else {
        if (key == 86 && evt.ctrlKey == true)
            return true;
        else {
            evt.preventDefault();
            return false;
        }

    }
}

function allownumericwithDot(e, obj) {

    var evt = (e) ? e : window.event
    var key = evt.which;
    //$(this).val($(this).val().replace(/[^0-9\.]/g, ''));
    if (key != 0 && key != 8 && key != 9 && key != 190 && key != 13) {
        if ((key != 46 || $(obj).val().indexOf('.') != -1) && (key < 48 || key > 57)) {
            evt.preventDefault();
            return false;

        }


    }

}

function allownumericwithSpace(e, obj) {
    var evt = (e) ? e : window.event
    var key = evt.which;
    //$(this).val($(this).val().replace(/[^0-9\.]/g, ''));
    //37=Left Arrow, 39=Right Arrow, 38=Up Arrow, 40=Down Arrow, 16=Shift,17=CTRL, 46=Delete,45=Insert, 36=Home,35=End,33=PageUp,34=PageDown, 8=Backspace
    if (key != 0 && key != 8 && key != 9 && key != 190 && key != 13 && key != 32 && key != 37 && key != 39 && key != 38 && key != 40 && key != 45 && key != 16 && key != 17 && key != 46 && key != 36 && key != 33 && key != 34 && key != 35 && key != 86) {

        if ((key < 48 || key > 57) && (key < 96 || key > 105)) {
            evt.preventDefault();
            return false;
        }

    }
    else {
        if (key == 86 && evt.ctrlKey == true)
            return true;
        else if (key == 86 && evt.ctrlKey == false) {
            evt.preventDefault();
            return false;
        }
    }
}

function allownumericwithSpaceForCardSecurityCode(e, obj) {
    var evt = (e) ? e : window.event
    var key = evt.which;
    //$(this).val($(this).val().replace(/[^0-9\.]/g, ''));
    //37=Left Arrow, 39=Right Arrow, 38=Up Arrow, 40=Down Arrow, 16=Shift,17=CTRL, 46=Delete,45=Insert, 36=Home,35=End,33=PageUp,34=PageDown, 8=Backspace
    if (key != 0 && key != 8 && key != 9 && key != 190 && key != 13 && key != 32 && key != 37 && key != 39 && key != 38 && key != 40 && key != 45 && key != 16 && key != 17 && key != 46 && key != 36 && key != 33 && key != 34 && key != 35 && key != 86 && key != 78 && key != 67) {

        if ((key < 48 || key > 57) && (key < 96 || key > 105)) {
            evt.preventDefault();
            return false;
        }

    }
    else {
        if (key == 86 && evt.ctrlKey == true)
            return true;
    }
}


function AllowDecimalPoints(obj, eventtype) {
    if (eventtype == "submit") {
        $(obj).each(function (index, value) {
            $input = $(value);
            if ($input.val().indexOf('.') != -1 && $input.val().length > 1) {
                var decimalLimit = $(obj).attr('data-ap-allowdecimalpoint');
                var num = parseFloat($(obj).val());
                var finalValue = num.toFixed(decimalLimit);
                $(obj).val(finalValue)

            }
        });
    }
    else if (eventtype == "blur") {
        $(obj).each(function (index, value) {
            $input = $(value);
            if ($input.val().length > 0) {
                var decimalLimit = $(obj).attr('data-ap-allowdecimalpoint');
                var num = parseFloat($(obj).val());
                var finalValue = num.toFixed(decimalLimit);
                $(obj).val(finalValue)

            }
        });
    }
    else {
        clearTimeout(timer);
        timer = setTimeout(function () {

            if ($(obj).val().indexOf('.') != -1 && $(obj).val().length > 1) {
                var decimalLimit = $(obj).attr('data-ap-allowdecimalpoint');
                var num = parseFloat($(obj).val());
                var finalValue = num.toFixed(decimalLimit);
                $(obj).val(finalValue)
            }

        }, 1000);
    }
    return true;



}

function PreventSpecialCharacters(obj) {
    var $input = $(obj);
    var ValueEntered = $input.val();
    if (ValueEntered != undefined || ValueEntered != "") {
        if (!(ValueEntered.match(nc_Val_Numeric))) {
            var filteredVal = ValueEntered.replace(/[^a-z0-9\-]/gmi, "");
            $input.val(filteredVal);
        }
    }

}
function PreventCreditcardSpecialCharacters(obj) {
    var $input = $(obj);
    var ErrMsg = $input.attr('error-message');
    var ValueEntered = $input.val();
    if (ValueEntered != undefined && ValueEntered != "") {
        var filteredVal = ValueEntered.replace(/[^a-z0-9]/gmi, "");
        if (!(ValueEntered.match(nc_Val_Numeric))) {
            $input.val(filteredVal);
            if (filteredVal != undefined && filteredVal.trim() != "" && (!isNaN(filteredVal) || filteredVal.toUpperCase() == "NCVC") && Stripe.card.validateCVC(filteredVal)) {
                if (filteredVal.toUpperCase() == "NCVC")
                    $(obj).val(filteredVal.toUpperCase());
                return true;
            }
            else {
                nc_DisplayErrorAndDescription($input, ErrMsg);
                return false;
            }
        }
        else {
            if (!Stripe.card.validateCVC(filteredVal)) {
                nc_DisplayErrorAndDescription($input, ErrMsg);
                return false;
            }
            else
                return true;
        }
    }
    else
        return true;
}


function AllowAlphaNumericDot(obj) {
    var $input = $(obj);
    var ValueEntered = $input.val();
    if (ValueEntered != undefined || ValueEntered != "") {
        if (!(ValueEntered.match(nc_Val_AlphaNumericDot))) {
            var filteredVal = ValueEntered.replace(/[^a-zA-Z0-9.]/, "");
            $input.val(filteredVal);
        }
    }

}
//Generate contact name in twofa
function contactname_generator() {
    var $phonenumber = $("#PhoneNumber").val();
    var $extensionnumber = $("#ExtensionNumber").val();
    if ($("#hiddencontactname").val() == "") {
        var contactName = 'Phone-';
        var partialPhoneNumber = $phonenumber.substring($phonenumber.length - 4, $phonenumber.length);
        contactName = contactName + partialPhoneNumber;
        if (($phonenumber.match(nc_Val_Numeric) && $phonenumber.length > 4)) {
            contactName = 'Phone-';
            if ($extensionnumber.trim() != "") {
                partialPhoneNumber = partialPhoneNumber + "-" + $extensionnumber.trim();
            }
            contactName = contactName + partialPhoneNumber;
            $("#FriendlyName").val(contactName);
            if ($("#FriendlyName").val() != "")
                nc_RemoveErrorAndDescription($("#FriendlyName"));
        }
    }
}

function nc_TwofaVerification_Validation(inputobj, eventtype) {
    var errCount = 0;
    if (eventtype == "submit") {
        $(inputobj).each(function (index, value) {

            $(value).val($(value).val().replace(/[^\w]/g, ''));
            pattern = nc_Val_PhoneExtPattern;
            var inputobjvalue = $(value).val();
            if (inputobjvalue.length < verificationCodeLenth) {

                nc_DisplayErrorAndDescription(value, TwofaClientRes.error_Site_VerificationCodeLength.replace("{fieldname}", "verification code").replace("{number}", verificationCodeLenth));
                errCount = errCount + 1;

            }
            else if (pattern.test(inputobjvalue)) {

                var startnumber = $(value).attr("startnumber");
                if (typeof startnumber != typeof undefined && startnumber != false && startnumber != "") {
                    if (pattern.test(startnumber)) {
                        var firstcheckvalue = inputobjvalue.charAt(0);
                        if (startnumber != firstcheckvalue) {
                            nc_DisplayErrorAndDescription(value, TwofaClientRes.error_Site_VerificationCodeFirstNumber.replace("{number}", startnumber));
                            errCount = errCount + 1;
                        }
                    }
                }
                else {
                    nc_RemoveErrorAndDescription($(value));
                }

            }
            else {
                nc_DisplayErrorAndDescription($(value), TwofaClientRes.error_Site_VerificationCodeErrorMessage);
                errCount = errCount + 1;
            }

        });
    }
    else {
        nc_RemoveErrorAndDescription(inputobj);
        $(inputobj).val($(inputobj).val().replace(/[^\w]/g, ''));
        pattern = nc_Val_PhoneExtPattern;
        var inputobjvalue = $(inputobj).val();
        if (inputobjvalue.length < verificationCodeLenth) {

            nc_DisplayErrorAndDescription($(inputobj), TwofaClientRes.error_Site_VerificationCodeLength.replace("{fieldname}", "verification code").replace("{number}", verificationCodeLenth));
            errCount = errCount + 1;

        }
        else if (pattern.test(inputobjvalue)) {

            var startnumber = $(inputobj).attr("startnumber");
            if (typeof startnumber != typeof undefined && startnumber != false && startnumber != "") {
                if (pattern.test(startnumber)) {
                    var firstcheckvalue = inputobjvalue.charAt(0);
                    if (startnumber != firstcheckvalue) {
                        nc_DisplayErrorAndDescription(inputobj, TwofaClientRes.error_Site_VerificationCodeFirstNumber.replace("{number}", startnumber));
                        errCount = errCount + 1;
                    }
                }
            }
            else {
                nc_RemoveErrorAndDescription(inputobj);
            }


        }
        else {
            nc_DisplayErrorAndDescription(inputobj, TwofaClientRes.error_Site_VerificationCodeErrorMessage);
            errCount = errCount + 1;
        }
    }
    if (errCount == 0)
        return true;
    else
        return false;


}
//Twofa


function isSpecialSymbolExists(testValue) {
    for (var i = 0; i < testValue.length; i++) {
        if (testValue[i] >= ' ' && testValue[i] < '0') {
            return true;
        }
        if (testValue[i] > '9' && testValue[i] < 'A') {
            return true;
        }
        if (testValue[i] > 'z' && testValue[i] <= '~') {
            return true;
        }
        if (testValue[i] > 'Z' && testValue[i] < 'a') {
            return true;
        }
    }

    return false;
}

function isNoSideSpaces(testValue) {
    return testValue.trim() == testValue;
}


function isNumberExists(testValue) {
    for (var i = 0; i < testValue.length; i++) {
        if (testValue[i] >= '0' && testValue[i] <= '9') {
            return true;
        }
    }

    return false;
}

//Password confirmation page
function nc_PasswordChange_conform_Validation(inputobj, compareobj) {

    var inputfieldId = $(inputobj).attr('id');
    var inputObjVal = ReplaceScriptInjectionsWithspace($(inputobj).val());
    var CompareObjVal = ReplaceScriptInjectionsWithspace($(compareobj).val());

    //var passworderrormsg = SecurityClientRes.error_Site_PasswordMatchBelow; 

    var comparepassworderrormsg = SecurityClientRes.error_Site_PasswordMatchAbove;
    if ($(inputobj).val().trim() != "") {

        var passwordStrengthError = "";
        if (inputObjVal.length < 8) {
            passwordStrengthError = SecurityClientRes.error_Site_NewPasswordInvalid;
        }

        /*
        if (!isSpecialSymbolExists(inputObjVal)) {
            passwordStrengthError = SecurityClientRes.error_Site_NewPasswordInvalid;
        }
        */

        if (!isNoSideSpaces(inputObjVal)) {
            passwordStrengthError = SecurityClientRes.error_Site_Password_No_Side_Spaces;
        }

        /*
        if (!isNumberExists(inputObjVal)) {
            passwordStrengthError = SecurityClientRes.error_Site_NewPasswordInvalid;
        }

        if (inputObjVal.toUpperCase() == inputObjVal)
        {
            passwordStrengthError = SecurityClientRes.error_Site_NewPasswordInvalid;
        }

        if (inputObjVal.toLowerCase() == inputObjVal) {
            passwordStrengthError = SecurityClientRes.error_Site_NewPasswordInvalid;
        }
        */

        if (passwordStrengthError !== "") {
            nc_DisplayErrorAndDescription(inputobj, passwordStrengthError);
            return false;
        }


        if (nc_Compare_Fields_check_withspace(inputobj, compareobj)) {
            nc_RemoveErrorAndDescription("#NewPassword");
            nc_RemoveErrorAndDescription("#ConfirmPassword");
            nc_DisplaySuccessAndDescription($('#ConfirmPassword'), SecurityClientRes.success_Site_PasswordMatch);
            return true;
        }


        if (inputObjVal != CompareObjVal && CompareObjVal != "" && inputfieldId == "NewPassword") {
                nc_DisplayErrorAndDescription(compareobj, comparepassworderrormsg);
        }
        else if (inputfieldId == "NewPassword" && (inputObjVal == CompareObjVal)) {
            nc_RemoveErrorAndDescription("#ConfirmPassword");
            nc_DisplaySuccessAndDescription($('#ConfirmPassword'), SecurityClientRes.success_Site_PasswordMatch);
        }

    }
    else {
        if (CompareObjVal != "" && inputfieldId == "NewPassword")
            nc_DisplayErrorAndDescription(compareobj, comparepassworderrormsg);
        return false;
    }

}

function nc_Compare_Fields_check_withspace(inputobj, compareinputobj) {

    var inputObjVal = ReplaceScriptInjectionsWithspace($(inputobj).val());
    var CompareObjVal = ReplaceScriptInjectionsWithspace($(compareinputobj).val());
    var passworderrormsg = SecurityClientRes.error_Site_PasswordMatchBelow; //$(inputobj).attr("id") == "NewPassword" ? SecurityClientRes.error_Site_PasswordMatchBelow : SecurityClientRes.error_Site_PasswordMatchAbove;
    var comparepassworderrormsg = SecurityClientRes.error_Site_PasswordMatchAbove; // $(compareobj).attr("id") == "NewPassword" ? SecurityClientRes.error_Site_PasswordMatchBelow : SecurityClientRes.error_Site_PasswordMatchAbove;
    if (CompareObjVal.trim() != "" && inputObjVal != CompareObjVal || (inputObjVal.trim() == "" && CompareObjVal.trim() != "")) {
        //nc_DisplayErrorAndDescription(inputobj, passworderrormsg);
        nc_DisplayErrorAndDescription(compareinputobj, comparepassworderrormsg);
        return false;
    }
    else {
        if (inputObjVal == CompareObjVal) {
            nc_RemoveErrorAndDescription(compareinputobj);
            return true;
        }
        else {
            return false;
        }
    }
}

function nc_ValidatePasswordStrength(inputobj) {

    var id = $(inputobj).attr('id');
    var returnValue = true;
    if (id != 'ConfirmPassword') {
        var rPassword = $(inputobj).val();
        $(inputobj).val(rPassword);
        var errorMessage;
        if (rPassword.length < 8) {

            nc_DisplayErrorAndDescription(inputobj, SecurityClientRes.error_Contextual_PasswordStrength);
            returnValue = false;
        }
        else if (rPassword.search(/[a-z]/) < 0) {

            nc_DisplayErrorAndDescription(inputobj, SecurityClientRes.error_Contextual_PasswordStrength);
            returnValue = false;
        }
        else if (rPassword.search(/[A-Z]/) < 0) {

            nc_DisplayErrorAndDescription(inputobj, SecurityClientRes.error_Contextual_PasswordStrength);
            returnValue = false;
        }
        else if (rPassword.search(/[0-9]/) < 0) {

            nc_DisplayErrorAndDescription(inputobj, SecurityClientRes.error_Contextual_PasswordStrength);
            returnValue = false;
        }
    }

    return returnValue;
}
//End Password confirmation
function ErrorDisplayControlShow(message, isFromPopup) {
    //To Set the focus for the first error element textbox
    var thisdivonlycls = $("#errorDisplayPopupParentDiv").attr('class');
    var popupErrorDiv = $("#errorDisplayPopupParentDiv");
    if (thisdivonlycls !=undefined && $("thisdivonlycls:contains(msginthisdivonly)")) {
        if (popupErrorDiv.hasClass("hidden")) popupErrorDiv.removeClass("hidden");
        if (popupErrorDiv.hasClass("success")) popupErrorDiv.removeClass("success");
        if (popupErrorDiv.hasClass("alert")) popupErrorDiv.removeClass("alert");
        if (!(popupErrorDiv).hasClass("error")) popupErrorDiv.addClass("error");
        popupErrorDiv.children("p.error-msg").html(message);
        popupErrorDiv.show();
    }
    else {
        var firstError = $("input[type=text].loading.error:first");
        if (firstError != null && firstError != undefined)
            firstError.focus();
        if ($(".site-msg").hasClass("hidden")) $(".site-msg").removeClass("hidden");
        if ($(".site-msg").hasClass("success")) $(".site-msg").removeClass("success");
        if ($(".site-msg").hasClass("alert")) $(".site-msg").removeClass("alert");
        if (!$(".site-msg").hasClass("error")) $(".site-msg").addClass("error");
        $(".site-msg").children("p.error-msg").html(message);
        //$(".site-msg").show();
        if (!isFromPopup) {
            $("#errorDisplayParentDiv").show();
            $("#errorDisplayPopupParentDiv").hide();
            $('html, body').animate({ scrollTop: 0 }, 800);
        }
        else {
            $("#errorDisplayPopupParentDiv").show();
            $("#errorDisplayParentDiv").hide();
        }
    }
}


// Billing --> Payment Section --> Manage --> PaymentCards --> Use for Autorenewal Check / Uncheck Case Display the Site Message
function AutorewalUpdateMessage(issuccess) {
    if (issuccess != null && issuccess != undefined) {
        var message = "";
        if ($(".site-msg").hasClass("hidden")) $(".site-msg").removeClass("hidden");
        if ($(".site-msg").hasClass("success")) $(".site-msg").removeClass("success");
        if ($(".site-msg").hasClass("alert")) $(".site-msg").removeClass("alert");
        if ($(".site-msg").hasClass("error")) $(".site-msg").removeClass("error");
        if (issuccess == "exception") {
            message = BillingInfoRes.error_Site_CardList_InternalError;
            if (!$(".site-msg").hasClass("error")) $(".site-msg").addClass("error");
        }
        else if (issuccess == "true") {
            message = BillingInfoRes.success_Site_UpdateAutoRenewMessage;
            if (!$(".site-msg").hasClass("success")) $(".site-msg").addClass("success");
        }
        else {
            message = BillingInfoRes.error_Site_UpdateAutoRenewFailed;
            if (!$(".site-msg").hasClass("error")) $(".site-msg").addClass("error");
        }
        $(".site-msg").children("p.error-msg").html(message);
        $(".site-msg").show();
        $('html, body').animate({ scrollTop: $(".site-msg").parent().parent().offset().top - 20 }, 200);
    }
}

function showphoneextension(input, isgeneratecontactname) {

    var parentdiv = $(input).parents("div.phone:first");
    if ($(input).is(':checked')) {
        parentdiv.addClass('has-extension');
    }
    else {
        parentdiv.removeClass('has-extension');
        $("#ExtensionNumber").val("");
        if (isgeneratecontactname)
            contactname_generator();
    }
    //For twofa page tooltip show/hide
    var twofaform = $(input).parents(".form").attr("data-ap-twofaadddevice");
    if (typeof twofaform !== typeof undefined && twofaform !== false) {
        if ($(input).is(':checked'))
            $('a.tooltip-toggle', 'div.row label.responsive-tooltip').show();
        else
            $('a.tooltip-toggle', 'div.row label.responsive-tooltip').hide();
    }
}
function hidephonextforsms(input) {
    var selectedValue = $(input).find(":selected").val();
    if (selectedValue == "Text") {

        $("#phone-extension-2").attr("disabled", true);
        $("#phone-extension-2").attr("checked", false);
        var parentdiv = $("#ExtensionNumber").parents("div.phone:first");
        parentdiv.removeClass('has-extension');
        $("#ExtensionNumber").val("");
        $("#voicesuggestion").hide();
        $('a.tooltip-toggle', 'div.row label.responsive-tooltip').hide();
        $('#divAddExetension').hide();
    }
    else {
        $("#phone-extension-2").attr("disabled", false);
        $("#voicesuggestion").show();
        $('#divAddExetension').show();
    }
}

function removeDuplicatesInPlace(arr) {
    var i, j, cur, found;
    for (i = arr.length - 1; i >= 0; i--) {
        cur = arr[i].msg;
        found = false;
        for (j = i - 1; !found && j >= 0; j--) {
            if (cur === arr[j].msg) {
                if (i !== j) {
                    arr.splice(i, 1);
                }
                found = true;
            }
        }
    }
    return arr;
};

function behalfcheck(input) {
    $(input).find("#companyCheckbox").each(function () {
        if ($(this).is(':checked')) {
            $(input).addClass('expanded');

            $("#addressOrganization,#addressJobTitle").attr("data-ap-requiredonblur", "");
            // $("#addressJobTitle").attr("data-ap-requiredonblur", "");
        }
        else {

            $(input).removeClass('expanded');
            $("#addressOrganization,#addressJobTitle").removeAttr("data-ap-requiredonblur");
        }
    });
}
function savecreditcardcheck(input) {
    $(input).find("#saveCreditCard").each(function () {
        $(".savecardcheckbox").show();
        if ($(this).is(':checked')) {
            //Initaly Set Auto-rew checkbox checked           
            $(input).addClass('expanded');
            $("#friendly_name").attr("data-ap-requiredonblur", "");
            //Check The Pagemode and edit case don't display the save card for later check box. 
            if ($(this).attr('rel') != null && $(this).attr('rel') != "")
                var pageMde = $(this).attr('rel');
            if (pageMde.toLowerCase() == "edit") {
                $(".savecardcheckbox").hide();
            }
            if (pageMde.toLowerCase() == "add") {
                $("#SetAutorenewal").attr('checked', 'checked');
            }
        }
        else {
            //Once unchecked Savecard check box uncheck inner(IsDefault & Auto-rew) checkboxes.
            $(input).each(function () {
                if ($('input:checkbox').is(":checked"))
                    $('input:checkbox').removeAttr('checked');
            });
            $(input).removeClass('expanded');
            $("#friendly_name").removeAttr("data-ap-requiredonblur");
        }
    });
}

//Set creditcard Type Class
function setcardtypeclass(input) {
    var ccType = $(input).val();
    if (ccType != undefined && ccType != "") {
        if (($(".creditcardnumber").val() != undefined && $(".creditcardnumber").val() != "")) {
            if (ccType == 'VISA') {
                $(".creditcardnumber").parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-visa");
            }
            else if (ccType == 'MC') {
                $(".creditcardnumber").parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-mastercard");
            }
            else if (ccType == 'AMEX') {
                $(".creditcardnumber").parent("div").removeClass("card-visa card-mastercard card-americanexpress").addClass("card-americanexpress");
            }
            else {
                $(".creditcardnumber").parent("div").removeClass("card-visa card-mastercard card-americanexpress");
            }
        }
    }
}

function CreditCardAutoRenewSorting(obj) {
    var arrayList = ["85470212-0BF7-4469-A425-D05D347A91B5", "640EA381-4E7E-4E05-B58E-27ADE8C960E1", "3B61BD89-A1D3-4F36-9D39-CAFD86BFD736"]
    var cardId = "";
    var curAutoRenewPrty = 0;
    var lastAutoRenewPrty = 0;
    var sortedAutoRenewPrtyData = "";
    for (index = 0; index < arrayList.length; index++) {
        cardId = arrayList[index];
        //curAutoRenewPrty = parseInt($("#card-" + cardId).val());
        curAutoRenewPrty = cardId;
        if (curAutoRenewPrty != 0) {
            curAutoRenewPrty = lastAutoRenewPrty + 1;
            lastAutoRenewPrty = curAutoRenewPrty;
        }
        sortedAutoRenewPrtyData = sortedAutoRenewPrtyData + cardId + '|' + curAutoRenewPrty.toString() + ',';
    }
    sortedAutoRenewPrtyData = sortedAutoRenewPrtyData.replace(/,+$/, '');
    var params = { "sortedAutoRenewPrioritydata": sortedAutoRenewPrtyData };
    $.ajax({
        type: "POST",
        url: "/Profile/Billing/SortAutoRenewPriority",
        data: params,
        success: function (msg) {
            //returns True if deleted
            //if (msg.d == "SUCCESS") {
            //    UpdateAutoRenewPriority(sortedAutoRenewPrtyData);
            //}
            //else {

            //    //TODO -- need to display the error in html
            //    alert("We are unable to change the priority of the credit cards. Please refresh this page, verifiy the order and try sorting again.\nMore information: " + msg.d);
            //}
        }
    });


}
function setCreditCardAutoRenewal(obj) {
    var creditCardId = $(obj).attr('rel');
    var isChecked = $(obj).is(":checked");
    if (!isChecked) {
        var atleastOneCheckedForAutoRenew = false;
        $(".Creditcard_AutoRenewal_Checkbox").each(function () {
            if ($(this).is(":checked")) atleastOneCheckedForAutoRenew = true;
        });
        if (!atleastOneCheckedForAutoRenew) {
            //var confirmation = confirm('Are you sure you uncheck Autorenew option for this card? If you proceed, please note you will have no card set for autorenew.');
            var confirmation = confirm('Are you sure you want to remove this card from being used for auto renew? As no other cards are selected, auto renewal will fail if funds available in your account is insufficient during that time.\n\nClick OK to continue or CANCEL to keep using the card for auto renew.');
            if (confirmation == false) {
                $(obj).attr('checked', 'checked');
                return true;
            }
        }
    }
    var params = { "creditCardId": creditCardId, "isSetAutoRenew": isChecked };
    $.ajax({
        type: "POST",
        url: "/Profile/Billing/UpdateAutoRenewForCard",
        data: params,
        success: function (result) {
            //var response = JSON.parse(result);
            //Success / Failure Display the site message
            AutorewalUpdateMessage(result);
        },
        error: function (xhr, msg) {
            // alert(msg);
        }
    });

}

function AtLeastOneCheckboxAttribute(checkboxCollection, errorObj) {
    var blReturn = false;
    var $input = $(errorObj);
    var ErrMsg = $input.attr('error-message');
    for (var i = 0; i < checkboxCollection.length; i++) {

        if (checkboxCollection[i].is(':checked') || checkboxCollection[i].attr('id') == undefined) {
            blReturn = true;
        }
    }
    if (!blReturn) {
        nc_DisplayErrorAndDescription($input, ErrMsg)
    }
    else {
        nc_RemoveErrorAndDescription($input);
    }
    return blReturn;
}

function MandatorycheckBox(checkboxCollection) {
    var blReturn = true;
    var falseCount = 0;
    for (var i = 0; i < checkboxCollection.length; i++) {

        if (!checkboxCollection[i].is(':checked')) {
            falseCount += 1;
            nc_DisplayErrorAndDescription($(checkboxCollection[i]), $(checkboxCollection[i]).attr('error-message'));
        }
        else {
            nc_RemoveErrorAndDescription($(checkboxCollection[i]));
        }

    }
    if (falseCount > 0) {
        blReturn = false;
    }
    return blReturn;

}

function CompareTwoValuesForNotEquality(obj1, obj2, errorMsg) {
    var blReturn = true;
    if ($(obj1).val() != "") {
        if ($(obj1).val().trim() == $(obj2).val().trim()) {
            nc_DisplayErrorAndDescription($(obj1), errorMsg)
            blReturn = false;
        }
        else {
            nc_RemoveErrorAndDescription($(obj1));
            blReturn = true;

        }
    }

    return blReturn;
}

function CompareValFirstLessThanSecond(obj1, obj2, errmsg, ShowErrorMsgOn) {
    if (parseFloat($(obj1).val()) < parseFloat($(obj2).val())) {

        if (ShowErrorMsgOn == "obj1")
            nc_DisplayErrorAndDescription($(obj1), errmsg);
        else
            nc_DisplayErrorAndDescription($(obj2), errmsg);
        return false;
    }
    else {
        nc_RemoveErrorAndDescription($(obj1));
        nc_RemoveErrorAndDescription($(obj2));
        return true;
    }
}

function OnHoverFocusControl(obj) {
    alert('OnHoverFocusControl')
    $(obj).focus();
}

function CheckMinLength(inputobj, eventtype, isRequiredValidation, doNotRemoveMessage) {
    var errCount = 0;
    if (eventtype == 'submit') {

        $(inputobj).each(function (index, value) {
            var validate = true;
            if (isRequiredValidation)
                if ($(value).val() == '')
                    validate = false;
            if (validate) {
                var ObjValue = ReplaceScriptInjections($(value).val().trim());
                var minlength = $(value).attr("minlength");
                var fieldname = $(value).attr("fieldname");
                if (ObjValue.length < minlength) {
                    nc_DisplayErrorAndDescription($(value), fieldname + " must be minimum " + minlength + " characters.");
                    errCount = errCount + 1;
                }
                else {
                    if (!doNotRemoveMessage)
                        nc_RemoveErrorAndDescription($(value));
                }
            }
        });
    }
    else {
        if (IsMouseDownEvent) {
            nc_RemoveErrorAndDescription($(inputobj));

        }
        else {
            var ObjValue = ReplaceScriptInjections($(inputobj).val().trim());
            var minlength = $(inputobj).attr("minlength");
            var fieldname = $(inputobj).attr("fieldname");
            if (ObjValue.length < minlength) {
                nc_DisplayErrorAndDescription($(inputobj), fieldname + " must be minimum " + minlength + " characters.");
                errCount = errCount + 1;
            }
            else {
                nc_RemoveErrorAndDescription($(inputobj));

            }
        }

    }
    if (errCount == 0)
        return true;
    else
        return false;

}

function ShowErrorDisplayControl() {
    if (nc_Error_Collections.length > 0) {
        nc_Error_Collections = removeDuplicatesInPlace(nc_Error_Collections);
        nc_Error_Collections.sortOn('order')
        var message = "";
        for (i = 0; i < nc_Error_Collections.length; i++) {
            if (message == "") {
                message = nc_Error_Collections[i].msg;;
            }
            else {
                message = message + "<br>" + nc_Error_Collections[i].msg
            }

        }



        $('html, body').animate({ scrollTop: $(".site-msg").parent().parent().offset().top - 20 }, 200);
        // event.preventDefault();
    }
}

function NumericGreaterThan(inputobj) {
    var greaterThanValue = $(inputobj).attr('greater-than-value');
    var errMsg = $(inputobj).attr('data-ap-numericgreaterthan')
    var ObjValue = parseFloat(ReplaceScriptInjections($(inputobj).val().trim()));
    if (ObjValue <= greaterThanValue) {
        nc_DisplayErrorAndDescription($(inputobj), errMsg);
        return false;
    }
    else {
        nc_RemoveErrorAndDescription($(inputobj));
        return true;
    }
}

function NumericGreaterThanOrEqualTo(inputobj, eventtype) {
    var blReturnValue = true;
    if ($(inputobj).val() != "") {
        if (eventtype == "submit") {
            $(inputobj).each(function (index, value) {
                $input = $(value);
                var greaterThanEqualtoValue = $input.attr('greater-than-equalto-value');
                var errMsg = $input.attr('data-ap-numericgreaterthanequalto')
                var ObjValue = parseFloat(ReplaceScriptInjections($input.val().trim()));
                if (ObjValue < greaterThanEqualtoValue) {
                    nc_DisplayErrorAndDescription($input, errMsg);
                    blReturnValue = false;
                }
                else {
                    nc_RemoveErrorAndDescription($input);
                    blReturnValue = true;
                }

            });
        }
        else {
            var greaterThanEqualtoValue = $(inputobj).attr('greater-than-equalto-value');
            var errMsg = ($(inputobj).attr('data-ap-numericgreaterthanequalto'))
            var ObjValue = parseFloat(ReplaceScriptInjections($(inputobj).val().trim()));
            if (ObjValue < greaterThanEqualtoValue) {
                nc_DisplayErrorAndDescription($(inputobj), errMsg);
                blReturnValue = false;
            }
            else {
                nc_RemoveErrorAndDescription($(inputobj));
                blReturnValue = true;
            }



        }
    }

    return blReturnValue;

}

function LessThanEqualToZeroValidation(inputobj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(inputobj).each(function (index, value) {
            if ($(value).val() != "") {
                var errMsg = ($(value).attr('data-ap-lessthanqualtozero'))
                var ObjValue = parseFloat(ReplaceScriptInjections($(value).val().trim()));
                if (ObjValue <= 0 || isNaN(ObjValue)) {
                    nc_DisplayErrorAndDescription($(value), errMsg);
                    errCount = errCount + 1;
                }
                else {
                    nc_RemoveErrorAndDescription($(value));

                }
            }


        });
    }
    else {
        if ($(inputobj).val() != "") {
            var errMsg = ($(inputobj).attr('data-ap-lessthanqualtozero'))
            var ObjValue = parseFloat(ReplaceScriptInjections($(inputobj).val().trim()));
            if (ObjValue <= 0 || isNaN(ObjValue)) {
                nc_DisplayErrorAndDescription($(inputobj), errMsg);
                errCount = errCount + 1;
            }
            else {
                nc_RemoveErrorAndDescription($(inputobj));

            }
        }



    }


    if (errCount == 0)
        return true;
    else
        return false;



}

function nameOnCardfield(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-nameoncardfield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_AddressRegex)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-nameoncardfield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_AddressRegex)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}

function cardNamefield(obj, eventtype) {
    var errCount = 0;
    if (eventtype == 'submit') {
        $(obj).each(function (index, value) {
            var ErrMsg = $(value).attr('data-ap-cardnamefield');
            if (($(value).is(":visible") && $(value).val() != undefined && $(value).val() != "")) {

                if ($(value).val().match(nc_Val_AddressRegex)) {
                    nc_RemoveErrorAndDescription($(value));
                }
                else {
                    nc_DisplayErrorAndDescription($(value), ErrMsg);
                    errCount = errCount + 1;
                }

            }
        });
    }
    else {

        var ErrMsg = $(obj).attr('data-ap-cardnamefield');
        if (($(obj).is(":visible") && $(obj).val() != undefined && $(obj).val() != "")) {

            if ($(obj).val().match(nc_Val_AddressRegex)) {
                nc_RemoveErrorAndDescription($(obj));
            }
            else {
                nc_DisplayErrorAndDescription($(obj), ErrMsg);
                errCount = errCount + 1;
            }

        }

    }

    if (errCount == 0)
        return true;
    else
        return false;

}



function MarketPlaceAddAttributeDynamically(value) {
    if (value == "paypal") {
        var greaterThanEqualToValue = "100";
        var errMsg = BillingInfoRes.error_Contextual_Withdraw_Minimum_Auth_Amount_Required.replace("{0}", greaterThanEqualToValue);

        $("#WithdrawAmount").attr("data-ap-numericgreaterthanequalto", errMsg);
        $("#WithdrawAmount").attr("greater-than-equalto-value", greaterThanEqualToValue);

    }
    else if (value == "namecheap") {
        $("#WithdrawAmount").removeAttr("data-ap-numericgreaterthanequalto");
        $("#WithdrawAmount").removeAttr("greater-than-equalto-value");

    }
}
//FUNCTIONS
function PaypalMinAmountShowHideOnChange(obj) {
    if ($(obj).val() != undefined) {
        if ($(obj).val() == "paypal") {
            $(".showWhenPaypal").show();
        }
        else {
            $(".showWhenPaypal").hide();
        }
    }
    return false;
}

var countries = {
    //"IN": {
    //    // http://www.geopostcodes.com/India
    //    "states": {
    //        "TN": ["TN", "Tamilnadu"],
    //        "AP": ["AP", "Andrapradesh", "Andra"]
    //    }
    //},
    "US": {
        // http://www.geopostcodes.com/USA
        "states": {
            "AL": ["AL", "Alabama"],
            "AK": ["AK", "Alaska"],
            "AZ": ["AZ", "Arizona"],
            "AR": ["AR", "Arkansas"],
            "CA": ["CA", "California"],
            "CO": ["CO", "Colorado"],
            "CT": ["CT", "Connecticut"],
            "DE": ["DE", "Delaware"],
            "FL": ["FL", "Florida"],
            "GA": ["GA", "Georgia"],
            "HI": ["HI", "Hawaii"],
            "ID": ["ID", "Idaho"],
            "IL": ["IL", "Illinois"],
            "IN": ["IN", "Indiana"],
            "IA": ["IA", "Iowa"],
            "KS": ["KS", "Kansas"],
            "KY": ["KY", "Kentucky"],
            "LA": ["LA", "Louisiana"],
            "ME": ["ME", "Maine"],
            "MD": ["MD", "Maryland"],
            "MA": ["MA", "Massachetts"],
            "MI": ["MI", "Michigan"],
            "MN": ["MN", "Minnesota"],
            "MS": ["MS", "Mississippi"],
            "MO": ["MO", "Missouri"],
            "MT": ["MT", "Montana"],
            "NE": ["NE", "Nebraska"],
            "NV": ["NV", "Nevada"],
            "NH": ["NH", "New Hampshire"],
            "NJ": ["NJ", "New Jersey"],
            "NM": ["NM", "New Mexico"],
            "NY": ["NY", "New York"],
            "NC": ["NC", "North Carolina"],
            "ND": ["ND", "North Dakota"],
            "OH": ["OH", "Ohio"],
            "OK": ["OK", "Oklahoma"],
            "OR": ["OR", "Oregon"],
            "PA": ["PA", "Pennsylvania"],
            "RI": ["RI", "Rhode Island"],
            "SC": ["SC", "South Carolina"],
            "SD": ["SD", "South Dakota"],
            "TN": ["TN", "Tennessee"],
            "TX": ["TX", "Texas"],
            "UT": ["UT", "Utah"],
            "VT": ["VT", "Vermont"],
            "VA": ["VA", "Virginia"],
            "WA": ["WA", "Washington"],
            "WV": ["WV", "West Virginia"],
            "WI": ["WI", "Wisconsin"],
            "WY": ["WY", "Wyoming"],
            "DC": ["DC", "Washington, D.C", "Washington D.C", "Washington DC", "Washington, DC"],
            "AS": ["AS", "American Samoa"],
            "UM": ["UM", "Minor Outlying Islands"],
            "MP": ["MP", "Northern Mariana Islands"],
            "PR": ["PR", "Puerto Rico"],
            "VI": ["VI", "Virgin Islands"],
            "GU": ["GU", "Guam"],
            "FM": ["FM", "Federated States of Micronesia"],
            "MH": ["MH", "Marshall Islands"],
            "PW": ["PW", "Palau"],
            "AE": ["AE", "Armed Forces Europe"],
            "AP": ["AP", "Armed Forces Pacific"],
            "AA": ["AA", "Armed Forces Americas"]


        }
    },
    "CA": {
        // http://www.geopostcodes.com/Canada
        "states": {
            "AB": ["AB", "Alberta"],
            "BC": ["BC", "British Columbia"],
            "MB": ["MB", "Manitoba"],
            "NB": ["NB", "New Brunswick"],
            "NL": ["NL", "Newfoundland & Labrador"],
            "NS": ["NS", "Nova Scotia"],
            "ON": ["ON", "Ontario"],
            "PE": ["PE", "Prince Edward Island"],
            "QC": ["QC", "Quebec"],
            "SK": ["SK", "Saskatchewan"],
            "NT": ["NT", "Northwest Territories"],
            "NU": ["NU", "Nunavut"],
            "YK": ["YK", "Yukon"]
        }
    }
};


function nc_DisplayErrorAndDescription(inputobj, Description, isReplaceHtml) {

    var displayOrder;
    var errorSummaryOrder = $(inputobj).attr('error-summary-displayorder');
    if (errorSummaryOrder == "" || errorSummaryOrder == undefined) {
        displayOrder = 0;
    }
    else {
        displayOrder = parseInt(errorSummaryOrder);
    }


    if ($(inputobj).prop('type') != "checkbox" && !$(inputobj).is(" ")) {
        $(inputobj).addClass("loading").addClass("error");
    }
    var inputId = $(inputobj).parent("div").find('p').attr('id');

    if (isReplaceHtml) {
        if ($(inputobj).parent("div").hasClass('input-group'))
            $(inputobj).parent("div").parent(".form").find("p.cont-msg:not('.info,.alert')").addClass("error").html(Description);


        else
            $(inputobj).parent("div").find("p.cont-msg:not('.info,.alert')").addClass("error").html(Description);

    }

    else {
        if ($(inputobj).parent("div").hasClass('input-group'))
            $(inputobj).parent("div").parent(".form").find("p.cont-msg:not('.info,.alert')").addClass("error").text(Description);
        else
            $(inputobj).parent("div").find("p.cont-msg:not('.info,.alert')").addClass("error").text(Description);

    }


    if (!$(this).parent().parent().hasClass('expanded')) {
        $(inputobj).parents("div.multidomain").addClass('expanded');
    }
    var domainname = $(inputobj).parents("div.multidomain:first").find("h3:first").text();
    var contacttype = $(inputobj).closest("li").children("div.group").children("h2").text();
    if (domainname != "" && domainname != null && domainname != undefined && contacttype != "" && contacttype != null && contacttype != undefined)
        nc_Error_Collections.push(domainname + ": " + (contacttype == "" ? "" : contacttype + ": ") + Description);
    else if (contacttype != "" && contacttype != null && contacttype != undefined)
        nc_Error_Collections.push((contacttype == "" ? "" : contacttype + ": ") + Description);
    else {
        nc_Error_Collections.push({

            msg: Description,
            order: displayOrder
        }
            );
    }


}

function nc_RemoveErrorAndDescription(inputobj) {
    if ($(inputobj).prop('type') != "checkbox") {
        //$(inputobj).parent("div").removeClass("loading").removeClass("error");
        $(inputobj).removeClass("loading").removeClass("error");
    }
    var inputId = $(inputobj).parent("div").find('p').attr('id');
    if ($(inputobj).parent("div").hasClass('input-group'))
        $(inputobj).parent("div").parent(".form").find("p.cont-msg").removeClass("error");


    else
        $(inputobj).parent("div").find("p.cont-msg").removeClass("error");
}

function nc_RemoveClassAndDescription(inputobj) {
    if ($(inputobj).prop('type') != "checkbox") {
        $(inputobj).parent("div").removeClass("loading error alert success");
        $(inputobj).removeClass("loading error alert success");
    }
    var inputId = $(inputobj).parent("div").find('p').attr('id');
    if ($(inputobj).parent("div").hasClass('input-group'))
        $(inputobj).parent("div").parent(".form").find("p.cont-msg").removeClass("loading error alert success");
    else
        $(inputobj).parent("div").find("p.cont-msg").removeClass("loading error alert success");
}

function nc_DisplaySuccessAndDescription(inputobj, Description) {
    nc_RemoveClassAndDescription(inputobj);
    $(inputobj).addClass("loading").addClass("success");
    $(inputobj).parent("div").find("p.cont-msg").addClass("success").text(Description);
}

function nc_DisplayAlertAndDescription(inputobj, Description) {
    nc_RemoveClassAndDescription(inputobj);
    $(inputobj).addClass("alert");
    $(inputobj).parent("div").find("p.cont-msg").addClass("alert").text(Description);
}

function AlphaNumericValidation(obj, fieldname) {
    var ObjValue = ReplaceScriptInjections($(obj).val().trim());
    if (ObjValue.match(nc_Val_AlphaNumeric)) {
        nc_RemoveErrorAndDescription(obj);
        return true;
    }
    else {
        nc_DisplayErrorAndDescription(obj, AddressClientRes.error_Site_requiredfiledMessage.replace("{fieldname}", fieldname));
        return false;
    }

    $(obj).val(ObjValue);
}

function specialcharvalidation(inputobj, fieldname) {
    var ObjValue = ReplaceScriptInjections($(inputobj).val().trim());
    $(inputobj).val(ObjValue);
    if ($(inputobj).val().match(nc_Val_WithoutSpecialCharacters)) {
        nc_RemoveErrorAndDescription(inputobj);
        return true;
    }
    else {
        nc_DisplayErrorAndDescription(inputobj, AddressClientRes.error_Site_requiredfiledMessage.replace("{fieldname}", fieldname));
        return false;
    }

    $(inputobj).val(ObjValue);
}

function NumericValidation(obj, fieldname) {
    var ObjValue = ReplaceScriptInjections($(obj).val().trim());
    $(obj).val(ObjValue);
    if ($(obj).val().match(nc_Val_Numeric)) {
        nc_RemoveErrorAndDescription(obj);
        return true;
    }
    else {
        nc_DisplayErrorAndDescription(obj, AddressClientRes.error_Site_requiredfiledMessage.replace("{fieldname}", fieldname));
        return false;
    }
}

function ReplaceScriptInjections(value) {
    var ReturnResult = "";

    if (value != undefined && value != "")
        ReturnResult = value.replace(/<script>.*<\/script>/g, "").replace(/<(.*?)>/g, "").trim();

    return ReturnResult;
}

function ReplaceScriptInjectionsWithspace(value) {
    var ReturnResult = "";

    if (value != undefined && value != "")
        ReturnResult = value.replace(/<script>.*<\/script>/g, "").replace(/<(.*?)>/g, "");

    return ReturnResult;
}

function trimSpace(inputobj) {
    $(inputobj).val($(inputobj).val().replace(/\s+/g, ' ').trim());
}

function topUpWithPageAmountMaximumValidation(inputobj, eventtype) {
    if (eventtype == 'keyup') {
        if (IsMouseDownEvent) {
            IsMouseDownEvent = false;
            return true;
        }
        else {

            var greaterThanEqualtoValue = $(inputobj).attr('greater-than-equalto-value');
            var errMsg = ($(inputobj).attr('data-ap-numericgreaterthanequalto'))

            if ($(inputobj).val().trim() != "") {


                var ObjValue = parseFloat(ReplaceScriptInjections($(inputobj).val().trim()));
                if (ObjValue < greaterThanEqualtoValue) {
                    nc_DisplayErrorAndDescription($(inputobj), errMsg);
                }
                else {
                    nc_RemoveErrorAndDescription($(inputobj));

                    var MaxAddFundsLimit = parseFloat($('#MaxAddFundsLimit').val())
                    var TotalFundsAddedToday = parseFloat($('#TotalFundsAddedToday').val())
                    var AmountToTopUp = parseFloat($('#AmountToTopUp').val())
                    var MaxAddFundsPerDayLimit = parseFloat($('#MaxAddFundsPerDayLimit').val())

                    var maxAddFundsLimitReturn = true;
                    var maxAddFundsPerDayLimitReturn = true;

                    if (parseFloat($('#AmountToTopUp').val()) > MaxAddFundsLimit) {
                        nc_DisplayErrorAndDescription($('#AmountToTopUp'), BillingInfoRes.error_contextual_MaxAddFundLimitReached.replace("{MAXIMUM_ADD_FUND_LIMIT}", MaxAddFundsLimit.toFixed(2)), true);
                        maxAddFundsLimitReturn = false;
                    }

                    else if ((AmountToTopUp + TotalFundsAddedToday) > MaxAddFundsPerDayLimit) {
                        nc_DisplayErrorAndDescription($('#AmountToTopUp'), BillingInfoRes.error_contextual_MaxAddFundPerDayLimitReached.replace("{MAXIMUM_ADD_FUNDS_PER_DAY_LIMIT}", MaxAddFundsPerDayLimit.toFixed(2)).replace("{TOTAL_FUNDS_ADDED_TODAY}", TotalFundsAddedToday.toFixed(2)), true);

                        maxAddFundsPerDayLimitReturn = false;
                    }
                    if (maxAddFundsLimitReturn && MaxAddFundsPerDayLimit && $(inputobj).val() != "" && $(inputobj).val() != 0) {
                        nc_RemoveErrorAndDescription($('#AmountToTopUp'))
                    }
                }

            }
        }

    }
    else {
        var retValue = true;
        $(inputobj).each(function (index, value) {

            var greaterThanEqualtoValue = $(value).attr('greater-than-equalto-value');
            var errMsg = ($(value).attr('data-ap-numericgreaterthanequalto'))

            if ($(value).val().trim() != "") {


                var ObjValue = parseFloat(ReplaceScriptInjections($(value).val().trim()));
                if (ObjValue < greaterThanEqualtoValue) {
                    nc_DisplayErrorAndDescription($(value), errMsg);
                }
                else {
                    nc_RemoveErrorAndDescription($(value));

                    var MaxAddFundsLimit = parseFloat($('#MaxAddFundsLimit').val())
                    var TotalFundsAddedToday = parseFloat($('#TotalFundsAddedToday').val())
                    var AmountToTopUp = parseFloat($('#AmountToTopUp').val())
                    var MaxAddFundsPerDayLimit = parseFloat($('#MaxAddFundsPerDayLimit').val())

                    var maxAddFundsLimitReturn = true;
                    var maxAddFundsPerDayLimitReturn = true;

                    if (parseFloat($('#AmountToTopUp').val()) > MaxAddFundsLimit) {
                        nc_DisplayErrorAndDescription($('#AmountToTopUp'), BillingInfoRes.error_contextual_MaxAddFundLimitReached.replace("{MAXIMUM_ADD_FUND_LIMIT}", MaxAddFundsLimit.toFixed(2)), true);
                        retValue = false;
                    }

                    else if ((AmountToTopUp + TotalFundsAddedToday) > MaxAddFundsPerDayLimit) {
                        nc_DisplayErrorAndDescription($('#AmountToTopUp'), BillingInfoRes.error_contextual_MaxAddFundPerDayLimitReached.replace("{MAXIMUM_ADD_FUNDS_PER_DAY_LIMIT}", MaxAddFundsPerDayLimit.toFixed(2)).replace("{TOTAL_FUNDS_ADDED_TODAY}", TotalFundsAddedToday.toFixed(2)), true);

                        retValue = false;
                    }
                    if (retValue && $(value).val() != "" && $(value).val() != 0) {
                        nc_RemoveErrorAndDescription($('#AmountToTopUp'))
                    }
                }

            }
        });
        return retValue;


    }


}

// Maintain cursor position Start

function SetSelectionRange(input, selectionStart, selectionEnd) {
    if (input.setSelectionRange) {
        input.focus();
        input.setSelectionRange(selectionStart, selectionEnd);
    }
    else if (input.createTextRange) {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveEnd('character', selectionEnd);
        range.moveStart('character', selectionStart);
        range.select();
    }
}

function SetCaretToPositoin(input, pos) {
    SetSelectionRange(input, pos, pos);
}

function DoGetCaretPosition(oField) {
    var iCaretPos = 0;
    if (document.selection) {
        oField.focus();
        var oSel = document.selection.createRange();
        oSel.moveStart('character', -oField.value.length);
        iCaretPos = oSel.text.length;
    }
    else if (oField.selectionStart || oField.selectionStart == '0')
        iCaretPos = oField.selectionStart;
    return (iCaretPos);
}
// Maintain cursor position End
function ResendApproverEmailForSSL(obj) {
    var $input = $(obj);
    var certificateId = obj.getAttribute("certificateId");
    var url = "/domains/ssl/resendEmail/" + certificateId;
    var params = { "certificateId": certificateId };
    try {
        $.ajax({
            url: url,
            data: params,
            type: "POST",
            async: false,
            beforeSend: function (xhr) {
                ProgressLoadingIcon($input, true);
                console.log('Before AJAX call')
            },
            success: function (resultSet) {
                ProgressLoadingIcon($input, false);
                if (resultSet.Error == true) {
                    //nc_DisplayErrorAndDescription ($input, resultSet.Msg);
                    if (resultSet.Msg.indexOf('Error Code:-4') != -1) {
                        ErrorDisplayControlShow("Your certificate has been issued. You'll receive it soon. There's no need to resend the validation email.");
                    }
                    else {
                        ErrorDisplayControlShow(resultSet.Msg);
                    }
                    return false;
                }
                else {
                    $.magnificPopup.close();
                    location.reload();
                }
            },
            error: function (xhr, msg) {
                ProgressLoadingIcon($input, false);
            }
        });
    }
    catch (e) {
        return false;
    }
}


;
//EDIT DEFAULTS MANAGE CARD
function editDefaultsCardBeforeOpen(popup, obj) {
    var holder = "div#EditDefaultsCard div.content";
    try {
        $.ajax({
            type: 'GET',
            url: "/Profile/Billing/EditDefaultCardsAjaxCall",
            async: false,
            success: function (result) {
                $(holder).html($.parseHTML(result.CardDisplayHtml));
                $(holder + " .responsive-tooltip").responsiveTooltip();
                $(holder + " select.select2").select2({ minimumResultsForSearch: -1 });
                var showHideCheckbox = function () {

                    function initialize() {
                        $('.show-hide-checkbox .checkbox input[type="checkbox"]').on('click', clicked);
                        $('.show-hide-checkbox .checkbox input[type="checkbox"]:checked').parent().parent().parent().parent().parent().toggleClass('expanded');
                    }

                    function clicked(e) {
                        $(this).parent().parent().parent().parent().parent().toggleClass('expanded');
                    }

                    return {
                        initialize: initialize
                    };
                }();

                $(function () {
                    showHideCheckbox.initialize();
                });
            },
            error: function (result) {

            }
        });
    }
    catch (err) {

    }
}
function editDefaultsCardOpen(popup, obj) {

}
function editDefaultsCardBeforeClose(popup, obj) {

}
function editDefaultsCardPushClose(popup, obj) {

}


function CardListRemovePopUpBeforeOpen(popup, obj) {

    var listOfCheckBoxes = [];
    var listOfCardsToRemove = "";
    var removeCardFromSplitbutton = "";
    $("form input[type=\"checkbox\"].bulk:not(.select-all):checked").each(function (index, value) {
        listOfCheckBoxes.push($(this).val());
        if (listOfCardsToRemove != "")
            listOfCardsToRemove = listOfCardsToRemove + "|" + $(this).val();
        else
            listOfCardsToRemove = listOfCardsToRemove + $(this).val();
    });
    if (obj != null) {
        listOfCardsToRemove = "";
        listOfCheckBoxes = [];
        $('form input[type=\"checkbox\"]').removeAttr('checked');
        $("form input[type=\"checkbox\"].bulk:not(.select-all):first").trigger('click');
        $("form input[type=\"checkbox\"].bulk:not(.select-all):first").removeAttr('checked');
        listOfCardsToRemove = obj;
        removeCardFromSplitbutton = obj;
    }
    var holder = "#RemoveMultipleCardsPopup";
    try {
        $.ajax({
            type: 'POST',
            url: "/Profile/Billing/DisplayPopupForRemoveCards",
            data: { cardIds: listOfCheckBoxes, cardIdFromSplitButton: removeCardFromSplitbutton },
            async: false,
            success: function (result) {
                $(holder).html($.parseHTML(result.EditCardViewHtml));
                $(holder + " select.select2").select2({ minimumResultsForSearch: -1 });
                $("form.remove-selected-cards input[type=\"hidden\"].remove-selected-card-list").val(listOfCardsToRemove);
            },
            error: function (result) {

            }
        });
    }
    catch (err) {

    }
}

function CardListRemovePopUpAfterOpen(popup, obj) {
    SetRemoveCardsIfCheck();
}
//EDIT DEFAULTS MANAGE CARD

//EDIT PRIMARY EMAIL
function editPrimaryEmailBeforeOpen(popup, obj) {
    $("#NewEmail").val('');
    $("#AccountPassword").val('')
    nc_RemoveErrorAndDescription($('#AccountPassword'));
    nc_RemoveErrorAndDescription($('#NewEmail'));
    CloseSiteMsgOnPopupOpen();
}
function editPrimaryEmailOpen(popup, obj) {

}
function editPrimaryEmailBeforeClose(popup, obj) {

}
function editPrimaryEmailPushClose(popup, obj) {

}
//EDIT PRIMARY EMAIL

//CHANGE PASSWORD
function changePasswordBeforeOpen(popup, obj) {
    $("#NewPassword").val('');
    $("#ConfirmPassword").val('')
    $("#OldPassword").val('')
    $("#passStrengthLabel").text('')
    nc_RemoveErrorAndDescription($('#NewPassword'));
    nc_RemoveErrorAndDescription($('#ConfirmPassword'));
    $('#ConfirmPassword').parent("div").find("p.cont-msg").removeClass("success");
    nc_RemoveErrorAndDescription($('#OldPassword'));
    CloseSiteMsgOnPopupOpen();
}
function changePasswordOpen(popup, obj) {

}
function changePasswordBeforeClose(popup, obj) {

}
function changePasswordClose(popup, obj) {

}
//CHANGE PASSWORD


//SUPPORT PIN
function supportPinBeforeOpen() {
    CloseSiteMsgOnPopupOpen();
}
function supportPinOpen() {
    CloseSiteMsgOnPopupOpen();
}
function supportPinBeforeClose() {
    CloseSiteMsgOnPopupOpen();
}
function supportPinClose() {
    CloseSiteMsgOnPopupOpen();
}
//SUPPORT PIN

// DOMAIN CONTROL PANEL PUSH FUNCTION
function rightsAndTransferPushBeforeOpen(popup, obj) {
    var domainName = $("#DomainName").val();
    var NewDomainOwner = $("#domainPush").val();
    var vURL = "/Domains/DomainControlPanel/ValidateCurrentDestinationUser/push";

    var vparams = { "destinationOwnerName": NewDomainOwner, "domainName": domainName, "rightsandtransferaction": 'push' };
    try {
        $.ajax({
            url: vURL,
            data: vparams,
            type: "POST",
            async: false,
            beforeSend: function (xhr) {
                console.log('Before AJAX call')
            },
            success: function (result) {
                if (result != "" && result == "True") {                  
                    popup.st.el.data('mfpvalid', false);
                    location.reload();
                    return false;
                }
                else {
                    return true;
                }
            },
            error: function (xhr, msg) {
             
            }
        });
    }
    catch (e) {
        //alert(e);
        //ErrorDisplayControlShow(e.message)
        return false;
    }

    var returnVal = validateDomainRightsAndTransFerAdd($('#domainPush'));
    if ($("#AccountPassword").hasClass("loading error")) {
        $("#AccountPassword").removeClass("loading error");
        $("#AccountPassword").parent().find("p.error").removeClass("error");
    }
    if (!returnVal) {
        popup.st.el.data('mfpvalid', false);
    }
    else {
        CloseSiteMsgOnPopupOpen();
        $("#NewOwner").text($("#domainPush").val());
    }
}
function rightsAndTransferPushOpen(popup, obj) {
    $("#NewOwner").text($("#domainPush").val());
    console.log("open");
    //popup.st.el.data('mfpvalid', true);
}
function rightsAndTransferPushBeforeClose(popup, obj) {
    $("#NewOwner").text("");
    $("#AccountPassword").val("");
}
function rightsAndTransferPushClose(popup, obj) {
    $("#NewOwner").text("");
    $("#AccountPassword").val("");
}
// DOMAIN CONTROL PANEL PUSH FUNCTION


// DOMAIN CONTROL PANEL SET IPSTAG FUNCTION
function rightsAndTransferIPSTagBeforeOpen(popup, obj) {
    var $ipsTagControl = $('#NewIPSTag');
    nc_RemoveErrorAndDescription($ipsTagControl)
    $ipsTagControl.val('');
    $("textarea#description").val('');
    $("#chkContactInFuture").attr('checked', false);
    CloseSiteMsgOnPopupOpen();
    //$("#dropdownReasons").val("SelectOption").coreUISelect('update');

    /* set popup to not open */
    //popup.st.el.data('mfpvalid',false);
    /* end */
}
function rightsAndTransferIPSTagOpen(popup, obj) {
    console.log("rightsAndTransferIPSTag open");
}
function rightsAndTransfeIPSTagrBeforeClose(popup, obj) {
    console.log("rightsAndTransferIPSTag before close");
}
function rightsAndTransferIPSTagClose(popup, obj) {
    console.log("rightsAndTransferIPSTag close");
}
// DOMAIN CONTROL PANEL SET IPSTAG FUNCTION



// DOMAIN CONTROL PANEL SET GETAUTH_CODE FUNCTION
function rightsAndTransferGetAuthCodeBeforeOpen(popup, obj) {
    $("#auth_description").val("");
    $("#Auth_chkContactInFuture").prop("checked", false);
    var url = "/Domains/DomainControlPanel/AuthorizedUserForGetAuthcode";
    var DomaiNname = ReplaceScriptInjectionsWithspace($("#DomainName").val());
    //$("#DDL_Reasons").val("SelectOption").coreUISelect('update');
    var domainControlPanelURL = "/domains/domaincontrolpanel/";
    var params = { "Domainname": DomaiNname };
    try {
        $.ajax({
            url: url,
            data: params,
            type: "POST",
            async: false,
            beforeSend: function (xhr) {
                console.log('Before AJAX call')
            },
            success: function (result) {

                if (result == null) {
                    popup.st.el.data('mfpvalid', false);
                    location.reload();
                    return true;
                }
            },
            error: function (xhr, msg) {
                alert(msg);
            }
        });
    }
    catch (e) {
        return false;
    }
    CloseSiteMsgOnPopupOpen();
    console.log("Get Auth Code Before Open Popup Consol");
}
function rightsAndTransferGetAuthCodeOpen(popup, obj) {

    console.log("Get Auth Code Open Popup Consol");
    //popup.st.el.data('mfpvalid', true);
}
function rightsAndTransferGetAuthCodeBeforeClose(popup, obj) {

    console.log("Get Auth Code Before Close Popup Consol");
}
function rightsAndTransferGetAuthCodeClose(popup, obj) {

    console.log("Get Auth Code Close Popup Consol");
}
// DOMAIN CONTROL PANEL SET GETAUTH_CODE FUNCTION


//Add New Domain Manager Rights Function 
function AddNewManagerRightsBeforeOpen() {
    $("#AddNewDomainManager").val('');
    if ($("#AddNewDomainManager").hasClass("loading error")) $("#AddNewDomainManager").removeClass("loading error");
    if ($("#emailerror").hasClass("error")) $("#emailerror").removeClass("error")
    CloseSiteMsgOnPopupOpen();
}
//Add New Domain Manager Rights Function 

function CloseSiteMsgOnPopupOpen() {
    if ($(".site-msg").hasClass("hidden")) $(".site-msg").removeClass("hidden");
    if ($(".site-msg").hasClass("success")) $(".site-msg").removeClass("success");
    if ($(".site-msg").hasClass("alert")) $(".site-msg").removeClass("alert");
    if ($(".site-msg").hasClass("error")) $(".site-msg").removeClass("error");
    $(".site-msg").children("p.error-msg").html('');
    $(".site-msg").hide();
}
;
//Hangle the on click event of the On/Off toggle
function onOffToggleOnClickFunction(htmlId, toggleClass) {
    var toggleObject = $("." + toggleClass + ":first #" + htmlId);
    var urlToRedirect;
    if (toggleObject != undefined) {
        if ($(toggleObject).is(':checked')) {
            // ON //
            urlToRedirect = $(toggleObject).attr("toggleOnUrl");
        }
        else {
            // OFF //
            urlToRedirect = $(toggleObject).attr("toggleOffUrl");
        }
        if (urlToRedirect != "") {
            if ($(toggleObject).attr("httpmethod").toLowerCase() == "get") {
                window.location.replace(urlToRedirect);
            }
            else if ($(toggleObject).attr("httpmethod").toLowerCase() == "post") {
                var formToPost = $(toggleObject).attr("formToPost")
                var pathname = window.location.pathname;
                if (formToPost == null || formToPost == "") {
                    $('form:first').attr('action', urlToRedirect);
                    $('form:first').submit();
                }
                else {
                    $('form[name=' + formToPost + ']').attr('action', urlToRedirect);
                    $('form[name=' + formToPost + ']').submit();
                }
            }
        }
    }
}


;
/**
* This js consist of the script that helps to build Custom Controls. It has code for following Items
* Confirmation Control 
*/

/*
    ---- CONFIRMATION CONTROL SECTION ----
    data-confboxrequired="yes" data-confboxcontainer=".row"  data-confboxmessage="Are you sure want to do this?" data-href="/profile/remove/111"
    data-confboxlocation = inner / replace/ before/ after
*/

(function ($) {

    var confimYesText = "Yes";
    var confirmNoText = "No";

    var confirmationControl = function () {
        function initialize() {
            // Let mouse and touch events co-exist
            $('[data-confboxrequired="yes"]').click(ShowConfirmationBox);
        }

        function ShowConfirmationBox(event) {
            //Hide all confirm boxes
            $('.conf-box').not('.hidden').parent().parent().addClass('hidden');

            var confMessage = $(this).attr("data-confboxmessage");
            var actionUrl = $(this).attr("href");
            var containerToFind = $(this).attr("data-confboxcontainer");

            if (confMessage == "")
                return;   //No message to Display. Proceed Further.
            
            var confirmHtml = GetConfirmBoxElement(confMessage, confimYesText, confirmNoText, actionUrl);

            var msgLocation = $(this).attr("data-confboxlocation");

            CheckAndRemoveExistingConfirmBox(this, msgLocation, containerToFind);

            var elem = $(this).closest(containerToFind);
            var itemToHandle;
              if (elem == undefined) {
                  return;   //No element found as mentioned. Proceed further.
              }
              else {
                  if (msgLocation == "replace") {
                      $(elem).replaceWith(confirmHtml);
                  }
                  else if (msgLocation == "inner") {
                      $(elem).html(confirmHtml);
                  }
                  else if (msgLocation == "after") {
                      $(elem).after(confirmHtml);
                  }
                  else {

                      $(elem).before(confirmHtml);
                  }
              }            
            event.preventDefault();

        }

        function CheckAndRemoveExistingConfirmBox(thisElem, msgLocation, containerToFind)
        {
            var confirmBoxElement;
            if ((msgLocation == "replace") || (msgLocation == "inner")) {
                // We have nothing to do with this option.
                return;
            }
            else {
                var elem = $(thisElem).closest(containerToFind);
                if (elem != undefined) {
                    if (msgLocation == "after") {
                        confirmBoxElement = $(elem).next();
                    }
                    else {
                        confirmBoxElement = $(elem).prev();
                    }
                }
            }
            isExist = confirmBoxElement.hasClass("conf-box-parent");
            if (isExist) {
                $(confirmBoxElement).remove(); //.removeClass("hidden");
            }
        }

        function GetConfirmBoxElement(confirmationMessage, yesText, noText, url)
        {
            var confBox = "<div class=\"row conf-box-parent\"><div class=\"columns\"><div class=\"conf-box\"><p>";
            confBox += confirmationMessage + "</p><div class=\"actions\">";
            confBox += "<a href=\"";
            confBox +=  url + "\" class=\"btn btn-white btn-small-uppercase\">";
            confBox += yesText;
            confBox += "</a><a href=\"javascript:void(0);\" onclick=\"return closeConfirmBox(this);\" class=\"text-smaller\">";
            confBox += noText;
            confBox += "</a></div></div></div></div>";
            return confBox;
        }

        return {
            initialize: initialize
        };
    }();

    $(function () {
        confirmationControl.initialize();
    });

})(jQuery);;
function AddNewExistingCardSelectChange() {
    if ($(".credit-card-topup select#carddetails.add-edit-card").val() == "1") {
        DropDownChangeAjaxCall($(".credit-card-topup select#SelectedCard.existing-card").val(), false);
    }
    else {
        DropDownChangeAjaxCall("", true);
    }
    $(".site-msg a.close").trigger("click");
}

function LoadCardDetails() {
    if ($(".credit-card-topup select#carddetails.add-edit-card").val() == "1") {
        DropDownChangeAjaxCall($(".credit-card-topup select#SelectedCard.existing-card").val(), false);
    }
    else {
        DropDownChangeAjaxCall("", true);
    }
}

function ExistingCardsChange() {
    DropDownChangeAjaxCall($(".credit-card-topup div.card-form.existing select#SelectedCard.existing-card").val(), false);
}

function DropDownChangeAjaxCall(creditCardId, isAddCard) {
    //Ajax function
    var dataUrl = $("input[type='hidden']#existingCardAjaxCallUrl.existing-card-details").val();
    var params = '&selectedCardId=' + creditCardId +
                '&isAddCard=' + isAddCard;
    var holder = ".credit-card-topup div.card-form.add-edit-card";
    var subdetailsHolder = "div.card-form.existing div.row.add-margin div.columns:first p.no-input";
    try {
        $.ajax({
            type: 'GET',
            url: dataUrl,
            data: params,
            magicmessages: {
                modal: true,
                displayMessage: false
            },
            success: function (result) {
                if (result.EditCardViewHtml == typeof (undefined)) {
                    alert(result.data);
                    return false;
                }
                if (!isAddCard) {
                    $(subdetailsHolder).html($.parseHTML(result.CardDisplayHtml));
                }
                $(holder).html($.parseHTML(result.EditCardViewHtml));
                if ($(".credit-card-topup select#carddetails.add-edit-card").val() == "1") {
                    $(".credit-card-topup input[type='hidden']#creditcard_Id").val(result.SelectedCardId);
                    $(".credit-card-topup div.card-form.add-edit-card").hide();
                    $(".credit-card-topup div.card-form.existing").show();
                }
                else {
                    $(".credit-card-topup input[type='hidden']#creditcard_Id").val("");
                    $(".credit-card-topup div.card-form.existing").hide();
                    $(".credit-card-topup div.card-form.add-edit-card").show();
                }
                
                $(".credit-card-topup div.card-form select#CardUseAsOption").trigger("change");
                savecreditcardcheck('div.show-hide-checkbox');
                setcardtypeclass($('#cc_type'));
                SetFocusToFirstTextBoxInForm();
                $(".credit-card-topup .responsive-tooltip").responsiveTooltip();
                $("select").select2({ minimumResultsForSearch: 5 });
            },
            error: function (result) {
                    return false;
            }
        });
        if ($(".credit-card-topup select#carddetails.add-edit-card").val() == "1") {
            if ($("form.credit-card-topup").has("div.captcha-region#creditCardCaptcha") && $(".credit-card-topup div.captcha-region#creditCardCaptcha").is(":visible"))
                $(".credit-card-topup div.captcha-region#creditCardCaptcha").hide();
        }
        else {
            if ($("form.credit-card-topup").has("div.captcha-region#creditCardCaptcha")) {
                $(".credit-card-topup div.captcha-region#creditCardCaptcha").show();
                //trigger refresh captacha and fove text box value
                $(".credit-card-topup div.captcha-region#creditCardCaptcha div.footer div.btns span.reload a").trigger('click');
                Recaptcha.reload();
                $(".credit-card-topup div.captcha-region#creditCardCaptcha div.footer input[type='text']#recaptcha_response_field").val('');
            }
        }
    }
    catch (err) {
        return false;
    }
}
function ValidateAndFormPostdetails() {
    if ($(".credit-card-topup select#carddetails.add-edit-card").val() == "1")
        $(".credit-card-topup input[type='hidden']#creditcard_Id").val($(".credit-card-topup select#SelectedCard.existing-card").val());
    else
        $(".credit-card-topup input[type='hidden']#creditcard_Id").val("");
}
function CreditCardTopUpCancelClick() {
    if ($(".credit-card-topup div.card-form.add-edit-card").is(":visible")) {
        if ($(".credit-card-topup select#carddetails.add-edit-card option[value='1']").length > 0) {
            $(".credit-card-topup select#carddetails.add-edit-card").val('1');
            $(".credit-card-topup select#carddetails.add-edit-card").trigger('change');
            return false;
        }
    }
}
function CreditCardTopUpEditCardClick() {
    $(".credit-card-topup div.card-form.existing").hide();
    $(".credit-card-topup div.card-form.add-edit-card").show();
    SetFocusToFirstTextBoxInForm();
}

//---------------------Manage Cards Start----------------------//
function SetRemoveCardsIfCheck() {
    var count = 0;
    $("form input[type=\"checkbox\"].bulk").each(function (index, value) {
        if ($(this).is(":checked"))
            count++;
        if (count > 0)
            $("form input[type=\"hidden\"]#IsRemoveCardCheck").val("True");
        else
            $("form input[type=\"hidden\"]#IsRemoveCardCheck").val("False");
    });
}

function ManageCardsFilterReset() {
    $('.dropdown.icon-filter').on('reset', function (e) {
        $(this).parent().closest('form').submit()
    });
}


//function PostFormHelper() {
//    $('body').on("click", "[data-post-form]", function () {
//        if ($(this).attr('data-post-form') != null && $(this).attr('data-post-form') != "")
//            $($(this).attr('data-post-form')).submit();
//    });
//}

//---------------------Manage Cards End----------------------//

$(function () {
    if ($("form.credit-card-topup").length > 0) {
        LoadCardDetails();
        $("body").on('click', ".credit-card-topup .actions .credit-card-cancel", CreditCardTopUpCancelClick);
        $("body").on('click', ".credit-card-topup a#editLink.edit-link", CreditCardTopUpEditCardClick);
        $("body").on('change', ".credit-card-topup select#carddetails.add-edit-card", AddNewExistingCardSelectChange);
        $("body").on('change', ".credit-card-topup div.card-form.existing select#SelectedCard.existing-card", ExistingCardsChange);
        $("body").on('submit', "form.credit-card-topup", ValidateAndFormPostdetails)
    }
    if ($("form.manage-cards").length > 0) {
        $("body").on('click', "form input[type=\"checkbox\"].bulk", SetRemoveCardsIfCheck);
        ManageCardsFilterReset();
    }
});
function SetFocusToFirstTextBoxInForm()
{
    $("form input[type='text']:first").focus();
    //Set cursor after the last character
    if ($("form input[type='text']:first").val() != '')
        $("form input[type='text']:first").val($("form input[type='text']:first").val());
}



;

function RefreshHostingUsageStatistics() {
    var holder = "div#UsageStatisticsDiv.hosting-usage-statistics";
    var dataUrl = $(" input[type='hidden']#hostingStatisticsAjaxCallUrl.hosting-service-details").val();
    var refreshLink = "div#UsageStatisticsDiv a.edit-link.refresh-stats";
    var refreshMessage = "div#UsageStatisticsDiv p#refreshStatsMessage.refresh-stats";
    try {
        $(refreshLink).attr("disabled", true);
        $(refreshMessage).removeClass("success alert error").addClass("hidden").html("");
        $.ajax({
            type: 'GET',
            url: dataUrl,
            magicmessages: {
                modal: true,
                displayMessage: false
            },
            success: function (result) {
                if (result.Html == typeof (undefined) || result.MessageClass == 'error') {
                    $(refreshMessage).removeClass("success alert error hidden").addClass(result.MessageClass).html(result.Message);
                    return false;
                }
                else if (result.MessageClass == 'alert') {
                    $(refreshMessage).removeClass("success alert error hidden").addClass(result.MessageClass).html(result.Message);
                }
                $(holder).html($.parseHTML(result.Html));
                $(holder + " .responsive-tooltip").responsiveTooltip();
                $(refreshLink).removeAttr("disabled");
            },
            error: function (result) {
                $(refreshLink).removeAttr("disabled");
                return false;
            }
        });
    }
    catch (err) {
        $(refreshLink).removeAttr("disabled");
        return false;
    }
}

function HostingUpdateAutoRenew() {
    var holder = "input[type='checkbox']#IsAutoRenewEnabled.hosting-service-details.auto-renew";
    var dataUrl = $("input[type='hidden']#hostingAutoRenewAjaxCallUrl.hosting-service-details").val();
    var params = '&isOnAutoRenew=' + $(holder).is(":checked");
    var $mm = $('body').magicmessages();
    try {
        $(holder).attr("disabled", true);
        //$(holder).nextAll('p#autoRenewMessage').removeClass("success alert error").addClass("hidden").html("");
        $.ajax({
            type: 'GET',
            url: dataUrl,
            data: params,
            magicmessages: {
                modal: true,
                loadingStr: 'Updating auto renew preference...',
                successStr: 'Auto renew preference updated',
                errorStr: 'An error occoured while changing auto renew preference for the service',
                displayMessage: true,
                time: '2500',
            },
            success: function (result) {
                if (result.MessageClass == "error")
                {
                    $mm.displayError(result.Message);
                    if (!$(holder).is(":checked"))
                        $(holder).attr('checked', true);
                    else
                        $(holder).attr('checked', false);
                }
                else
                    $mm.displaySuccess(result.Message);
                //if (result.Message != "")
                //    $(holder).nextAll('p#autoRenewMessage').removeClass("success alert error hidden").addClass(result.MessageClass).html(result.Message);
                $(holder).removeAttr("disabled");
            },
            error: function (result) {
                $(holder).removeAttr("disabled");
                if (!$(holder).is(":checked"))
                    $(holder).attr('checked', true);
                else
                    $(holder).attr('checked', false);
                $mm.displayError(result.Message);
                //$(holder).nextAll('p#autoRenewMessage').removeClass("success alert error hidden").addClass("error").html("An error occoured while changing auto renew preference for the service");
                return false;
            }
        });
    }
    catch (err) {
        $(holder).removeAttr("disabled");
        if (!$(holder).is(":checked"))
            $(holder).attr('checked', true);
        else
            $(holder).attr('checked', false);
        $mm.displayError(result.Message);
        //$(holder).nextAll('p#autoRenewMessage').removeClass("success alert error hidden").addClass("error").html("An error occoured while changing auto renew preference for the service");
        return false;
    }
}

function HostingCancelServiceAction() {
    var serviceId = $("a[data-hosting-cancel-post][serviceid]").attr("serviceid");
    var domainName = $("a[data-hosting-cancel-post][domainname]").attr("domainname");
    var pageFrom = $("a[data-hosting-cancel-post][domainname]").attr("pagefrom");
    var productSubType = $("a[data-hosting-cancel-post][domainname]").attr("productsubtype");
    var params = { domainName: domainName, serviceId: serviceId, pageFrom: pageFrom, productSubType: productSubType };
    var path="/domains/hosting/cancel"
    var form = document.createElement("form");
    form.setAttribute("method", "POST");
    form.setAttribute("action", path);
    for (var key in params) {
        if (params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);
            form.appendChild(hiddenField);
        }
    }
    // To handle CSRF 
    ncCompliance.checkAndAddToken(form);
    document.body.appendChild(form);
    form.submit();
}

$(function () {
    if ($("div#hostingServiceDetails.hosting-service-details").length > 0) {
        $("body").on('click', "div#UsageStatisticsDiv a.edit-link.refresh-stats", RefreshHostingUsageStatistics);
        //setInterval(RefreshHostingUsageStatistics, 10000);
        $("div.has-checkbox").on('click', "input[type='checkbox']#IsAutoRenewEnabled.hosting-service-details.auto-renew", HostingUpdateAutoRenew);
        $("body").on('click', "a[data-hosting-cancel-post]", HostingCancelServiceAction);
    }
    if ($("input[type=\"hidden\"]#close-hosting-page").length > 0) {
        $('a.close-lightbox').click(function () {
            window.location.href = $("input[type=\"hidden\"]#close-hosting-page").val();
        });
    }
    
});;

$(function () {
    if ($("input[type=\"hidden\"]#message-details").length > 0) {
        var $mm = $('body').magicmessages();
        $('a#ReadUnread').click(function () {
            $.ajax({
                url: "/dashboard/messages/markMessagesAsUnRead",
                type: "post",
                data: { "referenceIds": $('input#referenceId[type="hidden"]').val() },
                dataType: "json",
                magicmessages: {
                    modal: true,
                    loadingStr: MessageRes.loading_Dynamic_MarkSingleUnead.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    successStr: MessageRes.success_Dynamic_SingleMessageUnread.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    errorStr: MessageRes.error_Dynamic_SingleMessageUnread.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    displayMessage: true,
                    time: '2500',
                },
                success: function (result) {
                    if (result.Result.IsSuccess == true) {
                        $mm.displaySuccess(MessageRes.success_Dynamic_SingleMessageUnread.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                        window.location.href = '/dashboard/messages/inbox';
                    }
                    else
                        $mm.displayError(result.Result.Message);
                },
                error: function (result) {
                    $mm.displayError(MessageRes.error_Dynamic_SingleMessageUnread.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                }
            });
        });

        $('a#SaveMessage').click(function () {

            $.ajax({
                url: "/dashboard/messages/saveMessagesList",
                type: "post",
                data: { "referenceIds": $('input#referenceId[type="hidden"]').val() },
                dataType: "json",
                magicmessages: {
                    modal: true,
                    loadingStr: MessageRes.loading_Dynamic_SaveSingle.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    successStr: MessageRes.success_Dynamic_SingleMessageSaved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    errorStr: MessageRes.error_Dynamic_SingleMessageSaved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    displayMessage: true,
                    time: '2500',
                },
                success: function (result) {
                    if (result.Result.IsSuccess == true) {
                        $('span#savedmessageicon').removeClass('hidden');
                        $('a#SaveMessage').addClass('hidden');
                        $mm.displaySuccess(MessageRes.success_Dynamic_SingleMessageSaved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                    }
                    else
                        $mm.displayError(result.Result.Message);
                },
                error: function (result) {
                    $mm.displayError(MessageRes.error_Dynamic_SingleMessageSaved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                }
            });
        });

        $('a#DeleteButton').click(function () {
            javascript: $.magnificPopup.close();
            $.ajax({
                url: "/dashboard/messages/removeMessagesList",
                type: "post",
                data: { "referenceIds": $('input#referenceId[type="hidden"]').val() },
                dataType: "json",
                magicmessages: {
                    modal: true,
                    loadingStr: MessageRes.loading_Dynamic_RemoveSingle.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    successStr: MessageRes.success_Dynamic_SingleMessageRemoved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    errorStr: MessageRes.error_Dynamic_SingleMessageRemoved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()),
                    displayMessage: true,
                    time: '2500',
                },
                success: function (result) {
                    if (result.Result.IsSuccess == true) {
                        $mm.displaySuccess(MessageRes.success_Dynamic_SingleMessageRemoved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                        window.location.href = '/dashboard/messages/inbox';
                    }
                    else
                        $mm.displayError(result.Result.Message);
                },
                error: function (result) {
                    $mm.displayError(MessageRes.error_Dynamic_SingleMessageRemoved.replace('{SUBJECT}', $('input[type="hidden"]#messageSubject').val()));
                }
            });
        });

        $('body').on("click", "a.close-lightbox", function () {
            window.location.href = '/dashboard/messages/inbox';
        });

        $('a#printPage').click(function () {
            window.print();
        })
    }
});

;
var showaspopup_sopener;
$("a.showaspopup").live('click', function (e) {
	e.preventDefault();
	var link = $(this);
	if (showaspopup_sopener && !showaspopup_sopener.closed) { showaspopup_sopener.focus(); }
	else {
		tbar = link.attr('rel');
		var sw = window.open(link.attr('href'), 'PopupWindow', tbar);
		if (sw) {
			sw.focus();
			showaspopup_sopener = sw;
		}
	}
});
;
